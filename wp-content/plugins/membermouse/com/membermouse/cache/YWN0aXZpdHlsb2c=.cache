/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */

class MM_ActivityLog extends MM_Entity
{
	public static $EVENT_TYPE_PAGE_ACCESS = "page-access";
	public static $EVENT_TYPE_LOGIN = "login";
	public static $EVENT_TYPE_EMAIL = "email";
	public static $EVENT_TYPE_ACCESS_RIGHTS = "access-rights";
	public static $EVENT_TYPE_BILLING = "billing";
	public static $EVENT_TYPE_AFFILIATE_TRACKING = "affiliate-tracking";
	
	public static $PARAM_PAGE_ID = "page-id";
	public static $PARAM_AFFILIATE_ID = "affiliate-id";
	public static $PARAM_SUBAFFILIATE_ID = "subaffiliate-id";
	public static $PARAM_EMAIL_TO_ADDRESS = "email-to-address";
	public static $PARAM_EMAIL_CC_ADDRESSES = "email-cc-addresses";
	public static $PARAM_EMAIL_FROM_ADDRESS = "email-from-address";
	public static $PARAM_EMAIL_SUBJECT = "email-subject";
	public static $PARAM_EMAIL_BODY = "email-body";
	public static $PARAM_ACCESS_EVENT = "access-event";
	public static $PARAM_ACCESS_ID = "access-id";
	public static $PARAM_ACCESS_STATUS = "access-status";
	public static $PARAM_ACCESS_STATUS_MESSAGE = "access-status-message";
	public static $PARAM_ACCESS_IS_COMPLIMENTARY = "access-is-complimentary";
	public static $PARAM_BILLING_EVENT = "billing-event";
	public static $PARAM_BILLING_ORDER_ID = "billing-order-id";
	public static $PARAM_BILLING_ORDER_NUMBER = "billing-order-number";
	public static $PARAM_BILLING_ORDER_IP_ADDRESS = "billing-order-ip-address";
	public static $PARAM_BILLING_ORDER_TOTAL = "billing-order-total";
	public static $PARAM_BILLING_ORDER_DISCOUNT = "billing-order-discount";
	public static $PARAM_BILLING_ORDER_PRODUCTS = "billing-order-products";
	public static $PARAM_BILLING_ORDER_COUPONS = "billing-order-coupons";
	public static $PARAM_BILLING_ORDER_PRORATIONS = "billing-order-prorations";
	public static $PARAM_BILLING_ORDER_AFFFILIATE_ID = "billing-order-affiliate-id";
	public static $PARAM_BILLING_ORDER_SUBAFFFILIATE_ID = "billing-order-subaffiliate-id";
	public static $PARAM_BILLING_NEXT_REBILL_DATE = "billing-next-rebill-date";
	public static $PARAM_AFFILIATE_TRACKING_EVENT = "affiliate-tracking-event";
	public static $PARAM_AFFILIATE_ORDER_NUMBER = "affiliate-order-number";
	public static $PARAM_AFFILIATE_ORDER_TOTAL = "affiliate-order-total";
	public static $PARAM_AFFILIATE_ORDER_IP_ADDRESS = "affiliate-ip-address";
	public static $PARAM_AFFILIATE_COUPON_CODE = "affiliate-coupon-code";
	public static $PARAM_AFFILIATE_PROVIDER_NAME = "affiliate-provider-name";
	public static $PARAM_AFFILIATE_TRACKING_URL = "affiliate-tracking-url";
	
	private $eventType = "";
	private $userId = "";
	private $url = "";
	private $referrer = "";
	private $additionalParams = array();
	private $ip = "";
	
	public function getData()
	{
		global $wpdb;
		$sql = "SELECT * FROM ".MM_TABLE_EVENT_LOG." WHERE id='".$this->id."'";
		$result = $wpdb->get_row($sql);

		if($result){
			$this->setData($result);
		}
		else {
			parent::invalidate();
		}
	}

	public function setData($data)
	{
		try 
		{
			$this->eventType = $data->event_type;
			$this->url = $data->url;
			$this->referrer = $data->referrer;
			$this->userId = $data->user_id;
			$this->ip = $data->ip;
			$this->additionalParams = $data->additional_params;
			
			if(!empty($this->additionalParams))
			{
				$this->additionalParams = unserialize($this->additionalParams);
			}
			else
			{
				$this->additionalParams = array();
			}

			parent::validate();
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}

	public function commitData()
	{
		global $wpdb;
		
		if(!MM_Employee::isEmployee($this->userId))
		{
			$activityLogData = array(
					"event_type" => $this->eventType,
					"url"        => $this->url,
					"referrer"	 => $this->referrer,
					"user_id"	 => $this->userId,
					"ip"		 => $this->ip,
					"date_modified"	=> MM_Utils::getCurrentTime()
			);
			if(intval($this->id)>0)
			{
				if(count($this->additionalParams) > 0)
				{
					$activityLogData['additional_params'] = serialize($this->additionalParams);
				}
				
				$whereClause = array("id"=>$this->id);
					
				$wpdb->update(MM_TABLE_EVENT_LOG,$activityLogData,$whereClause);
				return $this->id;
			}
			else
			{
				$activityLogData['date_added'] = MM_Utils::getCurrentTime();
				if(count($this->additionalParams) > 0) 
				{
					$activityLogData['additional_params'] = serialize($this->additionalParams);
				}
				
				$wpdb->insert(MM_TABLE_EVENT_LOG,$activityLogData);
				$this->id = $wpdb->insert_id;
				return $this->id;
			}
		}

		return false;
	}

	
	
	/** UTILITIES **/
	
	/**
	 * This method logs an event
	 * 
	 * @param MM_User $user the user to log an event for
	 * @param String $eventType the event type
	 * @param Array $params any parameters to store
	 */
	public static function log(MM_User $user, $eventType, $params=null)
	{
		if(!is_null($user) && $user->isValid())
		{
			$activityLog = new MM_ActivityLog();
			$activityLog->setEventType($eventType);
			$activityLog->setUserId($user->getId());
			
			switch($activityLog->getEventType()) 
			{
				case MM_ActivityLog::$EVENT_TYPE_LOGIN:			
					// update last login info on user
					$user->setLastLoginDate(MM_Utils::getCurrentTime());
					$user->commitData();

					$activityLog->setReferrer(MM_Utils::getReferrer());
					$activityLog->setIp(MM_Utils::getClientIPAddress());
					$activityLog->setUrl(MM_Utils::constructPageUrl());
					$activityLog->commitData();
					break;
					
				case MM_ActivityLog::$EVENT_TYPE_PAGE_ACCESS:
					if(!is_null($params) && is_array($params) && count($params) > 0)
					{
						$affiliateId = MM_Cookies::getAffiliateValue();
						$subaffiliateId = MM_Cookies::getSubAffiliateValue();
						
						if(!empty($affiliateId))
						{
							$params[self::$PARAM_AFFILIATE_ID] = $affiliateId;
						}
						
						if(!empty($subaffiliateId))
						{
							$params[self::$PARAM_SUBAFFILIATE_ID] = $subaffiliateId;
						}
						
						$activityLog->setAdditionalParams($params);
					}

					$activityLog->setReferrer(MM_Utils::getReferrer());
					$activityLog->setIp(MM_Utils::getClientIPAddress());
					$activityLog->setUrl(MM_Utils::constructPageUrl());
					
					// don't store access to login page
					if(strpos($activityLog->getUrl(), "wp-login") === false)
					{
						$activityLog->commitData();
					}
					break;
					
				case MM_ActivityLog::$EVENT_TYPE_BILLING:
					if(!is_null($params) && is_array($params) && count($params) > 0)
					{
						$activityLog->setAdditionalParams($params);
						
						if($params[self::$PARAM_BILLING_EVENT] == MM_Event::$PAYMENT_RECEIVED && 
							isset($params[self::$PARAM_BILLING_ORDER_IP_ADDRESS]))
						{
							$activityLog->setIp($params[self::$PARAM_BILLING_ORDER_IP_ADDRESS]);	
						}
						else if($params[self::$PARAM_BILLING_EVENT] == MM_Event::$BILLING_SUBSCRIPTION_UPDATED)
						{
							$activityLog->setIp(MM_Utils::getClientIPAddress());
						}
					}
						
					$activityLog->commitData();
					break;

				case MM_ActivityLog::$EVENT_TYPE_ACCESS_RIGHTS:
				case MM_ActivityLog::$EVENT_TYPE_AFFILIATE_TRACKING:
				case MM_ActivityLog::$EVENT_TYPE_EMAIL:
					if(!is_null($params) && is_array($params) && count($params) > 0)
					{
						$activityLog->setAdditionalParams($params);
					}
					
					$activityLog->commitData();
					break;
			}
			
		}
	}
	
	/**
	 * This method cleans up the activity log according to the options set by the user.
	 */
	public static function performCleanup()
	{
		$cleanupEnabled = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_ACTIVITY_LOG_CLEANUP_ENABLED);
		
		if($cleanupEnabled == "1")
		{
			$cleanupInterval = intval(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_ACTIVITY_LOG_CLEANUP_INTERVAL));
			
			global $wpdb;
			$sql = "DELETE FROM ".MM_TABLE_EVENT_LOG." WHERE date_added < (now() - INTERVAL {$cleanupInterval} day);";
			$wpdb->query($sql);
		}
	}
	
	/**
	 * This method checks if the member has reached their maximum allowable IP count within a 24 hour period.
	 * Each time a member logs in, the login event is logged along with their IP address. If the same member
	 * account has a number of IP addresses logging in within a 24 hour period this is a strong indication that
	 * the account credentials are being shared between multiple people. This method returns true if the member
	 * has surpassed the allowable IP address count within a 24 period.
	 * 
	 * @param String $memberId
	 * @return Boolean Rreturns true if the member has surpassed the allowable IP address count within a 24 period.
	 */
	public static function hasReachedMaxIPCount($memberId)
	{
		$enabled = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_ACCT_SECURITY_ENABLED);
			
		if($enabled == "1")
		{
			global $wpdb;
			
			$maxIPs = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_ACCT_SECURITY_MAX_IPS);
			$sql = "SELECT * FROM ".MM_TABLE_EVENT_LOG." WHERE event_type='".MM_ActivityLog::$EVENT_TYPE_LOGIN."' AND user_id='{$memberId}' and DATE(date_added)=DATE(NOW()) GROUP BY ip";
			$rows = $wpdb->get_results($sql);
	
			if(is_array($rows) && count($rows) > intval($maxIPs))
			{
				return true;
			}
		}
			
		return false;
	}
	
	public static function getPageAccessCount($memberId)
 	{
 		global $wpdb;
 	
 		$sql = "SELECT COUNT(DISTINCT url) as total FROM ".MM_TABLE_EVENT_LOG." WHERE event_type='".MM_ActivityLog::$EVENT_TYPE_PAGE_ACCESS."' AND user_id='{$memberId}' ";
 		$row = $wpdb->get_row($sql);
 			
 		if($row)
 		{
 			return $row->total;
 		}
 		else
 		{
 			return 0;
 		}
 	}
	
	public static function getLoginCount($memberId)
	{
		global $wpdb;
 	
 		$sql = "SELECT count(*) as total FROM ".MM_TABLE_EVENT_LOG." WHERE event_type='".MM_ActivityLog::$EVENT_TYPE_LOGIN."' AND user_id='{$memberId}'";
 		$row = $wpdb->get_row($sql);
 			
 		if($row)
 		{
 			return $row->total;
 		}
 		else
 		{
 			return 0;
 		}
	}
	
	public static function getLastLoginIpAddress($memberId)
	{
		global $wpdb;
		$sql = "SELECT ip FROM ".MM_TABLE_EVENT_LOG." WHERE ((event_type='".MM_ActivityLog::$EVENT_TYPE_LOGIN."') AND (user_id='{$memberId}')) ORDER BY date_added desc LIMIT 1;";
		$row = $wpdb->get_row($sql);
			
		if($row)
		{
			return $row->ip;
		}
		else
		{
			return "";
		}
	}
	
	public static function getEmailCount($memberId)
	{
		global $wpdb;
 	
 		$sql = "SELECT count(*) as total FROM ".MM_TABLE_EVENT_LOG." WHERE event_type='".MM_ActivityLog::$EVENT_TYPE_EMAIL."' AND user_id='{$memberId}'";
 		$row = $wpdb->get_row($sql);
 			
 		if($row)
 		{
 			return $row->total;
 		}
 		else
 		{
 			return 0;
 		}
	}
	
	
	public static function deleteMember($memberId)
	{
	    global $wpdb;
	    
	    $status = $wpdb->delete(MM_TABLE_EVENT_LOG, array('user_id' => $memberId));
	    //$wpdb->delete() returns rows affected on sucess, false on failure. We want to flatten that to true/false
	    return ($status !== false); 
	}
	
	
	public static function getEventsList()
	{
		$types = array(
			self::$EVENT_TYPE_ACCESS_RIGHTS => 'Access Rights',
			self::$EVENT_TYPE_AFFILIATE_TRACKING => 'Affiliate Tracking',
			self::$EVENT_TYPE_BILLING => 'Billing',
			self::$EVENT_TYPE_EMAIL => 'Email',
			self::$EVENT_TYPE_LOGIN => 'Login',
			self::$EVENT_TYPE_PAGE_ACCESS => 'Page Access'
		);
	
		return $types;
	}
	
	
	
	/** GETTERS/SETTERS **/
	
	public function getEventType()
	{
		return $this->eventType;
	}

	public function setEventType($val)
	{
		$this->eventType = $val;
	}

	public function getUrl()
	{
		return $this->url;
	}

	public function setUrl($val)
	{
		$this->url = $val;
	}

	public function getReferrer()
	{
		return $this->referrer;
	}

	public function setReferrer($val)
	{
		$this->referrer = $val;
	}

	public function getUserId()
	{
		return $this->userId;
	}

	public function setUserId($val)
	{
		$this->userId = $val;
	}

	public function getAdditionalParams($arr)
	{
		return $this->additionalParams;
	}

	public function setAdditionalParams($arr)
	{
		$this->additionalParams = $arr;
	}

	public function getIp()
	{
		return $this->ip;
	}

	public function setIp($val)
	{
		if(strlen($val)>255)
		{
			$val = substr($val,0,255);
		}
		$this->ip = $val;
	}
}
