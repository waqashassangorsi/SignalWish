abstract class MM_AbstractAffiliateProvider {
	
	private $name;
	private $token;
	
	public function handleOptionsDialog($optionData) {}
	public function configureFromOptions($optionData) { return new MM_Response(); }
	public function renderAdditionalOptions() { return ""; }
	public function getAffiliateTrackingId() { return ""; }
	public function getSubaffiliateTrackingId() { return ""; }
	public function getPayoutProfiles() {}
	public function createAffiliateAccount($userData) { return new MM_Response(); }
	public function trackCommission(MM_CommissionProfile $commissionProfile, $affiliateId, $orderNumber, $orderData, $orderTotal, $isRebill) { return new MM_Response(); }
	public function reverseCommission($affiliateId, $orderNumber) { return new MM_Response(); }
	public function supportsFeature($featureConst) { return false; }
	
	/**
	 * 
	 * Default constructor for all providers. 
	 * @param String $provider_info An associative array of provider information from the data store
	 */
	public function __construct($provider_info) 
	{
		$this->name = $provider_info->provider_name;
		$this->token = $provider_info->provider_token;
	}
	
	/**
	 * Returns an object capable of rendering the default options dialog
	 * @param Array $post Any data posted necessary to draw the options dialog
	 * @return Object of type MM_AffiliateProviderDialog representing the dialog to draw
	 */
	public function renderOptionsDialog($post) 
	{
		$form = new MM_AffiliateProviderDialog();
		return $form;
	}
	
	/**
	 * Returns the displayable name of the provider
	 */
	public function getName() 
	{
		return $this->name;
	}
	
	/**
	 * Sets the displayable name of the provider
	 * @param String $newName
	 */
	public function setName($newName) 
	{
		$this->name = $newName;
	}
	
	/**
	 * Returns the provider token
	 */
	public function getToken() 
	{
		return $this->token;
	}
	
	/**
	 * Sets the provider toekn
	 * @param String $newToken
	 */
	public function setToken($newToken) 
	{
		$this->token = $newToken;
	}
	
	public function persistProfileMappings($provider_id, $map) 
	{
		global $wpdb;
		
		MM_Transaction::begin();
		try 
		{
			$result = $wpdb->query( $wpdb->prepare("DELETE FROM ".MM_TABLE_AFFILIATE_PROVIDER_MAPPINGS." WHERE affiliate_provider_id = %d", $provider_id));
			if($result === false)
		 	{
		 		MM_Transaction::rollback();
		 		return new MM_Response("ERROR: unable to remove the existing membership level from list mappings", MM_Response::$ERROR);
		 	}
			foreach($map as $membership_id=>$profile_id) 
			{
				$profile_id = html_entity_decode($profile_id,ENT_COMPAT | ENT_HTML401, "UTF-8");
				$sql = "INSERT INTO ".MM_TABLE_AFFILIATE_PROVIDER_MAPPINGS." SET ".
					   "membership_level_id = %d,".
					   "payout_profile_id = %s,".
					   "affiliate_provider_id = %d";
				$result = $wpdb->query( $wpdb->prepare($sql, $membership_id, html_entity_decode($profile_id,ENT_COMPAT | ENT_HTML401, "UTF-8"), $provider_id));
				if($result === false)
			 	{
			 		MM_Transaction::rollback();
			 		return new MM_Response("ERROR: unable to add new membership level to payout profile mapping (".$sql.")", MM_Response::$ERROR);
			 	}
				
			}
		}
		catch (Exception $ex) 
		{
			MM_Transaction::rollback();
	 		return new MM_Response("ERROR: unable to map membership levels to affiliate provider payout profiles", MM_Response::$ERROR);
		}
		MM_Transaction::commit();
		return new MM_Response();
	}
	
	public function getProfileIdForMembershipLevel($membershipId) 
	{
		global $wpdb;
		
		$provider_entity = new MM_AffiliateProvider();
		$provider_entity->setToken($this->getToken());
		$provider_entity->getData();
		if ($provider_entity->isValid())
		{
			$result = $wpdb->get_var($wpdb->prepare("SELECT payout_profile_id FROM ".MM_TABLE_AFFILIATE_PROVIDER_MAPPINGS." WHERE membership_level_id = %d and affiliate_provider_id = %d", $membershipId, $provider_entity->getId()));
			$profileId = ($result != null)?$result:"";
			return new MM_Response($profileId, MM_Response::$SUCCESS);
		}
		else 
		{
			//should never happen
			return new MM_Response("ERROR: unable to retrieve information for the affiliate provider", MM_Response::$ERROR);
		}
	}
	
	/**
	 * Makes an HTTP connection to a remote URL and returns the response
	 *
	 * @param String $remoteUrl The remote URL to connect to
	 * @param String $method The type of connection to make. Only POST or GET http verbs currently supported, value is POST by default
	 * @param array/String $data (optional) An array of key/value pairs, or a string, to POST to the remote URL when the connectionMethod is set to POST. If this parameter is an array, it is converted to a string suitable for POSTing and url encoded
	 * @param array $options (optional) An array of curloptions to pass directly to the underlying curl implementation
	 *
	 * @return MM_Response Wrapper around the remote response, with the raw response in the MM_Response message on success, and a descriptive error message in the response message otherwise.
	 */
	protected function doHTTPRequest($remoteUrl, $method="POST", $data="", $options=array())
	{
		$post_string = "";
		if (is_array($data))
		{
			foreach( $data as $key => $value )
			{
				$post_string .= "$key=" . urlencode($value) . "&";
			}
			$post_string = rtrim( $post_string, "& " );
		}
		else
		{
			$post_string = $data;
		}
		
		$request = curl_init($remoteUrl); // initiate curl object
	
		$defaultOptions = array(CURLOPT_HEADER=>FALSE,
				CURLOPT_RETURNTRANSFER=>1,
				CURLOPT_SSL_VERIFYPEER=>0
		);
		$options += $defaultOptions; //merge in the defaults, but don't override explicitly set options
	
		$method = strtoupper($method);
		if($method == 'POST')
		{
			$postOptions = array(CURLOPT_CUSTOMREQUEST  => "POST",
								 CURLOPT_POSTFIELDS     => $post_string);
			//TODO: PHP 5.2 workaround - remove once support is dropped
			if (version_compare(PHP_VERSION, '5.3.2') >= 0)
			{
				$postOptions[CURLOPT_POSTREDIR] = 7;
			}
			if (!ini_get('open_basedir'))
			{
				$postOptions[CURLOPT_FOLLOWLOCATION] = true;
			}
			foreach ($postOptions as $curlOption=>$curlOptionValue)
			{
				if (!isset($options[$curlOption]))
				{
					$options[$curlOption] = $curlOptionValue;
				}
			}
		}
		else if ($method != 'GET')
		{
			if (!isset($options[CURLOPT_CUSTOMREQUEST]))
			{
				$options[CURLOPT_CUSTOMREQUEST] = $post_string;
			}
		}
	
		curl_setopt_array($request, $options);
	
		$raw_response = curl_exec($request); // execute curl post and store results in $raw_response
	
		$curl_error = curl_error($request);
	
		$responseObj = new MM_Response();
		$responseObj->addData("http_code",curl_getinfo($request,CURLINFO_HTTP_CODE));
	
		curl_close($request); // close curl object
	
		if ($curl_error == "")
		{
			$responseObj->message = $raw_response;
			$responseObj->addData("url", $remoteUrl."?".$post_string);
			return $responseObj;
		}
		else
		{
			$responseObj->message = $curl_error;
			$responseObj->type = MM_Response::$ERROR;
			return $responseObj;
		}
	}
}
