/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_TransactionHistoryView extends MM_RBACGeneralEmployeeView
{
	public static $MM_JSACTION_SAVE_TRANSACTION = "saveTransaction";
	public static $MM_JSACTION_SHOW_EDIT_TRANSACTION = "showEditDialog";
	public static $MM_JSACTION_RESEND_AFFILIATE_COMMISSION = "resendAffiliateCommission";
	public static $MM_JSACTION_REFUND_TRANSACTION = "refundTransaction";
	

	public function __construct()
	{
		parent::__construct();
	}
	
 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE_TRANSACTION:
					return $this->saveTransaction($post);
					
				case self::$MM_JSACTION_SHOW_EDIT_TRANSACTION:
					return $this->showEditTransactionDialog($post);
					
				case self::$MM_JSACTION_RESEND_AFFILIATE_COMMISSION:
					return $this->resendAffiliateCommission($post);
					
				case self::$MM_JSACTION_REFUND_TRANSACTION:
					return $this->refundTransaction($post);
				
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function saveTransaction($post)
	{
		if(!isset($post["order_id"]))
		{
			return new MM_Response("Unable to update transaction. Invalid order passed.", MM_Response::$ERROR);
		}
		
		if(!isset($post["order_item_id"]))
		{
			return new MM_Response("Unable to update transaction. Invalid order item passed.", MM_Response::$ERROR);
		}
		
		$order = MM_Order::create($post["order_id"]);
			
		if($order->isValid())
		{
			if(isset($post["mm_affiliate_id"]))
			{
				$order->setAffiliateId($post["mm_affiliate_id"]);
			}
			
			if(isset($post["mm_sub_affiliate_id"]))
			{
				$order->setSubAffiliateId($post["mm_sub_affiliate_id"]);
			}
			
			$result = $order->commitData();
					
			if($order->isValid())
			{
				$orderItem = MM_OrderItem::create($post["order_item_id"]);
				
				do_action(MM_Event::$AFFILIATE_INFO_CHANGED, MM_Event::packageOrderData($order->getCustomer()->getId(), $order->getId(), $orderItem->getId()));
			}
			
			if(MM_Response::isSuccess($result))
			{
				return new MM_Response("Transaction updated successfully");
			}
			else
			{
				return $result;
			}
		}
	}
	
	public function resendAffiliateCommission($post)
	{	
		global $wpdb;

		if(!isset($post["user_id"]))
		{
			return new MM_Response("Unable to send affiliate commission. Invalid user ID passed.", MM_Response::$ERROR);
		}
		
		if(!isset($post["order_id"]))
		{
			return new MM_Response("Unable to send affiliate commission. Invalid order passed.", MM_Response::$ERROR);
		}
	
		if(!isset($post["order_item_id"]))
		{
			return new MM_Response("Unable to send affiliate commission. Invalid order item passed.", MM_Response::$ERROR);
		}
	
		if(!isset($post["transaction_id"]))
		{
			return new MM_Response("Unable to send affiliate commission. Invalid transaction ID passed.", MM_Response::$ERROR);
		}
		
		$affiliateService = MM_AffiliateProviderFactory::getActiveProvider();
		
		if($affiliateService->supportsFeature(MM_AffiliateProviderFeatures::COMMISSION_TRACKING))
		{	
			$orderData = MM_Event::packageOrderData($post["user_id"], $post["order_id"], $post["order_item_id"], $post["transaction_id"]);
			
			// determine if transaction in an initial or rebill payment
			$sql = "SELECT transaction_type FROM ".MM_TABLE_TRANSACTION_LOG." WHERE id = '{$post["transaction_id"]}';";
			$result = $wpdb->get_row($sql);
			
			if(!is_null($result) && isset($result->transaction_type))
			{
				$affiliateController = new MM_AffiliateController();
				$isRebill = false;
				$doSendCommission = false;
				
				if($result->transaction_type == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT)
				{
					$isRebill = true;
				}
				
				// determine if commission should be sent based on commission profile
				$commissionProfile = null;
				$orderItem = MM_OrderItem::create($post["order_item_id"]);
				
				if($orderItem->isValid())
				{
					$product = MM_Product::create($orderItem->getItemId());

					if($product->isValid())
					{
						$commissionProfile = $product->getCommissionProfile();
						
						if(!$commissionProfile->isValid())
						{
							$commissionProfile = null;
						}
					}
				}
				
				if(!is_null($commissionProfile))
				{
					if(!$isRebill)
					{
						if($commissionProfile->initialCommissionEnabled())
						{
							$doSendCommission = true;
						}
						else
						{
							return new MM_Response("Initial commissions are not enabled for the commission profile associated with this product.", MM_Response::$ERROR);
						}
					}
					else
					{
						if($commissionProfile->rebillCommissionsEnabled())
						{
							$doSendCommission = true;
						}
						else 
						{
							return new MM_Response("Rebill commissions are not enabled for the commission profile associated with this product.", MM_Response::$ERROR);
						}
					}
				}
				else 
				{
					return new MM_Response("Unable to find commission profile.", MM_Response::$ERROR);
				}
				
				if($doSendCommission)
				{
					$affiliateController->trackCommission($orderData, $isRebill);
					return new MM_Response("Affiliate commission request sent");
				}
			}
		}
		else
		{
			return new MM_Response("Unable to send affiliate commission. The active affiliate service doesn't support commission tracking.", MM_Response::$ERROR);
		}
		
		return new MM_Response("Unable to send affiliate commission.", MM_Response::$ERROR);
	}
	
	public function showEditTransactionDialog($post)
	{
		if(!isset($post["order_id"]))
		{
			return new MM_Response("Error editing transaction. Order ID is required.", MM_Response::$ERROR);
		}
		
		if(!isset($post["order_item_id"]))
		{
			return new MM_Response("Error editing transaction. Order Item ID is required.", MM_Response::$ERROR);
		}
		
		if(!isset($post["transaction_id"]))
		{
			return new MM_Response("Error editing transaction. Transaction ID is required.", MM_Response::$ERROR);
		}
			
		$info = new stdClass();
		$info->orderId = $post["order_id"];
		$info->orderItemId = $post["order_item_id"];
		$info->transactionId = $post["transaction_id"];
		
		$data = MM_TEMPLATE::generate(MM_MODULES."/".MM_MODULE_MEMBER_DETAILS_TRANSACTION_HISTORY.".dialog.php", $info);
		
		return new MM_Response($data);		
	}
	
	public function refundTransaction($post)
	{
		if (!empty($post["transaction_id"]))
		{
			$transactionId = $post["transaction_id"];
			$transactionLookupResponse = MM_TransactionLog::getTransactionInfo($transactionId);
			if (MM_Response::isError($transactionLookupResponse))
			{
				return $transactionLookupResponse;
			}
			$transactionInfo = $transactionLookupResponse->message;
			$paymentService = MM_PaymentServiceFactory::getPaymentServiceById($transactionInfo->payment_service_id);
			if (is_null($paymentService))
			{
				return new MM_Response("Unable to refund transaction: Invalid payment method");
			}
			$refundPaymentServiceResponse = $paymentService->refundTransaction($transactionId);
			//translate the paymentServiceResponse into an MM_Response. All non-success states become errors
			if (MM_PaymentServiceResponse::isSuccess($refundPaymentServiceResponse))
			{
				return new MM_Response("Refund was successful");
			}
			else
			{
				return new MM_Response($refundPaymentServiceResponse->getMessage(), MM_Response::$ERROR);
			}
		}
		else
		{
			//shouldnt ever happen through the interface
			return new MM_Response("Unable to refund transaction: No transaction id was supplied", MM_Response::$ERROR);
		}
	}
 	
 	public function getViewData($userId,MM_DataGrid $dg=null,$startDate=null)
	{
		global $wpdb;
		
		//tables used in the master query. Placing the constants into variables allows them to be embedded into the string, aiding in readability
		$transactionsTable    = MM_TABLE_TRANSACTION_LOG;
		$paymentServicesTable = MM_TABLE_PAYMENT_SERVICES;
		$ordersTable          = MM_TABLE_ORDERS;
		$orderItemsTable      = MM_TABLE_ORDER_ITEMS;
		
		$desiredTransactionTypes = implode(",",array(MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT,MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT,MM_TransactionLog::$TRANSACTION_TYPE_REFUND));
		$refundTransctionType = MM_TransactionLog::$TRANSACTION_TYPE_REFUND;

		// get total of query
		$queryWithTotal = "SELECT count(*) as total  ";
		$queryWithTotal .= "FROM {$transactionsTable} t LEFT JOIN {$paymentServicesTable} ps on (t.payment_service_id =  ps.id) ".
				"LEFT JOIN {$ordersTable} o on (t.order_id = o.id) ".
				"LEFT JOIN {$orderItemsTable} oi on (t.order_item_id = oi.id) ".
				"WHERE (t.transaction_type IN ({$desiredTransactionTypes})) AND (o.user_id = %s) ";
		$queryWithTotal = $wpdb->prepare($queryWithTotal,$userId);
		$countResult = $wpdb->get_row($queryWithTotal);
		
		// place total result into master query
		$masterQuery = "SELECT {$countResult->total} as 'total', o.id as orderId, o.order_number as orderNumber, t.id as mmTransId, t.is_test, o.user_id, t.order_item_id, t.transaction_date as date, ifnull(oi.description,'multiple products') as productName, oi.item_id as productId, oi.recurring_discount as recurringDiscount, ".
					   "t.amount, t.currency, t.transaction_type as transType, ps.name as pymtServiceName, ps.token as pymtServiceToken, o.affiliate_id as affiliateId, o.sub_affiliate_id as subAffiliateId, ".
					   "if(((t.refund_id IS NOT NULL) AND (t.transaction_type != {$refundTransctionType})),true,false) as isRefunded ".
					   "FROM {$transactionsTable} t LEFT JOIN {$paymentServicesTable} ps on (t.payment_service_id =  ps.id) ".
					   "LEFT JOIN {$ordersTable} o on (t.order_id = o.id) ".
					   "LEFT JOIN {$orderItemsTable} oi on (t.order_item_id = oi.id) ".
					   "WHERE (t.transaction_type IN ({$desiredTransactionTypes})) AND (o.user_id = %s) ";
		$masterQuery = $wpdb->prepare($masterQuery,$userId); 
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
		{ 
			$masterQuery .= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		 
		$masterQuery .=" ".$dg->getLimitSql(); 
		$results = $wpdb->get_results($masterQuery);
		
		if (count($results) > 0)
		{
			//retrieve coupon info with one query - first divide the results up by order id. Using order id as the key eliminates duplicate order ids and gives us an easy reference back to the transaction rows
			$orderIndex = array();
			foreach ($results as $rowObject)
			{
				if (!is_null($rowObject->orderId))
				{
					$orderIndex[$rowObject->orderId][] = $rowObject;
				}
			}
			
			//now retrieve all of the order items representing coupons, joined with the coupon table, for each of the orders the above transactions belong to
			$orderIdstring = implode(",",array_keys($orderIndex));
			$couponsTable = MM_TABLE_COUPONS;
			$couponType = MM_OrderItem::$ORDER_ITEM_TYPE_COUPON;
			$couponSql = "SELECT oi.order_id, oi.total as discountAmount, c.coupon_name, c.recurring_billing_setting FROM {$orderItemsTable} oi LEFT JOIN {$couponsTable} c ".
						 "ON (oi.item_id = c.id) WHERE (oi.item_type = '{$couponType}') AND (oi.order_id IN ({$orderIdstring}))";
			$couponResults = $wpdb->get_results($couponSql);
			
			//finally, loop through the coupons and add their data to the transaction rows. Essentially we are deriving which transactions represent payments for items that had coupons applied
			//NOTE: This assumes that if a coupon exists in an order, there is only one product in that order. The moment multiple products are allowed in a single order that assumption becomes invalid, and this code becomes unreliable (for coupon detection).
			foreach ($couponResults as $additionalCouponData)
			{
				$currentOrderId = $additionalCouponData->order_id;
				foreach ($orderIndex[$currentOrderId] as $currentTransaction)
				{
					switch ($currentTransaction->transType)
					{
						case MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT:
							$currentTransaction->couponApplied = true;
							$currentTransaction->couponName = $additionalCouponData->coupon_name;
							$currentTransaction->couponDiscount = abs(floatval($additionalCouponData->discountAmount));
							break;
						case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:
							if ($additionalCouponData->recurring_billing_setting == "all")
							{
								$currentTransaction->couponApplied = true;
								$currentTransaction->couponName = $additionalCouponData->coupon_name;
								$currentTransaction->couponDiscount = "";
								
								if(!is_null($currentTransaction->recurringDiscount))
								{
									$currentTransaction->couponDiscount = $currentTransaction->recurringDiscount;
								}
								else 
								{
									$product = new MM_Product($currentTransaction->productId);
									
									if($product->isValid())
									{
										$currentTransaction->couponDiscount = $product->getPrice(false) - abs(floatval($currentTransaction->amount));
									}
								}
								break;
							}
							//break is intentionally in the if. If that condition isnt matched, we want it to go to the default
						default:
							$currentTransaction->couponApplied = false;
							$currentTransaction->couponName = "";
							$currentTransaction->couponDiscount = 0.00;
							break;
					}
				}
			}
			
			// retrieve all order items representing prorations and other discounts
			$orderIdstring = implode(",",array_keys($orderIndex));
			$prorationType = MM_OrderItem::$ORDER_ITEM_TYPE_PRORATION;
			$otherDiscountType  = MM_OrderItem::$ORDER_ITEM_TYPE_DISCOUNT;
			$prorationDiscountSql = "SELECT oi.order_id, oi.total as discountAmount,oi.item_type FROM {$orderItemsTable} oi WHERE (oi.item_type IN ('{$prorationType}','{$otherDiscountType}')) AND (oi.order_id IN ({$orderIdstring}))";
			$prorationDiscountResults = $wpdb->get_results($prorationDiscountSql);

			//finally, loop through the prorations and add their data to the transaction rows.
			foreach ($prorationDiscountResults as $additionalTransactionData)
			{
			    $currentOrderId = $additionalTransactionData->order_id;
				foreach ($orderIndex[$currentOrderId] as $currentTransaction)
				{
					switch ($currentTransaction->transType)
					{
						case MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT:
						    if ($additionalTransactionData->item_type == $prorationType)
						    {
    							$currentTransaction->prorationApplied = true;
    							$currentTransaction->prorationAmount = abs(floatval($additionalTransactionData->discountAmount));
						    }
						    else if ($additionalTransactionData->item_type == $otherDiscountType)
						    {
						        $currentTransaction->otherDiscountApplied = true;
						        $currentTransaction->otherDiscountAmount = abs(floatval($additionalTransactionData->discountAmount));
						    }
							break;
						
						case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:
						default:
						    $currentTransaction->prorationApplied = false;
						    $currentTransaction->prorationAmount = 0.00;
						    $currentTransaction->otherDiscountApplied = false;
						    $currentTransaction->otherDiscountAmount = 0.00;
						    break;
					}
				}
			}
		}
		return $results;
	}
	
	public function generateRows($data, $renderForAdmin=true)
	{
		global $wpdb;
		
		$rows = array();
		
		if($renderForAdmin)
		{
			$dateFormat = "M j, Y g:i a";
		}
		else
		{
			$dateFormat = "M j, Y";
		}
		
		$crntPaymentService = null;
		$crntAffiliateService = null;
		$affiliateActivityLogEntries = null;
		
		foreach($data as $item)
		{
			// Transaction Type
			$pymtMethodInfoStr = "";
			
			if($renderForAdmin)
			{
				$pymtMethodInfoStr = !empty($item->pymtServiceName)?"\nPayment Method: ".$item->pymtServiceName."\n":"";
			}
			
			if (($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT) || ($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT))
			{
				$transType = MM_Utils::getIcon('money', 'green', '1.4em', '2px', "Successful Payment {$pymtMethodInfoStr}");
			}
			else if ($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_REFUND)
			{
				$transType = MM_Utils::getIcon('money', 'red', '1.4em', '2px', "Successful Refund {$pymtMethodInfoStr}");
			}
			else
			{
				$transType = MM_NO_DATA;
			}
			
			if($item->is_test)
			{
				$transType .= MM_Utils::getIcon('flask', 'grey', '1.3em', '2px', "Test Transaction", "padding-left:4px;");
			}
				
			if($renderForAdmin)
			{
				// Affiliate Info
				$affiliateInfo = "";
				if (!empty($item->affiliateId) || !empty($item->subAffiliateId))
				{
					$affiliateInfoStr = "";
			
					if (!empty($item->affiliateId))
					{
						$affiliateInfoStr .= "Affiliate ID: ".$item->affiliateId."\n";
					}
			
					if (!empty($item->subAffiliateId))
					{
						$affiliateInfoStr .= "Sub-affiliate ID: ".$item->subAffiliateId."\n";
					}
			
					$affiliateInfo = MM_Utils::getAffiliateIcon($affiliateInfoStr);
				}
				
				$actions = "";
				
				if(($item->isRefunded != '1') && (($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT) || ($item->transType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT)))
				{
					$actions = '<a title="Issue Refund" onclick="mmjs.issueRefund('.$item->mmTransId.',\''.number_format(abs($item->amount),2,'.','').'\')" style="cursor:pointer;">'.MM_Utils::getIcon('undo', 'red', '1.3em', '2px').'</a>';
					
					// add affiliate service-specific actions
					if(!empty($item->affiliateId))
					{
						if(is_null($crntAffiliateService))
						{
							$crntAffiliateService = MM_AffiliateProviderFactory::getActiveProvider();
						}
						
						if(is_null($affiliateActivityLogEntries))
						{
							// retrieve affiliate activity log entries for the current user from the database
							$eventLogTable = MM_TABLE_EVENT_LOG;
							$affiliateEvent = MM_ActivityLog::$EVENT_TYPE_AFFILIATE_TRACKING;
							$affiliateActivitySql = "SELECT * FROM {$eventLogTable} WHERE user_id = '{$item->user_id}' AND event_type = '{$affiliateEvent}' ";
							$results = $wpdb->get_results($affiliateActivitySql);
							
							if($results)
							{
								$affiliateActivityLogEntries = array();
								
								foreach($results as $activityLogEntry)
								{
									$params = unserialize($activityLogEntry->additional_params);
									
									if($params[MM_ActivityLog::$PARAM_AFFILIATE_TRACKING_EVENT] == MM_AffiliateController::$AFFILIATE_EVENT_TRACK_INITIAL_COMMISSION
										|| $params[MM_ActivityLog::$PARAM_AFFILIATE_TRACKING_EVENT] == MM_AffiliateController::$AFFILIATE_EVENT_TRACK_REBILL_COMMISSION)
									{
										$affiliateActivityLogEntries[] = $params;
									}
								}
							}
						}
						
						if($crntAffiliateService->supportsFeature(MM_AffiliateProviderFeatures::COMMISSION_TRACKING))
						{
							$showAffiliateCommissionBtn = true;
							
							// check if commission has already been sent and logged in the activity log
							if(!is_null($affiliateActivityLogEntries))
							{
								foreach($affiliateActivityLogEntries as $activityLogEntry)
								{
									$crntAffilateId = $item->affiliateId;
									$crntOrderNumber = $item->orderNumber."-".$item->mmTransId;
									
									if($crntOrderNumber == $activityLogEntry[MM_ActivityLog::$PARAM_AFFILIATE_ORDER_NUMBER] 
											&& $crntAffilateId == $activityLogEntry[MM_ActivityLog::$PARAM_AFFILIATE_ID])
									{
										$showAffiliateCommissionBtn = false;
										break;
									}
								}
							}
							
							if($showAffiliateCommissionBtn)
							{
								$actions .= ' <a title="Send Affiliate Commission to '.$crntAffiliateService->getName().'" onclick="mmjs.resendAffiliateCommission('.$item->user_id.', '.$item->orderId.', '.$item->orderNumber.', '.$item->order_item_id.', '.$item->mmTransId.', '.$item->affiliateId.')" style="cursor:pointer;">'.MM_Utils::getIcon('paper-plane', 'light-blue', '1.3em', '2px').'</a>';
							}
						}
					}
					
					// add advanced transaction tools if the customer has access to advanced subscription mgmt features
					if((MM_MemberMouseService::hasPermission(MM_MemberMouseService::$FEATURE_ADV_SUBSCRIPTION_MGMT) == MM_MemberMouseService::$ACTIVE))
					{
						$editActionUrl = "href='javascript:mmjs.editTransaction({$item->orderId}, {$item->order_item_id}, {$item->mmTransId});'";
						$actions .= " ".MM_Utils::getEditIcon("Edit Transaction", '', $editActionUrl);
					}
					else if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$FEATURE_ADV_SUBSCRIPTION_MGMT) != MM_MemberMouseService::$ACTIVE)
					{
						$actions .= " ".MM_Utils::getEditIcon('Additional transaction management features are only available on the Advanced plan and above. Visit membermouse.com to upgrade your plan.', '', '', true);
					}
				}
				else if($item->isRefunded == '1')
				{
					$refundPymtInfoStr = "";
						
					if(!empty($item->refundPymtServiceName))
					{
						$refundPymtInfoStr .= "Payment Method: ".$item->refundPymtServiceName."\n";
			
						if(!empty($item->refundRefId))
						{
							$refundPymtInfoStr .= $item->refundPymtServiceName." Reference ID: ".$item->refundRefId;
						}
					}
			
					$actions = MM_Utils::getCheckIcon("Refund Issued\n{$refundPymtInfoStr}")." <em>Refund Issued</em>";
				}
				
				// add payment service-specific actions
				if(is_null($crntPaymentService) || $crntPaymentService->getToken() != $item->pymtServiceToken)
				{
					$crntPaymentService = MM_PaymentServiceFactory::getPaymentService($item->pymtServiceToken);	
				}
				
				if($crntPaymentService->supportsFeature(MM_PaymentServiceFeatures::TRANSACTION_PAGE_ACTIONS))
				{
					$actions .= " ".$crntPaymentService->getTransactionPageActions($item->mmTransId);
				}
			}
				
			// Amount
			if(floatval($item->amount) == 0)
			{
				$desc = "When requesting a refund, the related transaction can be in a settled or unsettled state. For settled transactions, the funds ";
				$desc .= "have actually been debited from the customer's account so it's possible for them to be refunded. For unsettled transactions, ";
				$desc .= "the debit is still pending so in this case there's nothing to refund and the transaction is simply voided which cancels the ";
				$desc .= "request to transfer the funds.";
				$amount = "<span style='font-family:courier; font-variant: small-caps;'>VOIDED</span>".MM_Utils::getInfoIcon($desc);
			}
			else
			{
				$amount = "<span style='font-family:courier;'>"._mmf(abs($item->amount),$item->currency)."</span>";
			}
			
			$additionalRowInfo = "";
			$item->couponApplied = isset($item->couponApplied)?$item->couponApplied:false;
			$item->prorationApplied = isset($item->prorationApplied)?$item->prorationApplied:false;
			$item->otherDiscountApplied = isset($item->otherDiscountApplied)?$item->otherDiscountApplied:false;
			$anyDiscounts = $item->couponApplied || $item->prorationApplied || $item->otherDiscountApplied;
			
			if ($anyDiscounts)
			{
			    $totalDiscount = 0.00;
				$discountDescription = "DISCOUNTS APPLIED\n";
				
				if($item->couponApplied)
				{
					if(!empty($item->couponDiscount))
					{
						$discountDescription .= "Coupon: "._mmf($item->couponDiscount, $item->currency)." ({$item->couponName})\n";
						$totalDiscount += $item->couponDiscount;
					}
				}
				
				if($item->prorationApplied)
				{
					if(!empty($item->prorationAmount))
					{
						$discountDescription .= "Proration: "._mmf($item->prorationAmount, $item->currency)."\n";
						$totalDiscount += $item->prorationAmount;
					}
				}
				
				if($item->otherDiscountApplied)
				{
				    if(!empty($item->otherDiscountAmount))
				    {
				        $discountDescription .= "Other discounts: "._mmf($item->otherDiscountAmount, $item->currency)."\n";
				        $totalDiscount += $item->otherDiscountAmount;
				    }
				}
				
				$discountDescription .= "---------------------\n";
				$discountDescription .= "Total Discount: "._mmf($totalDiscount, $item->currency);
				$additionalRowInfo.= MM_Utils::getDiscountIcon($discountDescription);
			}
			
			$crntRow = array
			(
				array( 'content' => "<span style='font-family:courier;'>{$item->orderNumber}</span>"),
				array( 'content' => MM_Utils::dateToLocal($item->date, $dateFormat)),
				array( 'content' => $item->productName),
				array( 'content' => "{$amount} {$additionalRowInfo}"),
				array( 'content' => $transType)
			);
			
			if($renderForAdmin)
			{
				$crntRow[] = array( 'content' => $affiliateInfo);
				$crntRow[] = array( 'content' => $actions, "attr" => "nowrap");
			}
			
			$rows[] = $crntRow;
		}
		
		return $rows;
	}
}
