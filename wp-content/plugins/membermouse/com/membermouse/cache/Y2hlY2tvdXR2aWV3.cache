/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com) 
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_CheckoutView extends MM_View
{  
	public static $MM_JSACTION_APPLY_COUPON = "applyCoupon";
	public static $MM_JSACTION_LOAD_STATES = "loadStates";
	
	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{	
				case self::$MM_JSACTION_APPLY_COUPON:
					return $this->applyDiscount($post);
				case self::$MM_JSACTION_LOAD_STATES:
					return $this->loadStates($post);
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function applyDiscount($post)
	{
		$result = new stdClass();
		$result->message = "";
		$result->isError = "0";
		$result->discount = "0.00";
		$couponDiscount = 0;
		$prorationDiscount = 0; 
		
		// check for coupon
		if(!empty($post["coupon_code"]))
		{
			$couponCode = (isset($post["coupon_code"])) ? $post["coupon_code"] : MM_Session::value(MM_Session::$KEY_LAST_COUPON_VALUE);
			$coupon = MM_Coupon::getDataByCode($couponCode);
			
			if($coupon->isValid())
			{
				if(MM_Coupon::hasAvailableCoupon($couponCode))
				{
					$hasProduct = false;
					
					if(isset($post["product_id"]) && intval($post["product_id"]) > 0)
					{
						if($coupon->hasProduct($post["product_id"]))
						{
							$hasProduct = true;
						}
					}
						
					if($hasProduct)
					{
						MM_Session::value(MM_Session::$KEY_LAST_COUPON_VALUE, $couponCode);
			
						if(isset($post["product_price"]))
						{
							$discountedPrice = $this->getDiscountPrice($coupon, $post["product_price"]);
							
							$result->message = "Coupon applied successfully";
							
							if($discountedPrice !== MM_Coupon::$TYPE_FREE)
							{
								$couponDiscount = floatval($post["product_price"]) - floatval($discountedPrice);
							}
							else
							{
								$couponDiscount = MM_Coupon::$TYPE_FREE;
							}
						}
						else
						{
							$result->message = "Invalid coupon code";
							$result->isError = "1";
						}
					}
					else
					{
						$result->message = "This coupon cannot be used for this product";
						$result->isError = "1";
					}
				}
				else
				{
					$result->message = "This coupon is no longer valid";
					$result->isError = "1";
				}
			}
			else
			{
				if(isset($post["coupon_code"]) && !empty($post["coupon_code"]))
				{
					$result->message = "Invalid coupon code";
					$result->isError = "1";
				}
				
				MM_Session::value(MM_Session::$KEY_LAST_COUPON_VALUE, $couponCode);
			}
			
			if($result->isError == "1")
			{
				MM_Session::clear(MM_Session::$KEY_LAST_COUPON_VALUE);
			}
		}
		
		if($couponDiscount !== MM_Coupon::$TYPE_FREE)
		{
			if($couponDiscount > 0)
			{
				$result->discount += $couponDiscount;
			}
		}
		else
		{
			$result->discount = $couponDiscount;
		}
			
		// check for proration
		if(is_user_logged_in() && ($result->discount !== MM_Coupon::$TYPE_FREE))
		{
			global $current_user;
			$user = MM_User::getCurrentWPUser();
			
			if($user->isValid() && isset($post["product_id"]) && intval($post["product_id"]) > 0)
			{
				$product = new MM_Product($post["product_id"]);
				
			  
				// make sure product is associated with a membership and is recurring
				if($product->isRecurring() && $product->getAssociatedMembership()->isValid())
				{  
				    if(MM_PaymentUtils::isProductADuplicateSubscription($user, $post["product_id"]))
				    { 
				        return new MM_Response(json_encode($result)); 
				    }
				     
					$prorationDiscount = MM_PaymentUtils::calculateMembershipSubscriptionCredit($user);
	
					if(empty($couponDiscount) || ($couponDiscount !== MM_Coupon::$TYPE_FREE))
					{	
						$result->discount += $prorationDiscount;
					} 
				}
			}
		}
		
		if(floatval($result->discount) > floatval($post["product_price"]))
		{
			$result->discount = floatval($post["product_price"]);
		}
		
		return new MM_Response(json_encode($result));
	}
	
	private function getDiscountPrice(MM_Coupon $coupon, $productPrice)
	{	
		if($coupon->isValid())
		{
			$value = $productPrice;
			$discount = $coupon->getCouponValue();
			
			if($coupon->getCouponType() == MM_Coupon::$TYPE_PERCENTAGE)
			{
				$value = $productPrice - ($productPrice * ($discount/100));
			}
			else if($coupon->getCouponType() == MM_Coupon::$TYPE_DOLLAR)
			{
				$value = $productPrice - $discount;
			}
			else if($coupon->getCouponType() == MM_Coupon::$TYPE_FREE)
			{
				return MM_Coupon::$TYPE_FREE;
			}
			
			return number_format($value, 2, '.', '');
		}
		
		return $productPrice;
	}
	
	
	public function loadStates($post)
	{
		global $current_user;
	
		try
		{ 
			if(!isset($post['country']) || !$post['country'])
			{
				throw new Exception("Missing country ISO code");
			}
	
			if(!is_array($states = MM_CountrySubdivisionUtils::getCountrySubdivsionList(array($post['country']))))
			{
				throw new Exception("No states found for ISO code: {$post['country']}");
			}
				
			$defaultState 	 = null;
			$defaultCountry = null;
				
			if(is_user_logged_in())
			{
				$stateFunction   = $post['type'] == "billing" ? "getBillingState" : "getShippingState";
				$countryFunction = $post['type'] == "billing" ? "getBillingCountry" : "getShippingCountry";
				$user 			  = MM_User::getCurrentWPUser();
				$defaultState 	  = $user->$stateFunction() ? $user->$stateFunction() : null;
				$defaultCountry  = $user->$countryFunction() ? $user->$countryFunction() : null;
			}
				
			$options = "";
			$count   = 0;
			foreach($states[$post['country']] as $state_iso => $state_name)
			{
				if(is_user_logged_in())
				{
					if(isset($states[$defaultCountry][$defaultState]))
					{
						$selected = $defaultState == $state_iso;
					}
					else
					{
						$selected = $count === 0;
					}
				}
				else
				{
					$selected = $count === 0;
				}
	
				$options .= "<option value='{$state_iso}'" . ($selected ? " selected='selected'" : "") . ">{$state_name}</option>\n";
				$count++;
			}
			$options .= "<option value='-1'>Other...</option>\n";
				
			$MM_Response = new MM_Response();
			$MM_Response->data['html'] = $options;
			$MM_Response->data['type'] = $post['type'] ? $post['type'] : 'billing';
	
			return $MM_Response;
		}
		catch(Exception $e)
		{
			$MM_Response = new MM_Response($e->getMessage(), MM_Response::$ERROR);
			return $MM_Response;
		}
	}
	
	
	/**
	 * Override of parent to allow users without roles to login
	 * {@inheritDoc}
	 * @see MM_View::canCallMethod()
	 */
	
	public function canCallMethod($request)
	{
		$allowedActions = array(self::$MM_JSACTION_APPLY_COUPON,self::$MM_JSACTION_LOAD_STATES, self::$MM_JSACTION_VALIDATE_INPUT);
		if (($request['method'] != "performAction") || (!isset($request['mm_action'])) || (!in_array($request['mm_action'],$allowedActions)))
		{
			return false;
		}
		else
		{
			return true;
		}
	}
}
