/**
 *
* MemberMouse(TM) (http://www.membermouse.com)
* (c) MemberMouse, LLC. All rights reserved.
*/
class MM_NewMembersComparisonReport extends MM_ReportBase 
{
	
	public static $NEW_MEMBERS_COMPARISON_DATAGRID = "new_members_comparison_datagrid";
	public static $NEW_MEMBERS_COMPARISON_LINECHART = "new_members_comparison_linechart";
	
	protected $visualElements = array("MM_ReportDataGrid","MM_ReportLineChart");	
	
	public function renderVisualElement($elementIdentifier, $params = '', $width = '', $height = '', $directives=array()) 
	{
		switch ($elementIdentifier)
		{
			case self::$NEW_MEMBERS_COMPARISON_LINECHART:
				return $this->renderNewMembersComparisonLineChart($elementIdentifier, $params, $width, $height, $directives);
				break;
			case self::$NEW_MEMBERS_COMPARISON_DATAGRID:
				return $this->renderNewMembersComparisonDatagrid($elementIdentifier, $params, $width, $height, $directives);
				break;
			default:
				return new MM_ReportResponse("Unable to render visual element: identifier ".((!is_array($elementIdentifier) && !is_object($elementIdentifier))?"{$elementIdentifier} ":"")."unknown",MM_ReportResponse::$ERROR);
		}
	}
	
	
	/**
	 * 
	 * @param string $elementIdentifier
	 * @param string $width
	 * @param string $height
	 * @param string $params
	 * @return MM_ReportResponse containing the datagrid if it is renderable, not-ready status if the data is available, or error if there was an error
	 */
	public function renderNewMembersComparisonDatagrid($elementIdentifier, $params = '', $width = '', $height = '', $directives=array())
	{
		//share report with the new members report, since this is just a new view on the same data
		$dataResponse = MM_ReportDataRetriever::requestData("MM_NewMembersReport", MM_NewMembersReport::$NEW_MEMBERS_BY_DATE_QUERY, $params);
		if (!MM_ReportResponse::isSuccess($dataResponse))
		{
			return $dataResponse;
		}
		
		$rowIndex = "Date";
		
		if (isset($params['type']))
		{
			switch ($params['type'])
			{
				case 'weekly':
					$rowIndex = "Week of";
					break;
				case 'monthly':
					$rowIndex = "Month";
					break;
				case 'yearly':
					$rowIndex = "Year";
					break;
				default:
					$rowIndex = "Date";
					break;
			}
		}
		
		//data is ready, construct the grid model, starting with the headers
		$resultset   = $dataResponse->message;
		$gridHeaders = array("date"=>array('label'=>$rowIndex, 'sortable'=>true, 'sortValueColumn'=>'date_sort_value'));
		
		//there is a column for each membership level. We could query this data again, but faster to just extract it from the first row of the resultset
		$firstRow = reset($resultset);
		foreach ($firstRow as $k=>$v)
		{	
			if (($k != "date") && ($k != "date_sort_value"))
			{
				$gridHeaders[$k] = array('label'=>$k);
			}
		}
		
		$grid = MM_ReportDatagrid::createFromData(self::$NEW_MEMBERS_COMPARISON_DATAGRID, $gridHeaders, $dataResponse,$directives);
		//$grid->setGridTitle("New Members By Date");
		$grid->setShowHeaderRow(false);
		
		return new MM_ReportResponse($grid->render());
	}
	
	
	public function renderNewMembersComparisonLineChart($elementIdentifier, $params = '', $width = '', $height = '', $directives=array())
	{
		$dataResponse = MM_ReportDataRetriever::requestData("MM_NewMembersReport", MM_NewMembersReport::$NEW_MEMBERS_BY_DATE_QUERY, $params);		
		if (!MM_ReportResponse::isSuccess($dataResponse))
		{
			return $dataResponse;
		}
		
		$results = $dataResponse->message;
		
		//get the compared memberships from the first line
		$firstLine = reset($results);
		$memberships = array_keys(array_slice($firstLine,1));
		
		//now key a lookup table with the membership pointing to a model we will create for it
		$mlLookup = array();
		foreach ($memberships as $v)
		{
			if (($v != 'date') && ($v != 'date_sort_value'))
			{
				$mlLookup[$v] = new MM_ReportCategoryValueModel();
				$mlLookup[$v]->setTitle($v); //for the legened
			}
		}
		
		//now iterate through the data and add it to the correct model
		foreach ($results as $row)
		{
			foreach ($row as $column=>$columnVal)
			{
				if (($column != 'date') && ($column != 'date_sort_value'))
				{
					if (isset($mlLookup[$column]) && is_object($mlLookup[$column]))
					{
						$mlLookup[$column]->addValues($row['date_sort_value'], $columnVal);
					}
				}
			}
		}
		
		//now create the line chart
		$line = new MM_ReportLineChart($elementIdentifier);
		$line->setCategoriesAreDates(true);
		$line->setDateFormat("YYYY-MM-DD");
		
		//add the models we just created
		foreach ($mlLookup as $model)
		{
			$line->addModel($model);
		}
		
		//set the graph resolution based on what the user chose
		$resolution = MM_ReportLineChart::$DAYS;
		if (isset($params['type']))
		{
			switch ($params['type'])
			{
				case 'weekly':
					$resolution = MM_ReportLineChart::$WEEKS;
					break;
				case 'monthly':
					$resolution = MM_ReportLineChart::$MONTHS;
					break;
				case 'yearly':
					$resolution = MM_ReportLineChart::$YEARS;
					break;
				default:
					break;
			}
		}
		$line->setResolution($resolution);
		$line->setValueAxisTitle("# of members added");
		return new MM_ReportResponse($line->render());
	}
	
	
	public static function generateData($queryIdentifier, $params)
	{
		//this report generates no data of its own
		return new MM_Response("Error generating data for unknown query identifier {$queryIdentifier}",MM_Response::$ERROR);
	}
	
}

