/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_StickyioLogView extends MM_RBACGeneralEmployeeView
{
	public function __construct()
	{
		parent::__construct();
	}
	
	public static $MM_JSACTION_SEARCH = "search";
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SEARCH:
					return $this->generateDataGrid($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function generateDataGrid($post=null)
	{
		return MM_TEMPLATE::generate(MM_MODULES."/stickyio_log.datagrid.php", $post);
	}
	
	public function getViewData($post, MM_DataGrid $dg)
	{
	    global $wpdb;
		$whereClause = array();
		
		if(!empty($post["member_id"]) && intval($post["member_id"])>0)
		{
			array_push($whereClause, "(customer_id='".intval($post["member_id"])."')");
		}
		
		if(!empty($post["from_date"]))
		{
			$fromDate = MM_Utils::dateToUTC($post['from_date'],"Y-m-d","00:00:00");
			array_push($whereClause, "(date_received >= '{$fromDate}')");
			
			if(!empty($post["to_date"]))
			{		
				$toDate = MM_Utils::dateToUTC($post['to_date'],"Y-m-d","23:59:59");
				array_push($whereClause, "(date_received <= '{$toDate}')");
			}
		}
	
		$whereClause = join(" AND ", $whereClause);
		
		$llIdField = MM_TABLE_STICKYIO_IPN_LOG.".id";
		$usersTable = $wpdb->prefix ."users";
		$fields = array(
		    $llIdField, 'message', 'log_level', 'order_total','date_received', 'order_id',  'customer_id', $usersTable.'.ID as user_id',
					MM_TABLE_STICKYIO_IPN_LOG.'.order_status',MM_TABLE_STICKYIO_IPN_LOG.'.refund_amount',MM_TABLE_STICKYIO_IPN_LOG.'.email',
					MM_TABLE_STICKYIO_IPN_LOG.'.product_ids',MM_TABLE_STICKYIO_IPN_LOG.'.shipping_id',MM_TABLE_STICKYIO_IPN_LOG.'.subscriptions_active',
					MM_TABLE_STICKYIO_IPN_LOG.'.subscription_ids',MM_TABLE_STICKYIO_IPN_LOG.'.action_id',
					MM_TABLE_STICKYIO_IPN_LOG.'.affiliate_id',MM_TABLE_STICKYIO_IPN_LOG.'.subaffiliate_id',MM_TABLE_STICKYIO_IPN_LOG.'.ip_address',
					MM_TABLE_STICKYIO_IPN_LOG.'.date_received'
		);
		return self::getData(MM_TABLE_STICKYIO_IPN_LOG, $fields, $dg, $whereClause);
	}
	
	public function getData($tableName, $fields=null, MM_DataGrid $dg=null, $where = "", $getTotal=false)
	{
		global $wpdb;
	
		$columns = (is_null($fields)) ? "tbl.*" : implode(",", $fields);
	
		$sqlResultCount = "SELECT count(distinct id) as total FROM ".$tableName;
		if(!empty($where))
		{
			if(preg_match("/^(where)/", strtolower(trim($where))))
			{
				$sqlResultCount.= " {$where} ";
			}
			else
			{
				$sqlResultCount.= " where {$where} ";
			}
		}
	
		$countRow = $wpdb->get_row($sqlResultCount);
	
		$LimelightTable = MM_TABLE_STICKYIO_IPN_LOG;
		
		$usersTable = $wpdb->users;
		$fromClause = "{$LimelightTable} LEFT JOIN {$usersTable} on  {$LimelightTable}.email = {$usersTable}.user_email ";
		
		if($countRow)
		{
			$sql = "SELECT '{$countRow->total}' as total, ".$columns." FROM {$fromClause} ";
		}
		else
		{
			$sql = "SELECT ".$columns." FROM {$fromClause} ";
		}
	
		if(!empty($where))
		{
			if(preg_match("/^(where)/", strtolower(trim($where))))
			{
				$sql.= " {$where} ";
			}
			else
			{
				$sql.= " where {$where} ";
			}
		}
	
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy))
		{
			$sql.= "ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		if($getTotal)
		{
			$result = $wpdb->get_results($sql);
			return $result;
		}
	
		if(!is_null($dg))
		{
			$sql .= $dg->getLimitSql();
		}
		$result = $wpdb->get_results($sql);

		if(!$result || is_null($result))
		{
			return array();
		}
	
		return $result;
	}
}
