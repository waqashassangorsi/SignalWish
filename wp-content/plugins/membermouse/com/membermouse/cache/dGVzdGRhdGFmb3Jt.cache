class MM_TestDataForm extends MM_CheckoutForm
{
    public static function generateInputFormField($name, $defaultData, $form=null, $customCssClass="mm-textField", $customAttributes="", $atts=null)
    {
        $lowerName = strtolower($name);
        if (!in_array($lowerName,array('ccnumber','ccexpirationdate','ccsecuritycode')))
        {
            return parent::generateInputFormField($name, $defaultData,$form,$customCssClass,$customAttributes,$atts);
        }
        else
        {
            $outputStr = "";
            switch($lowerName)
            {
                case "ccnumber":
                    $eventHandlerName = (MM_Utils::isAndroid())?"onkeyup":"onkeydown";
                    $outputStr .= "<input type='text' maxlength='16' {$eventHandlerName}=\"return mmjs.onlyNumbers(event,'cc')\" id='mm_field_cc_number' autocomplete='off' name='mm_field_cc_number' class='{$customCssClass}' {$customAttributes} ";
                    
                    if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
                    {
                        $outputStr .= "value='".$defaultData["mm_field_cc_number"]."'";
                    }
                    
                    $outputStr .= "/>\n";
                    break;
                    
                case "ccexpirationdate":
                    if(isset($defaultData["mm_field_cc_exp_month"]) && $defaultData["mm_field_cc_exp_month"] != "")
                    {
                        $ccExpMonth = $defaultData["mm_field_cc_exp_month"];
                    }
                    else
                    {
                        $ccExpMonth = 0;
                    }
                    
                    $outputStr .= "<select name='mm_field_cc_exp_month' id='mm_field_cc_exp_month'  class=\"mm-selectList mm-expMonthList\">\n";
                    $outputStr .= MM_HtmlUtils::getCCExpMonthList($ccExpMonth);
                    $outputStr .= "</select>";
                    $outputStr .= "<select name='mm_field_cc_exp_year' id='mm_field_cc_exp_year' class=\"mm-selectList mm-expYearList\">\n";
                    if(isset($defaultData["mm_field_cc_exp_year"]) && $defaultData["mm_field_cc_exp_year"] != "")
                    {
                        $ccExpYear = $defaultData["mm_field_cc_exp_year"];
                    }
                    else
                    {
                        $ccExpYear = 0;
                    }
                    
                    $outputStr .= MM_HtmlUtils::getCCExpYearList($ccExpYear);
                    
                    $outputStr .= "</select>\n";
                    break;
                    
                case "ccsecuritycode":
                    $eventHandlerName = (MM_Utils::isAndroid())?"onkeyup":"onkeydown";
                    $outputStr .= "<input autocomplete='off' type='password' maxlength='4' {$eventHandlerName}=\"return mmjs.onlyNumbers(event,'cc')\" id='mm_field_cc_cvv' name='mm_field_cc_cvv' class='{$customCssClass}' ";
                    
                    if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
                    {
                        $outputStr .= "value='".$defaultData["mm_field_cc_cvv"]."'";
                    }
                    
                    $outputStr .= " {$customAttributes} />\n";
                    break;
                    
                default:
                    break;
            }
            return $outputStr;
        }
    }
}