/**
 *
* MemberMouse(TM) (http://www.membermouse.com)
* (c) MemberMouse, LLC. All rights reserved.
*/
class MM_SalesByPaymentServiceReport extends MM_AdvancedReportBase 
{
	
	protected $visualElements = array("MM_ReportDataGrid");
	
	public static $SALES_BY_PAYMENT_SERVICE_REPORT_DATAGRID = "sales_by_payment_service_datagrid";
	
	//query identifiers
	public static $SALES_BY_PAYMENT_SERVICE_QUERY = "sales_by_payment_service_query";
	
	
	public function renderVisualElement($elementIdentifier, $params = '', $width = '', $height = '', $directives=array()) 
	{
		switch ($elementIdentifier)
		{
			case self::$SALES_BY_PAYMENT_SERVICE_REPORT_DATAGRID:
				return $this->renderSalesByPaymentServiceReportDatagrid($elementIdentifier, $params, $width, $height, $directives);
				break;
			default:
				return new MM_ReportResponse("Unable to render visual element: identifier ".((!is_array($elementIdentifier) && !is_object($elementIdentifier))?"{$elementIdentifier} ":"")."unknown",MM_ReportResponse::$ERROR);
		}
	}
	
	
	public function renderSalesByPaymentServiceReportDatagrid($elementIdentifier, $params = '', $width = '', $height = '', $directives=array())
	{
		$dataResponse = MM_ReportDataRetriever::requestData(get_class($this), self::$SALES_BY_PAYMENT_SERVICE_QUERY, $params);
		if (!MM_ReportResponse::isSuccess($dataResponse))
		{
			return $dataResponse;
		}
		
		$gridHeaders = array("payment_service"=>array('label'=>"Payment Service"),
							 "units"=>array('label'=>"Units",'tooltip'=>'Units in this context is the number of products purchased or rebilling in the specified date range'),
				             "sales"=>array('label'=>"Sales"));
		$grid = MM_ReportDatagrid::createFromData(self::$SALES_BY_PAYMENT_SERVICE_REPORT_DATAGRID, $gridHeaders, $dataResponse,$directives);
		//$grid->setGridTitle("Payment Method");
		$grid->setShowHeaderRow(false);
		return new MM_ReportResponse($grid->render());
	}
	
	
	/**
	 * Generate the data for the Sales By Payment Service report. 
	 * Constraint: The supplied params must contain a start and end date
	 * 
	 * @param array $params
	 * @return MM_ReportDataset containing the results
	 */
	public static function generateSalesByPaymentServiceReportData($params)
	{
		global $wpdb;
		
		if (!is_array($params))
		{
			return new MM_Response("Could not generate Sales By Payment Method report data: Improper parameters format",MM_Response::$ERROR);
		}
		
		if (!isset($params['start_date']) || !isset($params['end_date']))
		{
			return new MM_Response("Could not generate Sales By Payment Method report data: Start and End date must be supplied",MM_Response::$ERROR);
		}
		
		$transactionsTable = MM_TABLE_TRANSACTION_LOG;
		$paymentServicesTable = MM_TABLE_PAYMENT_SERVICES;
		$orderItemsTable = MM_TABLE_ORDER_ITEMS;
		
		$startTime = strtotime($params['start_date']);
		$endTime = strtotime($params['end_date']);
		
		$startDate = date("Y-m-d 00:00",$startTime); //mysql format
		$endDate =   date("Y-m-d 23:59:59",$endTime);
		
		//filter configuration
		$filter_type = empty($params['filter_type'])?'both':$params['filter_type'];
		switch ($filter_type)
		{
		    case 'initial':
		        $transactionTypes = array(MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT);
		        break;
		    case 'rebills':
		        $transactionTypes = array(MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT);
		        break;
		    default:
		        $transactionTypes = array(MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT,MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT);
		}
		$transactionTypeString = implode(",",$transactionTypes);
		
		//gets the units and total revenue from transactions linked to product sales (optionally including recurring payments) for transactions that occur within a date range
		//refund items do not count against the total. If there is a data error (for instance transactions exist where the linked orders/items were deleted) then the product is
		//listed as 'Unknown Product'
		
		$sql = "SELECT IFNULL(ps.name,'Unknown') AS payment_service, T.units, T.sales ".
			   "FROM (SELECT tl.payment_service_id,SUM(IFNULL(oi.quantity,1)) AS units, ABS(SUM(tl.amount)) AS sales ".
			   "FROM {$transactionsTable} tl LEFT JOIN {$orderItemsTable} oi ON (tl.order_item_id = oi.id) ".
			   "WHERE (tl.transaction_date BETWEEN %s AND %s) AND tl.transaction_type IN ({$transactionTypeString}) ".
			   "GROUP BY tl.payment_service_id) AS T LEFT JOIN {$paymentServicesTable} ps ON (T.payment_service_id = ps.id)";
		$results = $wpdb->get_results($wpdb->prepare($sql,$startDate,$endDate),ARRAY_A);
		
		foreach ($results as &$row)
		{
			$row['sales'] = _mmf($row['sales']); 
			//TODO: deal with multiple currency issues	
		}
		
		$dataset = MM_ReportDataset::createSingleReportDataset($params,$results);
		return $dataset;
	}
	
	
	public static function generateData($queryIdentifier, $params)
	{
		switch ($queryIdentifier)
		{
			case self::$SALES_BY_PAYMENT_SERVICE_QUERY:
				return self::generateSalesByPaymentServiceReportData($params);
				break;
			default:
				return new MM_Response("Error generating data for unknown query identifier {$queryIdentifier}",MM_Response::$ERROR);
		}
	}
	
}

