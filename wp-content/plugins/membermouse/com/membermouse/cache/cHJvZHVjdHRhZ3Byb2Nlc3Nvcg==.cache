class MM_ProductTagProcessor
{	
	public static $TAG_PRODUCT_DATA = "mm_product_data";
	
	
	/**
	 * Takes a SmartTag string and returns true if the SmartTag is related to products.
	 * 
	 * @param String $smartTag the name of the SmartTag
	 * @return Boolean returns true if the SmartTag passed is related to products.
	 */
	public static function isProductSmartTag($smartTag)
	{
		switch($smartTag) 
		{
			case self::$TAG_PRODUCT_DATA:
				return true;
				
			default:
				return false;
		}
	}
	
	
	/**
	 * Takes a SmartTag name and a number of properties related to the SmartTag and makes a call to 
	 * the appropriate function based on the SmartTag name.
	 * @param String $smartTag the name of the SmartTag
	 * @param String $content the content to process
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function processSmartTag($smartTag, $content, $atts, $code)
	{
		switch($smartTag) 
		{
			case self::$TAG_PRODUCT_DATA:
				return self::mm_product_data($content, $atts, $code);
				
			default:
				return "Invalid Product SmartTag {$smartTag} found";
		}
	}
	
	
	/**
	 * This function processes the MM_Product_Data tag. It is responsible for 
	 * returning data associated with the product ID passed.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function mm_product_data($content, $atts, $code)
	{
		if(is_array($atts) && count($atts)>0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key=$v;
			}
		}
		
		$product = null;
		
		// ensure that the id attribute is set
		if(isset($id))
		{
			$product = new MM_Product($id);
			
			if(!$product->isValid())
			{
				return "Invalid SmartTag Configuration: Invalid product ID of '{$id}' passed to SmartTag {$code}";
			}
		}
		else
		{
			return "Invalid SmartTag Configuration: 'id' attributes is required for SmartTag {$code}";
		}
		
		// ensure that the name attribute is set		
		if(isset($name))
		{	
			switch(strtolower($name))
			{	
				case "id":
					return $product->getId();
					break;
					
				case "name":
					return $product->getName();
					break;
					
				case "description":
					return $product->getDescription();
					break;
					
				case "billingdescription":
					return $product->getBillingDescription(true, false);
					break;
					
				case "price":
					return (isset($doformat)&&($doformat == "false"))?$product->getPrice(false):$product->getPrice(true);
					break;
					
				case "issubscription":
					return $product->isRecurring();
					break;
					
				case "rebillduration":
					return $product->getRebillPeriod();
					break;
					
				case "rebillfrequency":
					return $product->getRebillFrequency();
					break;
					
				case "hastrial":
					return $product->hasTrial();
					break;
					
				case "trialprice":
					return (isset($doformat)&&($doformat == "false"))?$product->getTrialAmount(false):$product->getTrialAmount(true);
					break;
					
				case "trialduration":
					return $product->getTrialDuration();
					break;
					
				case "trialfrequency":
					return $product->getTrialFrequency();
					break;
					
				case "hasshipping":
					return $product->isShippable();
					break;
					
				case "sku":
					return $product->getSku();
					break;
				
				default:
					return "Invalid SmartTag Configuration: Invalid name attribute '{$name}' passed to SmartTag {$code}";
			}
		}
		else
		{
			return "Invalid SmartTag Configuration: 'name' attribute is required for SmartTag {$code}";
		}
	}
}
