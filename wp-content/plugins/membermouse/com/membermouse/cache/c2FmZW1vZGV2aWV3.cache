/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_SafeModeView extends MM_RBACAdminView
{
	public static $MM_JSACTION_SET_SAFE_MODE_STATUS = "setSafeModeStatus";
	public static $MM_JSACTION_CLEAR_LOG = "clearSafeModeLog";

	public function __construct()
	{
		parent::__construct();
	}
	
 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SET_SAFE_MODE_STATUS:
					return $this->setSafeModeStatus($post);
					break;
				case self::$MM_JSACTION_CLEAR_LOG:
					return $this->clearLog();
					break;
				default:
					return new MM_Response($response,MM_Response::$SUCCESS,true);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	
	protected function setSafeModeStatus($post)
	{
		if(isset($post["newStatus"]) && !empty($post["newStatus"])) 
		{
			MM_SafeMode::setMode($post["newStatus"]);
			$currentMode = MM_SafeMode::getMode();
			
			if($currentMode == MM_SafeMode::$MODE_ENABLED)
			{
				MM_SafeMode::disablePlugins();
				MM_SafeMode::disableTheme();
				
				$savedPlugins = MM_SafeMode::getSavedPluginNames();
				$message = "<strong>Deactivated Plugins (".count($savedPlugins)."):</strong> ".implode(", ", $savedPlugins);
				
				$dfltWPTheme = MM_SafeMode::getDefaultWordPressTheme();
				
				if($dfltWPTheme != "")
				{
					$message .= "<br/><strong>Deactivated Theme:</strong> ".MM_SafeMode::getSavedThemeName();
				}
				
				MM_SafeMode::log($currentMode, $message);
				
				return new MM_Response("Safe Mode has been enabled",MM_Response::$SUCCESS,true);
			}
			else
			{	
				$savedPlugins = MM_SafeMode::getSavedPluginNames();
				$message = "<strong>Restored Plugins (".count($savedPlugins)."):</strong> ".implode(", ", $savedPlugins);
				$message .= "<br/><strong>Restored Theme:</strong> ".MM_SafeMode::getSavedThemeName();
				
				MM_SafeMode::restorePlugins();
				MM_SafeMode::restoreTheme();
				
				MM_SafeMode::log($currentMode, $message);
				
				return new MM_Response("Safe Mode has been disabled",MM_Response::$SUCCESS,true);
			}
		}
		
	 	return new MM_Response("Safe mode status was not changed",MM_Response::$SUCCESS,true);		 	
	}
	
	
	protected function clearLog()
	{
		MM_SafeMode::clearLog();
		return new MM_Response("Safe mode log cleared successfully", MM_Response::$SUCCESS);	 	
	}
	
}
