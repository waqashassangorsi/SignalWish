/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
abstract class MM_View
{ 
    public static $MM_NONCE_ACTION_CHECKOUT_FORM = "mm-checkout";
    public static $MM_NONCE_NAME_CHECKOUT_FORM   = "mm-security";
	
	public static $MM_JSACTION = "mm_action";
	public static $MM_JSMODULE = "mm_module";
	public static $MM_JSACTION_SAVE = "save";
	public static $MM_JSACTION_REMOVE = "remove";
	public static $MM_JSACTION_SHOW_DIALOG = "showDialog";
	public static $MM_JSACTION_REFRESH_VIEW = "refreshView";
	public static $MM_JSACTION_SHOW_BUY_NOW_LINKS = "showPurchaseLinks";
	public static $MM_JSACTION_VALIDATE_INPUT = "validateInput";
	public static $MM_JSACTION_LOGIN = "login";
	public static $MM_JSACTION_RESET_PASSWORD = "resetPassword";
	public static $MM_JSACTION_LOAD_STATES = "loadStates";
	
	//for use in subclasses implementing rbac. array structure has method names as keys, 
	//and arrays containing valid roles (from MM_Role) as the values
	protected $permissions = array();
	
	function __construct()
 	{
 		// do nothing
 	}
 	
 	public function callMethod($post) 
 	{
 		if (isset($post["method"]) && method_exists($this, $post["method"]) && $this->canCallMethod($post)) 
		{
			$method = $post['method'];
			return $this->$method($post);
		}		
		return 0;
 	}
 	
 	
 	/**
 	 * Determines if the caller has permission to perform the requested action. The method requested should be stored in 
 	 * $request['method'], and will usually be the performAction routing method of the view. The action requested should be
 	 * stored in $request['mm_action']. 
 	 * 
 	 * @param string $request
 	 * @return boolean true if access is allowed, false otherwise
 	 */
 	public function canCallMethod($request)
 	{
 		return false;	
 	}
 	
	
	public function performAction($post) 
	{	
		if(isset($post[self::$MM_JSACTION])) 
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_REFRESH_VIEW:
					return $this->refreshView($post);
				
				case self::$MM_JSACTION_SHOW_DIALOG:
					return $this->showDialog($post);
				
				case self::$MM_JSACTION_VALIDATE_INPUT:
					return $this->validateInput($post);
					
				default:
					return "";
			}
		}
		else 
		{
			return new MM_Response("MM_View.performAction(): '".self::$MM_JSACTION."' is required", MM_Response::$ERROR);
		}
	}

	protected function validateInput($post)
  	{
		global $wpdb;
	  
		try
		{	 
			/*
			 * TODO: Verify its not used anywhere else and remove
			 */
			switch($post['input_type'])
			{
				case 'EMAIL':
					if(!MM_Utils::hasValidEmail($post["input_value"]))
					{
						throw new Exception("Provided email address was empty or invalid.");
					}
					break;

				case 'URL':
					if(!filter_var($post['input_value'], FILTER_VALIDATE_URL) || !preg_match("/^https?:\/\//", $post['input_value']))
					{
						throw new Exception("Invalid URL ({$post['input_value']}) entered for {$post['input_label']}");
					}
					break;

				default:
					throw new Exception("Invalid Input Type requesting validation...");
					break;
			}
    	} 
    	catch(Exception $e)
    	{
      	return new MM_Response($e->getMessage(), MM_Response::$ERROR);
    	}
    
    	return new MM_Response();
	}
 	
	private function showResponseDialog($post)
	{
		$info->message = (!isset($post["message"]))?"Oh, something bad happened":$post["message"];
 		$msg = MM_TEMPLATE::generate(MM_MODULES."/response.php", $info);
 		return new MM_Response($msg);
	}
	
	protected function refreshView($post)
	{
		$crntModule = $this->getModule($post, $post[self::$MM_JSACTION]);
		
		if($crntModule != "" && strpos($crntModule,"..") === false) 
		{ 
			$_REQUEST["module"] = $crntModule;
			
			ob_start();
			include($module=MM_MODULES."/".$crntModule.".php");
			$contents = ob_get_contents();
			ob_end_clean();
			return $contents;
		}
		else 
		{
			$errorMsg = "MM_View.refreshView(): requested module does not exist:".(isset($post[self::$MM_JSMODULE])?$post[self::$MM_JSMODULE]:"");
			MM_DiagnosticLog::log(MM_DiagnosticLog::$MM_ERROR, $errorMsg);
			return 0;
		}
	}
	
	
	/**
	 * Takes $request array and transforms it into an stdClass object. 
	 * 
	 * @param array $request
	 * @return stdClass A value object of type stdClass
	 */
	protected function createValueObjectFromRequest($request)
	{
		$info = new stdClass();
		if (!is_array($request))
		{
			return $info;
		}
		foreach ($request as $key=>$value)
		{
			$info->$key = $value;
		}
		
		$info->id = isset($info->id)?$info->id:"";
		return $info;
	}
	
	
	protected function showDialog($post)
	{
		$info = $this->createValueObjectFromRequest($post);

		$crntModule = $this->getModule($post);
		
		if($crntModule != "") 
		{
			return MM_TEMPLATE::generate(MM_MODULES."/".$crntModule.".dialog.php", $info);
		}
		else 
		{
			return new MM_Response("MM_View.showDialog(): ".self::$MM_JSMODULE." requested module does not exist", MM_Response::$ERROR);
		}
	}
	
	
	private function getModule($post, $action="")
	{	
		if($this instanceof MM_MembershipLevelsView) 
		{
			return MM_MODULE_MEMBERSHIP_LEVELS;
		}
		else if($this instanceof MM_CommissionProfilesView) 
		{
			return MM_MODULE_COMMISSION_PROFILES;
		}
		else if($this instanceof MM_StickyioProductsView )
		{
		    return MM_MODULE_STICKYIO_PRODUCTS;
		}
		else if($this instanceof MM_LimeLightProductsView) 
		{
			return MM_MODULE_LIMELIGHT_PRODUCTS;
		}
		else if($this instanceof MM_StickyioShippingMethodsView )
		{
		    return MM_MODULE_STICKYIO_SHIPPING_METHODS;
		}
		else if($this instanceof MM_LimeLightShippingMethodsView) 
		{
			return MM_MODULE_LIMELIGHT_SHIPPING_METHODS;
		}
		else if($this instanceof MM_ApiView) 
		{
			return MM_MODULE_API;
		}
		else if($this instanceof MM_ProductView) 
		{
			return MM_MODULE_PRODUCTS;
		}
		else if($this instanceof MM_ActivityLogView) 
		{
			return MM_MODULE_ACTIVITY_LOG;
		}
		else if($this instanceof MM_PayPalIPNLogView) 
		{
			return MM_MODULE_PAYPAL_IPN_LOG;
		}
		else if($this instanceof MM_TransactionHistoryView) 
		{
			return MM_MODULE_MEMBER_DETAILS_TRANSACTION_HISTORY;
		}
		else if($this instanceof MM_SubscriptionsView) 
		{
			return MM_MODULE_MEMBER_DETAILS_SUBSCRIPTIONS;
		}
		else if($this instanceof MM_GiftHistoryView) 
		{
			return MM_MODULE_MEMBER_DETAILS_GIFT_HISTORY;
		}
		else if($this instanceof MM_DripContentScheduleView)
		{
			return MM_MODULE_DRIP_CONTENT_SCHEDULE;
		}
		else if($this instanceof MM_CouponView) 
		{
			return MM_MODULE_COUPONS;
		}
		else if($this instanceof MM_PushNotificationView) 
		{
			return MM_MODULE_PUSH_NOTIFICATIONS;
		}
		else if($this instanceof MM_CustomFieldView) 
		{
			return MM_MODULE_CUSTOM_FIELDS;
		}
		else if($this instanceof MM_BundlesView) 
		{
			return MM_MODULE_BUNDLES;
		}
		else if($this instanceof MM_EmployeesView) 
		{
			return MM_MODULE_EMPLOYEES;
		}
		else if($this instanceof MM_MembersView) 
		{	
			return MM_MODULE_BROWSE_MEMBERS;
		}
		else if($this instanceof MM_MemberDetailsView && in_array($action,array(MM_MemberDetailsView::$MM_JSACTION_UPDATE_MEMBER,self::$MM_JSACTION_REFRESH_VIEW)))
		{
			return MM_MODULE_MEMBER_DETAILS_GENERAL;
		}
		else if($this instanceof MM_AccessRightsView || $this instanceof MM_CorePagesView) 
		{
			return MM_MODULE_META;
		}
		else if($this instanceof MM_DashboardView) 
		{
			return MM_MODULE_DASHBOARD;
		}
		else if($this instanceof MM_EmailIntegrationView) 
		{
			return MM_MODULE_EMAIL_INTEGRATION;
		}
		else if($this instanceof MM_ShippingMethodsView)
		{
			return MM_MODULE_SHIPPING;
		}
		else if($this instanceof MM_DuplicateSubscriptionsView)
		{
			return MM_MODULE_DUPLICATE_SUBSCRIPTION_TOOL;
		}
		else if ($this instanceof MM_DiagnosticsView)
		{
			return MM_MODULE_DIAGNOSTICS;
		}
		else if ($this instanceof MM_SafeModeView)
		{
			return MM_MODULE_SAFE_MODE;
		}
		else if ($this instanceof MM_RepairCorePagesView)
		{
			return MM_MODULE_REPAIR_CORE_PAGES;
		}
		else if ($this instanceof MM_UserDefinedPageView)
		{
			return MM_MODULE_USER_DEFINED_PAGES;
		}
		else if ($this instanceof MM_SmartTagLibraryView)
		{ 
			if($post[self::$MM_JSMODULE] == MM_MODULE_SMARTTAG_LOOKUP)
			{
				return MM_MODULE_SMARTTAG_LOOKUP;
			}
			return MM_MODULE_SMARTTAG_LIBRARY;
		} 
		else 
		{
			return "";
		}
	}
	
 	
 	public function getData($tableName, $fields=null, MM_DataGrid $dg=null, $where = "", $getTotal=false)
 	{
		global $wpdb;
		
		$columns = (is_null($fields)) ? "tbl.*" : implode(",", $fields);
		
 		$sqlResultCount = "SELECT count(distinct id) as total FROM ".$tableName;
		if(!empty($where))
		{
			if(preg_match("/^(where)/", strtolower(trim($where))))
			{
				$sqlResultCount.= " {$where} ";
			}	
			else
			{
				$sqlResultCount.= " where {$where} ";
			}
		}
		
		$countRow = $wpdb->get_row($sqlResultCount);
		
		if($countRow) 
		{
			$sql = "SELECT '{$countRow->total}' as total, ".$columns." FROM ".$tableName." as tbl ";
		}
		else 
		{
			$sql = "SELECT ".$columns." FROM ".$tableName." as tbl ";
		}
		
		if(!empty($where))
		{
			if(preg_match("/^(where)/", strtolower(trim($where))))
			{
				$sql.= " {$where} ";
			}	
			else
			{
				$sql.= " where {$where} ";
			}
		}
		
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) 
		{
			$sql.= "ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		if($getTotal)
		{
			$result = $wpdb->get_results($sql);
			return $result;
		}
		
		if(!is_null($dg)) 
		{
			$sql .= $dg->getLimitSql();
		}

		$result = $wpdb->get_results($sql);
		
		if(!$result || is_null($result)) 
		{
			return array();
		}
		
		return $result;
 	}
 	
 	protected function checkAjaxReferer($action, $name)
	{
		// For now, we're disabling this, always return true
		return true;
  		//return check_ajax_referer( $action, $name, false );
	}
}
