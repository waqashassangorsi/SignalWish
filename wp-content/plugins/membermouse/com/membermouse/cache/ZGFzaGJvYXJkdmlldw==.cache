/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_DashboardView extends MM_RBACGeneralEmployeeView
{
	public static $MM_JSACTION_STORE_TRAINING_VIDEO_STATE = "storeTrainingVideoState";

	public function __construct()
	{
		parent::__construct();
		$this->permissions["*"] += array(MM_Role::$ROLE_ANALYST);
	}
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{		
				case self::$MM_JSACTION_STORE_TRAINING_VIDEO_STATE:
					return $this->storeTrainingVideoState($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	private function storeTrainingVideoState($post)
	{
		if(isset($post["mm_show_training_videos"]))
		{
			if(isset($post["mm_admin_id"]))
			{
				$optionName = MM_OptionUtils::$OPTION_KEY_SHOW_TRAINING_VIDEOS."-".$post["mm_admin_id"];
				MM_OptionUtils::setOption($optionName, $post["mm_show_training_videos"]);
				return new MM_Response();
			}
			else
			{
				return new MM_Response("Unable to store training video state. Couldn't find current user ID.", MM_Response::$ERROR);
			}
		}
		else
		{
			return new MM_Response("Unable to store training video state. Missing current state value.", MM_Response::$ERROR);
		}
	}
}
