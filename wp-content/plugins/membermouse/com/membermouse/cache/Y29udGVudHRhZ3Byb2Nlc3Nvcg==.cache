class MM_ContentTagProcessor
{	
	public static $TAG_CONTENT_DATA = "mm_content_data";
	public static $TAG_CONTENT_LINK = "mm_content_link";
	
	
	/**
	 * Takes a SmartTag string and returns true if the SmartTag is related to content.
	 * 
	 * @param String $smartTag the name of the SmartTag
	 * @return Boolean returns true if the SmartTag passed is related to content.
	 */
	public static function isContentSmartTag($smartTag)
	{
		switch($smartTag) 
		{
			case self::$TAG_CONTENT_DATA:
			case self::$TAG_CONTENT_LINK:
				return true;
				
			default:
				return false;
		}
	}
	
	
	/**
	 * Takes a SmartTag name and a number of properties related to the SmartTag and makes a call to 
	 * the appropriate function based on the SmartTag name.
	 * @param String $smartTag the name of the SmartTag
	 * @param String $content the content to process
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function processSmartTag($smartTag, $content, $atts, $code)
	{
		switch($smartTag) 
		{
			case self::$TAG_CONTENT_DATA:
				return self::mm_content_data($content, $atts, $code);
				
			case self::$TAG_CONTENT_LINK:
				return self::mm_content_link($content, $atts, $code);
				
			default:
				return "Invalid Content SmartTag {$smartTag} found";
		}
	}
	
	
	/**
	 * This function processes the MM_Content_Data tag. It is responsible for 
	 * returning data associated with the content ID passed or grabbed from the current page.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function mm_content_data($content, $atts, $code)
	{
		if(is_array($atts) && count($atts)>0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key=$v;
			}
		}
		
		// get current page ID
		if(!isset($id))
		{
			global $post;
			$id = $post->ID;
		}
		
		// ensure that the id attribute is set		
		if(isset($id) && isset($name))
		{
			switch(strtolower($name))
			{		
				case "title":
					$wpPost = get_post($id);
						
					if($wpPost)
					{
						return $wpPost->post_title;
					}
					else
					{
						return "#";
					}
					
					break;
					
				case "dateavailable":
					$user = MM_SmartTagUtil::getCurrentUser();
					$protectedContent = new MM_ProtectedContentEngine();
					$dateOffset = $protectedContent->daysToAccess($id, $user->getId());
						
					if($dateOffset !== false)
					{
						$postDate = mktime(0, 0, 0, date("m"), date("d")-$dateOffset, date("y"));
					
						$wpPost = get_post($id);
						
						if($wpPost && ($wpPost->post_status == "publish" || $wpPost->post_status == "inherit")
								&& ($wpPost->post_type == "post" || $wpPost->post_type == "page") 
								|| MM_Utils::isCustomPostType($wpPost->post_type))
						{
							$formatStr = "M j, Y";
					
							if(isset($dateformat))
							{
								$formatStr = $dateformat;
							}
							
							$formattedDate = MM_Utils::dateToLocal(date("M j, Y H:i", $postDate), $formatStr);
					
							return $formattedDate;
						}
					}
					
					if(isset($noaccessmessage))
					{
						return $noaccessmessage;
					}
					else
					{
						return "";
					}
					
					break;
				
				default:
					return "Invalid SmartTag Configuration: Invalid name attribute '{$name}' passed to SmartTag {$code}";
			}
		}
		else
		{
			return "Invalid SmartTag Configuration: 'id' and 'name' attributes are required for SmartTag {$code}";
		}
	}
	
	
	/**
	 * This function processes the MM_Content_Link tag. It is responsible for 
	 * returning the permalink associated with the content ID passed or the current page/post.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public static function mm_content_link($content, $atts, $code)
	{
		if(is_array($atts) && count($atts)>0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key=$v;
			}
		}
		
		// get current page ID
		if(!isset($id))
		{
			global $post;
			$id = $post->ID;
		}
		
		// ensure that the id attribute is set		
		if(isset($id))
		{
			$url = get_permalink($id);
			
			if(isset($autologin) && $autologin == "true")
			{
				// generate a login token
				$currentUser = MM_SmartTagUtil::getCurrentUser();
				if($currentUser->isValid())
				{
					$loginTokenResponse = MM_LoginToken::generateToken($currentUser->getId());
			
					if (MM_Response::isSuccess($loginTokenResponse))
					{
						$loginToken = $loginTokenResponse->message;
						$url = MM_Utils::appendUrlParam($url, MM_Session::$PARAM_LOGIN_TOKEN, $loginToken);
					}
				}
			}
			
			return $url;
		}
		else
		{
			return "Invalid SmartTag Configuration: 'id' attribute is required for SmartTag {$code}";
		}
	}
}
