/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 *
 * MM_ShoppingCart is an abstraction of a user's cart during checkout/registration. It facilitates the persistence of membership and/or
 * product selections (using the session) between page loads
 */
class MM_ShoppingCart {
	
	protected $billingAddress; //stored here to allow easy transfer to order object
	protected $shippingAddress; //stored here to allow easy transfer to order object, also allows shipping estimates to be calculated on the cart without an order
	
	protected $cartItems = array();
	protected $cartCoupons = array();	
	
	public function setBillingAddress(MM_CustomerAddress $billingAddress)
	{
		$this->billingAddress = $billingAddress;
	}
	
	public function getBillingAddress()
	{
		return $this->billingAddress;
	}
	
	public function setShippingAddress(MM_CustomerAddress $shippingAddress)
	{
		$this->shippingAddress = $shippingAddress;
	}
	
	public function getShippingAddress()
	{
		return $this->shippingAddress;
	}
	
	/**
	 * Populate the billing address using the fields in array data
	 * @param array $data An array of key/value pairs representing data from the registration process
	 */
	public function setBillingAddressFromData($data)
	{
		$address = new MM_CustomerAddress();
		$address->setFromBillingAddressData($data);
		$this->setBillingAddress($address);
	}
	
	/**
	 * Populate the shipping address using the fields in array data 
	 * @param array $data An array of key/value pairs representing data from the registration process
	 */
	public function setShippingAddressFromData($data)
	{
		$address = new MM_CustomerAddress();
		$address->setFromShippingAddressData($data);
		$this->setShippingAddress($address);
	}
	
	/**
	 * This method takes an array of cart items and adds them to the cart. For a single item, it is expected to be an array of size one
	 * @param Array $cart_items An array of objects of type MM_ShoppingCartItems, that will be added to the cart
	 */
	public function addItemsToCart($cart_items)
	{
		if (is_array($cart_items)) 
		{
			foreach ($cart_items as $anItem)
			{
				if ($anItem instanceof MM_ShoppingCartItem)
				{
					if ($anItem->getItemType() == MM_ShoppingCartItem::$CART_PRODUCT)
					{
						if (isset($this->cartItems[$anItem->getItem()->getId()]))
						{
							//an item of this type already exists in the cart, so increase the quantity
							$existing_item = $this->cartItems[$anItem->getItem()->getId()];
							$existing_item->setQuantity(intval($existing_item->getQuantity()) + intval($anItem->getQuantity()));
						}
						else 
						{
							$this->cartItems[$anItem->getItem()->getId()] = $anItem;
						}
					}
					else if ($anItem->getItemType() == MM_ShoppingCartItem::$CART_COUPON)
					{	
						//for now, coupons of the same type are not stackable
						$this->cartCoupons[$anItem->getItem()->getId()] = $anItem;
					}
				}
			}
		}
	}

	/**
	 * This method returns the products in the cart
	 * @return An array of objects of type MM_ShoppingCartItem representing the products in the cart
	 */
	public function getProductsInCart()
	{
		return $this->cartItems;
	}
	
	/**
	 * This method returns the coupons in the cart
	 * @return An array of objects of type MM_ShoppingCartItem representing the coupons in the cart
	 */
	public function getCouponsInCart()
	{
		return $this->cartCoupons;
	}

	/**
	 * This method removes items from the cart
	 * @param Array $itemArray An array of objects of type MM_ShoppingCartItem, representing the items or coupons to be removed from the cart
	 */
	public function removeItemsFromCart($itemArray)
	{
		if (is_array($itemArray))
		{
			foreach ($itemArray as $anItem)
			{
				if ($anItem instanceof MM_ShoppingCartItem)
				{
					$itemToRemove = $anItem->getItem();
					if (($anItem->getItemType() == MM_ShoppingCartItem::$CART_PRODUCT) && isset($this->cartItems[$itemToRemove->getId()]))
					{
						//if the item represents a product in the cart, remove the appropriate number of items 
						//if quantity falls to 0 or less, remove it from the cart
						$itemInCart = $this->cartItems[$itemToRemove->getId()];
						$newQuantity = (intval($itemInCart->getQuantity) - intval($itemToRemove->getQuantity()));
						if ($newQuantity > 0)
						{
							$itemInCart->setQuantity($newQuantity);
						}
						else
						{
							unset($this->cartItems[$itemInCart->getId()]);
						}
					}
					else if (($anItem->getItemType() == MM_ShoppingCartItem::$CART_COUPON) && isset($this->cartCoupons[$itemToRemove->getId()]))
					{
						//if the item represents a coupon in the cart remove it (coupons not currently stackable, so quatity should never be >1)
						unset($this->cartCoupons[$itemToRemove->getId()]);
					}
				}	
			}
		}
	}

	/**
	 * This convenience method resets the cart (removes all items)
	 */
	public function clearCart()
	{
		$this->cartProducts = array();
	}

}
