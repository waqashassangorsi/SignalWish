/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_CustomField extends MM_Entity
{	
	public static $TYPE_INPUT = "input";
	public static $TYPE_CHECKBOX = "checkbox";
	public static $TYPE_RADIO = "radio";
	public static $TYPE_DROPDOWN = "dropdown";
	public static $TYPE_TEXT = "text";
	
	public static $CHECKBOX_ON = "mm_cb_on";
	public static $CHECKBOX_OFF = "mm_cb_off";
	
	private static $NOT_SET_TEXT = "- not set -";
	
	private $displayName = "";
	private $type;
	private $showOnMyAccountFlag = "0";
	private $hiddenFlag = "0";
	
	public function getData() 
	{
		global $wpdb;
		
		$sql = "SELECT * FROM ".MM_TABLE_CUSTOM_FIELDS." WHERE id='".$this->id."';";
		$result = $wpdb->get_row($sql);
		
		if($result) 
		{
			$this->setData($result);
		}
		else 
		{
			parent::invalidate();
		}
	}

	public function setData($data)
	{
		try 
		{
			$this->displayName = $data->display_name;
			$this->type = $data->type;
			$this->showOnMyAccountFlag = $data->show_on_my_account;
			$this->hiddenFlag = $data->is_hidden;
			parent::validate();
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}
	
	
	public function commitData()
	{	
		global $wpdb;
		
		// make sure display name is unique
		if($this->displayNameExists())
		{
			$ctr = 1;
			$originalDisplayName = $this->displayName;
			
			while($this->displayNameExists())
			{
				$this->displayName = $originalDisplayName." ".$ctr;
				$ctr++;
			}
		}
		
		if(intval($this->id) > 0)
		{
			$sql = "update ".MM_TABLE_CUSTOM_FIELDS." set display_name='%s', type='%s', show_on_my_account='%s', is_hidden='%d' where id='{$this->id}';";
			
			$preparedSql = $wpdb->prepare($sql, $this->getDisplayName(), $this->getType(), $this->showOnMyAccountFlag, $this->hiddenFlag);
			$ret = $wpdb->query($preparedSql);
			
			if($ret===false)
			{
				return new MM_Response("Could not save query {$preparedSql}.", MM_Response::$ERROR);
			}
		}
		else
		{
			$data = array("display_name" => $this->getDisplayName(), 
					"type" => $this->getType(), 
					"show_on_my_account" => $this->showOnMyAccountFlag,
					"is_hidden" => $this->hiddenFlag
			);
			$ret = $wpdb->insert(MM_TABLE_CUSTOM_FIELDS, $data);
			
			if($ret === false)
			{
				return new MM_Response("Could not save custom field due to SQL error.", MM_Response::$ERROR);
			}
			else
			{
				$this->id = $wpdb->insert_id;
			}
		}
		
		return new MM_Response();
	}
	
	
	public function delete()
	{	
		global $wpdb;
		
		if(intval($this->id) > 0)
		{
			$sql = "delete from ".MM_TABLE_CUSTOM_FIELDS." where id='{$this->id}' limit 1";
			$result = $wpdb->query($sql);
			
			if($result===false)
			{
				return new MM_Response("Could not remove custom field due to SQL error.", MM_Response::$ERROR);
			}
			
			$this->deleteOptions();
			
			return new MM_Response();
		}
		
		return new MM_Response("Invalid custom field, could not remove.", MM_Response::$ERROR);
	}
	
	
	private function displayNameExists()
	{
		global $wpdb;
		
		$sql = "select count(id) as total from ".MM_TABLE_CUSTOM_FIELDS." where display_name = '%s' ";
		
		if($this->id>0)
		{
			$sql.=" and id!='{$this->id}' ";
		}
		
		$preparedSql = $wpdb->prepare($sql, $this->getDisplayName());
		
		$result = $wpdb->get_row($preparedSql);
		
		if(isset($result->total))
		{
			if($result->total>0)
			{
				return true;
			}
		}
		
		return false;
	}
	
	public function draw($value="", $class="", $idPrefix="mm_custom_field_", $includeHelpers=true, $allowUnset=false)
	{
		$html = "";
		
		switch($this->getType())
		{
			case MM_CustomField::$TYPE_CHECKBOX:
				$html .= "<input type=\"hidden\" id=\"{$idPrefix}{$this->id}\" name=\"{$idPrefix}{$this->id}\" value=\"".self::$CHECKBOX_OFF."\" />
";
				$html .= "<input type=\"checkbox\" id=\"{$idPrefix}{$this->id}\" name=\"{$idPrefix}{$this->id}\" value=\"".self::$CHECKBOX_ON."\" ";
				
				if(!empty($class))
				{
					$html .= "class=\"{$class}\" ";
				}
				
				if(($value != "") && ($value == self::$CHECKBOX_ON))
				{
					$html .= "checked";
				}
				
				if($includeHelpers)
				{
					$html .= " onchange=\"jQuery(this).is(':checked') ? jQuery('#{$idPrefix}{$this->id}_helper').val('".self::$CHECKBOX_ON."') : jQuery('#{$idPrefix}{$this->id}_helper').val('".self::$CHECKBOX_OFF."');\" ";
				}
				
				$html .= "/>
";
				
				if($includeHelpers)
				{
					$html .= "<input type=\"hidden\" id=\"{$idPrefix}{$this->id}_helper\" name=\"{$idPrefix}{$this->id}_helper\" ";
				
					if(($value != "") && ($value == self::$CHECKBOX_ON))
					{
						$html .= "value=\"".self::$CHECKBOX_ON."\"";
					}
					else 
					{
						$html .= "value=\"".self::$CHECKBOX_OFF."\"";
					}
					
					$html .= "/>
";
				}
				
				break;
			
			case MM_CustomField::$TYPE_DROPDOWN:
				$options = $this->getOptions();
				
				if($allowUnset)
				{
					array_unshift($options, "");
				}
				
				if(count($options) > 0)
				{
					$list = array();
					$valueInOptions = false;
					
					foreach($options as $option)
					{
						if($option == "" && $allowUnset)
						{
							$option = self::$NOT_SET_TEXT;
						}
						
						$list[htmlentities($option, ENT_QUOTES, "UTF-8")] = $option;
						
						if(($value != "") && ((strtolower(htmlentities($option, ENT_QUOTES, "UTF-8")) == strtolower($value)) || (strtolower($option) == strtolower($value))))
						{
							$valueInOptions = true;
							
							if((strtolower($option) == strtolower($value)))
							{
								$value = htmlentities($value, ENT_QUOTES, "UTF-8");
							}
						}
					}
					
					// if the default value is not in the options, add the value as an option
					if(!$valueInOptions && ($value != ""))
					{
						$list[htmlentities($value, ENT_QUOTES, "UTF-8")] = $value;
					}
					
					$html .= "<select id=\"{$idPrefix}{$this->id}\" name=\"{$idPrefix}{$this->id}\" ";
					
					if(!empty($class))
					{
						$html .= "class=\"{$class}\" ";
					}
					
					$html .= ">
";
					
					$html .= MM_HtmlUtils::generateSelectionsList($list, $value);
					$html .= "</select>
";
				}
				break;
			
			case MM_CustomField::$TYPE_INPUT:
				$html = "<input type=\"text\" id=\"{$idPrefix}{$this->id}\" name=\"{$idPrefix}{$this->id}\" ";
				
				if(!empty($class))
				{
					$html .= "class=\"{$class}\" ";
				}
				
				if($value != "")
				{
					$html .= "value=\"{$value}\" ";
				}
				
				$html .= "/>
";
				break;
			
			case MM_CustomField::$TYPE_RADIO:
				$options = $this->getOptions();
				
				if($allowUnset)
				{
					array_unshift($options, "");
				}
				
				// check if default value is in the list of options and if it's not, add it as an option
				$valueInOptions = false;
				if($value != "")
				{
					foreach($options as $option)
					{
						if(strtolower($value) == strtolower(htmlentities($option, ENT_QUOTES, "UTF-8")) || (strtolower($option) == strtolower($value)))
						{
							$valueInOptions = true;
							
							if((strtolower($option) == strtolower($value)))
							{
								$value = htmlentities($value, ENT_QUOTES, "UTF-8");
							}
							break;
						}
					}
				}
				
				if(!$valueInOptions && $value != "")
				{
					$options[htmlentities($value, ENT_QUOTES, "UTF-8")] = $value;
				}
				
				foreach($options as $option)
				{
					$html .= "<label ";
					
					if(!empty($class))
					{
						$html .= "class=\"{$class}\" ";
					}
					
					$html .= "><input type=\"radio\" id=\"{$idPrefix}{$this->id}\" name=\"{$idPrefix}{$this->id}\" ";
					$html .= "value=\"".htmlentities($option, ENT_QUOTES)."\" ";
					
					if($includeHelpers)
					{
						$html .= " onchange=\"jQuery('#{$idPrefix}{$this->id}_helper').val(jQuery(this).val())\" ";
					}
					
					if(strtolower($value) == strtolower(htmlentities($option, ENT_QUOTES, "UTF-8")))
					{
						$html .= "checked";
					}
					
					if($option == "" && $allowUnset)
					{
						$option = "<em>".self::$NOT_SET_TEXT."</em>";
					}
					
					$html .= "> {$option}</label> 
";
				}
				
				if($includeHelpers)
				{
					$html .= "<input type=\"hidden\" id=\"{$idPrefix}{$this->id}_helper\" name=\"{$idPrefix}{$this->id}_helper\" ";
				
					if($value != "")
					{
						$html .= "value=\"{$value}\" ";
					}
					
					$html .= "/>
";
				}
				
				break;
			
			case MM_CustomField::$TYPE_TEXT:
				$html = "<textarea id=\"{$idPrefix}{$this->id}\" name=\"{$idPrefix}{$this->id}\" ";
				
				if(!empty($class))
				{
					$html .= "class=\"{$class}\" ";
				}
				
				$html .= ">";
				
				if($value != "")
				{
					$html .= $value;
				}
				
				$html .= "</textarea>";
				break;
		}
		
		return $html;
	}
	
	
	/** OPTION METHODS */
	
	public function addOption($value)
	{
		global $wpdb;
		
		if(intval($this->id) > 0)
		{
			$data = array("custom_field_id" => $this->getId(), "value" => $value);
			$result = $wpdb->insert(MM_TABLE_CUSTOM_FIELD_OPTIONS, $data);
				
			if($result === false)
			{
				return new MM_Response("Could not add option due to SQL error.", MM_Response::$ERROR);
			}
		}
		
		return new MM_Response("Unable to add option. Custom field is invalid.", MM_Response::$ERROR);
	}
	
	public function deleteOptions()
	{
		if(intval($this->id) > 0)
		{
			global $wpdb;
			
			$sql = "delete from ".MM_TABLE_CUSTOM_FIELD_OPTIONS." where custom_field_id='{$this->id}';";
			$result = $wpdb->query($sql);
				
			if($result === false)
			{
				return new MM_Response("Could not remove custom field options due to SQL error.", MM_Response::$ERROR);
			}
			else 
			{
				return new MM_Response();
			}
		}
	}
	
	public function getOptions()
	{
		global $wpdb;
		
		$data = array();
		$sql = "select * from ".MM_TABLE_CUSTOM_FIELD_OPTIONS." where custom_field_id='{$this->id}' order by id asc;";
		$result = $wpdb->get_results($sql);
		
		if(!$result || is_null($result))
		{
			return $data;
		}
		
		foreach($result as $key=>$item)
		{
			$data[] = $item->value;
		}
		
		return $data;
	}
	
	
	/** GETTERS / SETTERS */
	
	public function setDisplayName($str)
	{
		$this->displayName = trim($str);
	}
	
	public function getDisplayName()
	{
		return $this->displayName;
	}
	
	public function showOnMyAccount()
	{
		return ($this->showOnMyAccountFlag == "1") ? true : false;
	}
	
	public function setShowOnMyAccount($flag)
	{
		$this->showOnMyAccountFlag = $flag;
	}
	
	public function isHidden()
	{
		return ($this->hiddenFlag == "1") ? true : false;
	}
	
	public function setHiddenFlag($flag)
	{
		$this->hiddenFlag = $flag;
	}
	
	public function getType()
	{
		if(MM_CustomField::typeIsValid($this->type))
		{
			return $this->type;
		}
		else
		{
			return MM_CustomField::$TYPE_INPUT;
		}
	}
	
	public function setType($type)
	{
		if(MM_CustomField::typeIsValid($type))
		{
			$this->type = $type;
		}
		else
		{
			$this->type = MM_CustomField::$TYPE_INPUT;
		}
	}
	
	
	/** UTILITES **/
	
	public static function isBeingUsed($customFieldId)
	{
		global $wpdb;
	
		$sql = "select count(id) as total from ".MM_TABLE_CUSTOM_FIELD_DATA." where custom_field_id='{$customFieldId}' and LENGTH(value)>0";
	
		$result = $wpdb->get_row($sql);
	
		if(isset($result->total))
		{
			if($result->total>0)
			{
				return true;
			}
		}
	
		return false;
	}
	
	
	public static function getDataByFieldId($fieldId)
	{
		$field = new MM_CustomField();
		
		global $wpdb;
		
		$sql = "select * from ".MM_TABLE_CUSTOM_FIELDS." where id='{$fieldId}'";
		$row = $wpdb->get_row($sql);
		
		if(isset($row->id) && $row->id>0){
			$field->setData($row);
			$field->id = $row->id;
		}
		
		return $field;
	}
	
	
	public static function hasCustomFields($includeHidden=true)
	{
		global $wpdb;
		
		$sql = "select count(id) as total from ".MM_TABLE_CUSTOM_FIELDS." ";
		
		if($includeHidden == false)
		{
			$sql .= " WHERE is_hidden = '0' ";
		}
		
		$result = $wpdb->get_row($sql);
		
		if(isset($result->total))
		{
			if($result->total>0)
			{
				return true;
			}
		}
		
		return false;
	}
	
	
	public static function getCustomFieldDataByUser($userId)
	{
		global $wpdb;
		
		$sql = "select cf.id, cf.display_name, cd.value from ".MM_TABLE_CUSTOM_FIELDS." cf
					LEFT JOIN ".MM_TABLE_CUSTOM_FIELD_DATA." cd on cf.id=cd.custom_field_id and cd.user_id='{$userId}' order by id ASC";
		
		$results = $wpdb->get_results($sql);
		
		if(is_array($results))
		{
			foreach($results as &$row)
			{
				$row->value = stripslashes(html_entity_decode($row->value,ENT_COMPAT | ENT_HTML401, "UTF-8"));
			}
			
			return $results;
		}
		
		return array();
	}
	
	public static function getCustomFieldsList($filterForMyAccountPage=false, $includeHidden=true)
	{
		global $wpdb;
	
		$sql = "SELECT * FROM ".MM_TABLE_CUSTOM_FIELDS;
	
		if($filterForMyAccountPage == true || $includeHidden == false)
		{
			$sql .= " WHERE ";
			
			if($filterForMyAccountPage)
			{
				$sql .= "show_on_my_account = '1'";
			}
			
			if($includeHidden == false)
			{
				$sql .= "is_hidden = '0'";
			}
		}
		
		$sql .= " ORDER BY id ASC;";
		
		$results = $wpdb->get_results($sql);
	
		$list = array();
	
		if(is_array($results))
		{
			foreach($results as $row)
			{
				$list[$row->id] = $row->display_name;
			}
		}
	
		return $list;
	}
	
	public static function getFieldTypeName($type)
	{
		switch($type)
		{
			case MM_CustomField::$TYPE_CHECKBOX:
				return "Check Box";
				
			case MM_CustomField::$TYPE_DROPDOWN:
				return "Drop Down";
				
			case MM_CustomField::$TYPE_INPUT:
				return "Short Text";
						
			case MM_CustomField::$TYPE_RADIO:
				return "Radio Buttons";
				
			case MM_CustomField::$TYPE_TEXT:
				return "Long Text";
				
			default:
				return "Short Text";
		}
	}
	
	public static function getFieldTypeList()
	{
		$list = array();
		$list[MM_CustomField::$TYPE_INPUT] = MM_CustomField::getFieldTypeName(MM_CustomField::$TYPE_INPUT);
		$list[MM_CustomField::$TYPE_CHECKBOX] = MM_CustomField::getFieldTypeName(MM_CustomField::$TYPE_CHECKBOX);
		$list[MM_CustomField::$TYPE_DROPDOWN] = MM_CustomField::getFieldTypeName(MM_CustomField::$TYPE_DROPDOWN);
		$list[MM_CustomField::$TYPE_TEXT] = MM_CustomField::getFieldTypeName(MM_CustomField::$TYPE_TEXT);
		$list[MM_CustomField::$TYPE_RADIO] = MM_CustomField::getFieldTypeName(MM_CustomField::$TYPE_RADIO);
		return $list;
	}
	
	public static function typeRequiresOptions($type)
	{
		switch($type)
		{
			case MM_CustomField::$TYPE_DROPDOWN:
			case MM_CustomField::$TYPE_RADIO:
				return true;
		}
		
		return false;
	}
	
	public static function typeIsValid($type)
	{
		switch($type)
		{
			case MM_CustomField::$TYPE_CHECKBOX:
			case MM_CustomField::$TYPE_DROPDOWN:
			case MM_CustomField::$TYPE_INPUT:
			case MM_CustomField::$TYPE_RADIO:
			case MM_CustomField::$TYPE_TEXT:
				return true;
		}
		
		return false;
	}
}