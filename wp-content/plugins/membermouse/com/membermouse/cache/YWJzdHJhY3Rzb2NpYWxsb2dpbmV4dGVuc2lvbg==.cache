/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 * 
 * MM_AbstractSocialLoginExtension is an abstract representation of a provider supported by the HybridAuth library, 
 * used to implement login and signup functionality using the provider to authenticate the user. 
 * 
 * Constraints of the social login extensions:
 * 1. Each extension has a unique token. This token is case-insensitive
 * 2. Each token is also the value used to identify the provider when using the 'provider' attribute of the social login and social signup smart tags
 * 3. The token is also used as the identfier for the provider when communicating with the hybridauth library
 *
 */
class MM_AbstractSocialLoginExtension extends MM_Extension
{	
	protected $id            = "";
	protected $token         = "";
	protected $providerName  = "";
	protected $extensionName = "";
	protected $apiKey        = "";
	protected $apiSecret     = "";
	protected $active = false;
	
	protected $listingImage  = "";
	protected $keyName       = "";
	protected $secretName    = "";
	
	protected $allowSignups = false;
	protected $signupMembershipLevel = "";
	
	protected $supportArticleUrl = "http://support.membermouse.com/support/solutions/";
	protected $providesEmail = true;
	protected $emailHandling = "";
	
	protected $endpointUrl = "";
	protected $libraryUrl  = "";
	protected $additionalInfo = "";
	
	//this value holds the instantiated auth library
	protected $auth = "";
	
	public static $EMAIL_PROVIDED = "email_provided";
	
	//handling strategies for providers that don't allow access to user email
	public static $EMAIL_RETRIEVED_BY_POPUP = "retrieved_by_popup";
	public static $EMAIL_GENERATE_BOGUS_EMAIL = "generate_bogus";
	
	//identifiers for common provider actions
	public static $ACTION_AUTHENTICATE     = "authenticate";
	public static $ACTION_GET_USER_PROFILE = "get_user_profile";
	
	public function __construct($autoloadDependencies=true,$configData="") 
	{ 
		$this->endpointUrl = plugins_url()."/".MM_PLUGIN_NAME."/endpoints/auth.php";
		$this->libraryUrl  = plugins_url()."/".MM_PLUGIN_NAME."/lib/hybridauth";
		$autoloadDependencies = (bool)$autoloadDependencies;
		if ($autoloadDependencies)
		{
			$this->loadDependencies();
		}
		$this->loadConfiguration($configData);
		parent::__construct($autoloadDependencies,$configData);
	}
	
	
	/**
	 * Loads any dependencies needed by social login providers. Initially this is just the HybridAuth library
	 * Note: Must be able to be called multiple times without generating an error
	 */
	public function loadDependencies()
	{
		if ($this->providesEmail !== true)
		{
			wp_enqueue_script("membermouse-blockUI", plugins_url(MM_PLUGIN_NAME."/resources/js/common/jquery.blockUI.js"), array(), MemberMouse::getPluginVersion(), true);
		}
		
		$commonJSDir = "/resources/js/common/";
		$dependency  = ((isLocalInstall() && file_exists(MM_PLUGIN_ABSPATH."{$commonJSDir}class.js")) || !file_exists(MM_PLUGIN_ABSPATH."{$commonJSDir}mm-common-core.js")) ? array('class.js') : array('mm-common-core.js');
		
		wp_enqueue_script("membermouse-socialLogin", plugins_url(MM_PLUGIN_NAME."/resources/js/common/mm-social_login.js"), $dependency, MemberMouse::getPluginVersion(), true);
		wp_localize_script('membermouse-socialLogin', 'socialLoginVars', array("endpointUrl"=>$this->endpointUrl));
		require_once( MM_PLUGIN_ABSPATH."/lib/hybridauth/Hybrid/Auth.php" );
	}
	
	
	/**
	 * Loads the configuration for an implementing social login extension from the db
	 * 
	 * @return boolean true if the configuration could be loaded, false if it was not found or there was an error
	 */
	public function loadConfiguration($configData="")
	{
		global $wpdb;
		if (!empty($this->token))
		{
			if (!is_array($configData))
			{
				$config = $wpdb->get_row($wpdb->prepare("SELECT * from ".MM_TABLE_SOCIAL_LOGIN_PROVIDERS." WHERE token = %s",$this->token));
			}
			else 
			{
				$config = $configData;
			}
			
			if (!empty($config))
			{
				$dbFields = array("id"=>"id","api_key"=>"apiKey","api_secret"=>"apiSecret","signup_membership_level"=>"signupMembershipLevel");
				foreach ($dbFields as $k=>$v)
				{
					if (isset($config->$k))
					{
						$this->$v = $config->$k;
					}
				}
				
				$this->active = (isset($config->active) && ($config->active == 1))?true:false;
				$this->allowSignups = (isset($config->allow_signups) && ($config->allow_signups == 1))?true:false;
				
				if (isset($config->settings))
				{
					$settings = unserialize($config->settings);
					if (is_array($settings))
					{
						foreach ($settings as $k=>$v)
						{
							if (isset($this->$k))
							{
								$this->$k = $v;
							}
						}
					}
				}
				return true;
			}
		}
		return false;
	}
	
	
	/**
	 * Saves the configuration of an implementing social login extension
	 * 
	 * @return boolean true if configuration was written to the db successfully, false otherwise
	 */
	public function saveConfiguration()
	{
		global $wpdb;
		
		if (!empty($this->token))
		{
			$data = array(
					"name"					  => $this->extensionName,
					"token"     			  => $this->token,
					"api_key"   			  => $this->apiKey,
					"api_secret"			  => $this->apiSecret,
					"active"     			  => ($this->active)?1:0,
					"settings"   			  => $this->prepareSettings(),
					"allow_signups" 		  => ($this->allowSignups)?1:0,
					"signup_membership_level" => $this->signupMembershipLevel
			);
			if (empty($this->id))
			{
				$res = $wpdb->insert(MM_TABLE_SOCIAL_LOGIN_PROVIDERS,$data);
			}
			else 
			{
				$res = $wpdb->update(MM_TABLE_SOCIAL_LOGIN_PROVIDERS,$data,array("id"=>$this->id));
			}
			if ($res !== false)
			{
				$this->id = $wpdb->insert_id;
				return true;
			}
		}
		return false;
	}
	
	
	public function prepareSettings()
	{
		$knownFields = array("id","providerName","extensionName","token","apiKey","apiSecret","active","keyName","secretName","listingImage",
							 "providesEmail","supportArticleUrl","signupMembershipLevel","allowSignups","auth");
		if ($this->providesEmail)
		{
			$knownFields[] = "emailHandling";
		}
		$settings = array();
		foreach ($this as $k=>$v)
		{
			if (!in_array($k,$knownFields))
			{
				$settings[$k] = $v;
			}
		}
		return serialize($settings);
	}
	
	
	public function isActive()
	{
		return $this->active && $this->hasPermission();
	}
	
	public function hasPermission() 
	{
		return (MM_MemberMouseService::hasPermission(MM_MemberMouseService::$EXTENSION_SOCIAL_LOGIN) == MM_MemberMouseService::$ACTIVE);
	}
	
	public function displayListingItem() 
	{
		$crntPage = MM_ModuleUtils::getPage();
		$thisExtUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS)."&".MM_Session::$PARAM_SUBMODULE."=".$this->token;
		?>
		<div class="mm-extension <?php echo $this->isActive() ? 'mm-extension-active' : ''; ?>">
		<a href="<?php echo $thisExtUrl; ?>"><img src="<?php echo $this->listingImage ?>" /></a>
		</div>
		<?php
	}
	
	public function displayConfigScreen() 
	{ 
		$crntPage = MM_ModuleUtils::getPage();
		$thisExtUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS)."&".MM_Session::$PARAM_SUBMODULE."=".$this->token;
		?>
		
		<div style="background-color:#FFF; padding:10px; width:260px;">
			<img src="<?php echo $this->listingImage; ?>" style="width:260px;" />
		</div>
		
		<div style="margin-bottom:15px;">
			<a href="<?php echo $this->supportArticleUrl; ?>" target="_blank">Need help configuring the <?php echo $this->extensionName;?> extension?</a>
		</div>
		
		<?php 
		if($this->hasPermission())
		{
			$dataSaved = false;
			$errors = "";
			
			if(isset($_POST["mm-social-login-form"]))
			{
				$isActive = isset($_POST["mm-{$this->token}-active"]) ? $_POST["mm-{$this->token}-active"] : "";
				$apiKey = isset($_POST["mm-social-login-api-key"]) ? $_POST["mm-social-login-api-key"] : "";
				$apiSecret = isset($_POST["mm-social-login-api-secret"]) ? $_POST["mm-social-login-api-secret"] : "";
				$emailHandling = (isset($_POST["mm-social-login-emailHandling"]) && ($_POST["mm-social-login-emailHandling"] == self::$EMAIL_RETRIEVED_BY_POPUP)) ? self::$EMAIL_RETRIEVED_BY_POPUP : self::$EMAIL_GENERATE_BOGUS_EMAIL;
				$allowSignups = (isset($_POST['mm-social-login-allow-signups']) && ($_POST['mm-social-login-allow-signups'] == "on"));
				$signupMembershipLevel = ($allowSignups && isset($_POST['mm-social-login-signup-membership-level']))?$_POST['mm-social-login-signup-membership-level']:"";
				
				if($isActive == "on" && (empty($apiKey) || empty($apiSecret)))
				{
					if(empty($apiKey))
					{
						$errors .= "{$this->getKeyName()} is required.\\n";	
					}
					
					if(empty($apiSecret))
					{
						$errors .= "{$this->getSecretName()} is required.";
					}
				}
				
				if (empty($errors))
				{
					$this->setActive(($isActive == "on"));
					$this->setApiKey($apiKey);
					$this->setApiSecret($apiSecret);
					if (!$this->providesEmail)
					{
						$this->emailHandling = $emailHandling;
					}
					$this->setAllowSignups($allowSignups);
					$this->signupMembershipLevel = ($allowSignups)?intval($signupMembershipLevel):0;
					$dataSaved = $this->saveConfiguration();
					if (!$dataSaved)
					{
						$errors .= "There was an error saving the configuration";	
					}
				}
			}
			?>
			
			<form method="post" action="">
			<input type="hidden" name="mm-social-login-form" value="save" />
			<table style="width:520px; border-spacing: 10px; border-collapse: separate;">
			<tr>
				<td colspan="2">
					<div style="margin-bottom:10px;">
						<input type="checkbox" name="mm-<?php echo $this->token; ?>-active" <?php echo ($this->isActive()) ? "checked" : ""; ?> /> 
							Enable <span style='font-weight:bold'><?php echo $this->extensionName; ?></span> Extension
					</div>
				</td>
			</tr>
			<tr>
				<td style="vertical-align:top;"><?php echo $this->getKeyName(); ?></td>
				<td>
					<input type="text" name="mm-social-login-api-key" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $this->apiKey ?>" />
				</td>
			</tr>
			<tr>
				<td style="vertical-align:top;"><?php echo $this->getSecretName(); ?></td>
				<td>
					<input type="text" name="mm-social-login-api-secret" style="font-family: courier; font-size:11px; width:250px;" value="<?php echo $this->apiSecret; ?>" />
				</td>
			</tr>
			<tr>
				<td style="vertical-align:top;">Allow Signups?</td>
				<td align="left">
					<input type="checkbox" onClick="jQuery(this).is(':checked')?jQuery('.mm-signup-membership-level-row').show('fast'):jQuery('.mm-signup-membership-level-row').hide('fast');" name="mm-social-login-allow-signups" style="font-family: courier; font-size:11px;" <?php echo ($this->signupMembershipLevel != "")?"CHECKED":"";?> />
				</td>
			</tr>
			<?php if (!$this->providesEmail) { ?>
			<tr class="mm-signup-membership-level-row" <?php echo ($this->signupMembershipLevel == "")?"style='display:none;'":"";?>>
				<td colspan="2" NOWRAP><?php echo MM_Utils::getInfoIcon("", "margin-right:4px;"); ?><?php echo $this->providerName; ?> does not allow access to the user's email address. Please select how to handle signups:</td>
			</tr>
			<tr class="mm-signup-membership-level-row" <?php echo ($this->signupMembershipLevel == "")?"style='display:none;'":"";?>>
				<td colspan="2">
					<input type="radio" name="mm-social-login-emailHandling" value="<?php echo self::$EMAIL_RETRIEVED_BY_POPUP;?>" <?php echo (empty($this->emailHandling) || ($this->emailHandling == self::$EMAIL_RETRIEVED_BY_POPUP))?"CHECKED":""; ?>>Popup a dialog and request the user's email address<br/>
					<input type="radio" name="mm-social-login-emailHandling" value="<?php echo self::$EMAIL_GENERATE_BOGUS_EMAIL;?>" <?php echo ($this->emailHandling == self::$EMAIL_GENERATE_BOGUS_EMAIL)?"CHECKED":""; ?>>Generate a fake email address<br/>
				</td>
				
			</tr>
			<?php } ?>
			<tr class="mm-signup-membership-level-row" <?php echo ($this->signupMembershipLevel == "")?"style='display:none;'":"";?>>
				<td style="vertical-align:top;" NOWRAP>Signup Membership Level</td>
				<td>
					<select name="mm-social-login-signup-membership-level">
						<?php echo MM_HtmlUtils::getMemberships($this->signupMembershipLevel,true,MM_MembershipLevel::$SUB_TYPE_FREE); ?>
					</select>
				</td>
			</tr>
			<?php if (!empty($this->additionalInfo)) echo $this->additionalInfo; ?>
			<tr>
				<td colspan="2" style="padding-top:10px;">
					<input type="submit" name="Submit" class="mm-ui-button blue" value="Save Configuration" />
				</td>
			</tr>
			</table>
			</form>
			
			<p class="mm-section-header" style="font-size:20px !important; margin-top:20px; margin-bottom:20px;">Signup Button SmartTag</p>
			
  			<p>The following SmartTag generates a button that customers can use to sign up for a new account:</p>
  			
  			<p><code style="font-size:14px;">[MM_Social_Signup_Button provider='<?php echo $this->token; ?>']</code></p>
  			
  			<p>
  				<em>Optional Attributes:</em>
  				
  				<p style="margin-left:15px;">
  				<code>membershipLevel</code> - You can optionally use this attribute to override the default signup membership level
  				defined above. It takes a membership level ID for free membership levels only. For example:<br/>
  				<code>[MM_Social_Signup_Button provider='<?php echo $this->token; ?>' membershipLevel='2']</code></p>
  			</p>	
  			
  			<p class="mm-section-header" style="font-size:20px !important; margin-top:20px; margin-bottom:20px;">Login Button SmartTag</p>
  			
  			<p>The following SmartTag generates a button that customers can use to log into an existing account:</p>
  			
  			<p><code style="font-size:14px;">[MM_Social_Login_Button provider='<?php echo $this->token; ?>']</code></p>
  			
  			<p style="margin-top:30px;"><strong>NOTE:</strong> You can set the <code>provider</code> attribute to <code>all</code> to 
  			generate signup or login buttons for all active social login providers. So if you have Google and Facebook active, this single SmartTag
  			will generate a button for each. For example:</p>
  			
  			<p><code style="font-size:14px;">[MM_Social_Signup_Button provider='all']</code></p>
  			<p><code style="font-size:14px;">[MM_Social_Login_Button provider='all']</code></p>
			
			<?php 
			if($dataSaved)
			{
				?>
				<script>alert("Configuration saved successfully");</script>
				<?php
			}
			
			if(!empty($errors))
			{
				?>
				<script>alert("<?php echo $errors; ?>");</script>
				<?php
			}
		}
		else
		{
			?>
		 	<div id="message" class="error" style="padding:10px;">
				In order to use the <?php echo $this->extensionName; ?> extension you must be on the Advanced plan or higher. You can upgrade your license by logging into your account on <a href="http://membermouse.com">membermouse.com</a> and going to the <em>My Account</em> page.
			</div>
		 	<?php 
		}
	}
	
	
	public final function doInitHook()
	{
		//register social login smart tags
		//TODO: only add the shortcodes once, even if multiple providers are active
		add_shortcode('MM_Social_Login_Button', array($this, "processSocialLoginShortcode"));
		add_shortcode('MM_Social_Signup_Button', array($this, "processSocialSignupShortcode"));		
	}
	
	
	public final function processSocialLoginShortcode($atts)
	{
		return $this->processCommonSocialShortcode($atts);
	}
	
	
	public final function processSocialSignupShortcode($atts)
	{
		return $this->processCommonSocialShortcode($atts,false);
	}
	
	
	protected final function processCommonSocialShortcode($atts,$isLogin=true)
	{
		global $wpdb;
		
		$providers = array();
		if (!isset($atts['provider']) || (strtolower($atts['provider']) == "all"))
		{
			$activeProviderTokens = $wpdb->get_col("SELECT token FROM ".MM_TABLE_SOCIAL_LOGIN_PROVIDERS." WHERE active=1");
			foreach ($activeProviderTokens as $activeProviderToken)
			{
				$thisProvider = MM_ExtensionsFactory::getExtension($activeProviderToken);
				if (!is_null($thisProvider) && ($thisProvider instanceof MM_AbstractSocialLoginExtension))
				{
					$providers[] = $thisProvider;
				}
			}
		}
		else 
		{
			//single provider was requested - normalize the provider name into the format used by the tokens
			$thisProvider = MM_ExtensionsFactory::getExtension(ucfirst($atts['provider']));
			if (!is_null($thisProvider) && ($thisProvider instanceof MM_AbstractSocialLoginExtension))
			{
				$providers[] = $thisProvider;
			}
		}
		
		//now the providers array contains all the providers that need to be rendered
		
		$output="";
		foreach ($providers as $currentProvider)
		{
			$shortcodeMembershipLevel = isset($atts['membershiplevel'])?$atts['membershiplevel']:"";
			$shortcodeRedirectUrl = isset($atts['redirecturl'])?$atts['redirecturl']:"";
			$shortcodeFunction = $isLogin?"sociallogin_js.socialLoginLogin":"sociallogin_js.socialLoginSignup";
			if ($isLogin)
			{
				$shortcodeFunction = "sociallogin_js.socialLoginLogin";
			}
			else if ($currentProvider->getEmailHandlingStrategy() == MM_AbstractSocialLoginExtension::$EMAIL_RETRIEVED_BY_POPUP)
			{	
				$shortcodeFunction = "sociallogin_js.socialLoginSignupPromptForEmail";
			}
			else 
			{
				$shortcodeFunction = "sociallogin_js.socialLoginSignup";	
			}
			$shortcodeLinkText = ($isLogin?"Login ":"Signup ")."with {$currentProvider->providerName}";
			$shortcodeTokenName = ucfirst($currentProvider->token);
			$shortcodeClass = $isLogin?"mm-socialLogin{$shortcodeTokenName}Login":"mm-socialLogin{$shortcodeTokenName}Signup";
			$output.="<a href=\"javascript:{$shortcodeFunction}('{$currentProvider->token}','{$shortcodeMembershipLevel}','{$shortcodeRedirectUrl}');\" class='{$shortcodeClass}' title='{$shortcodeLinkText}'>{$shortcodeLinkText}</a> ";
		}
		return $output;
	}
	
	
	public function authenticate()
	{
		try 
		{
			$auth = $this->getAuth();
			@$auth->authenticate($this->token); //suppress poorly handled hybridauth errors when twitter credentials are wrong
			if ($auth->isConnectedWith($this->token))
			{
				return new MM_Response();
			}
			else 
			{
				return new MM_Response("authentication failed",MM_Response::$ERROR);
			}
		}
		catch (Exception $e)
		{
			return new MM_Response("error authenticating",MM_Response::$ERROR);
		}
	}
	
	
	public function getUserProfile()
	{
		$auth = $this->getAuth();
		if ($auth->isConnectedWith($this->token))
		{
			$adapter = $auth->getAdapter($this->token);
			$profile = $adapter->getUserProfile();
			if ($profile instanceof Hybrid_User_Profile)
			{
				return new MM_Response($profile);
			}
			else 
			{
				return new MM_Response("Error retrieving user profile",MM_Response::$ERROR);	
			}
		}
		return new MM_Response("not connected",MM_Response::$ERROR);
	}
	
	
	public function getApiKey() 
	{
		return $this->apiKey;
	}
	
	
	public function setApiKey($apiKey) 
	{
		$this->apiKey = $apiKey;
	}
	
	
	public function getApiSecret() 
	{
		return $this->apiSecret;
	}
	
	
	public function setApiSecret($apiSecret) 
	{
		$this->apiSecret = $apiSecret;
	}
	
	
	public function getActive() 
	{
		return $this->active;
	}
	
	
	public function setActive($active) 
	{
		$this->active = $active;
	}
	
	
	public function getKeyName() 
	{
		return $this->keyName;
	}
	
	
	public function getSecretName() 
	{
		return $this->secretName;
	}
	
	
	public function getEmailHandlingStrategy()
	{
		if ($this->providesEmail)
		{
			return self::$EMAIL_PROVIDED;
		}
		else if ($this->emailHandling == self::$EMAIL_GENERATE_BOGUS_EMAIL)
		{
			return self::$EMAIL_GENERATE_BOGUS_EMAIL;
		}
		return self::$EMAIL_RETRIEVED_BY_POPUP;
	}
	
	
	protected function getAuth()
	{
		if (!class_exists("Hybrid_auth"))
		{
			return false;	
		}
		
		if (!empty($this->auth) && ($this->auth instanceof Hybrid_Auth))
		{
			return $this->auth;
		}
		
		$this->auth = new Hybrid_Auth($this->getHybridAuthConfig());
		return $this->auth;			
	}
	
	
	protected function getHybridAuthConfig()
	{
		$config = array(
				"base_url" => MM_PLUGIN_URL."/lib/hybridauth/",
		);
		return $config;
	}
	
	
	/**
	 * Same as getAllowsSignups(), included for increased readability
	 */
	public function allowsSignups()
	{
		return $this->allowSignups;	
	}
	
	
	public function getAllowSignups() 
	{
		return $this->allowSignups;
	}
	
	
	public function setAllowSignups($allowSignups) 
	{
		$this->allowSignups = $allowSignups;
	}
	
	
	public function linkUserToSocialMediaAccount(MM_User $user, $socialMediaUniqueId)
	{
		global $wpdb;
		
		if (!$user->isValid())
		{
			return new MM_Response("Social Login: Unable to link user to social media account because the user is invalid",MM_Response::$ERROR);
		}
		
		if (empty($socialMediaUniqueId))
		{
			return new MM_Response("Social Login: Unable to link user to social media account because the social network unique id is invalid",MM_Response::$ERROR);
		}

		//can't remove a linked account with a bogus email, because then there is no way to log in
		$res = $wpdb->replace(MM_TABLE_SOCIAL_LOGIN_LINKED_PROFILES, array(
					"provider_id" => $this->id,
					"unique_id"	  => $socialMediaUniqueId,
					"user_id"     => $user->getId(),
					"removable"	  => ($this->getEmailHandlingStrategy() == self::$EMAIL_GENERATE_BOGUS_EMAIL)?0:1
				));
		
		if ($res === false)
		{
			return new MM_Response("Social Login: Unable to link user to social media account because of a database error",MM_Response::$ERROR);
		}	
		
		return new MM_Response();
	}
	
	
	/**
	 * Retrieves a user linked to a unique social network identifier for this provider
	 * 
	 * @param string $socialMediaUniqueId The unique identifier of the user on the social network
	 * @return MM_Response containing an MM_User object on success, or an error message on failure
	 */
	public function findLinkedUserByIdentifier($socialMediaUniqueId)
	{
		global $wpdb;

		if (empty($socialMediaUniqueId))
		{
			return new MM_Response("Error looking up linked account, supplied identifier was empty",MM_Response::$ERROR);	
		}
		$sql = "SELECT user_id FROM ".MM_TABLE_SOCIAL_LOGIN_LINKED_PROFILES." WHERE provider_id = %s AND unique_id = %s";
		$userId = $wpdb->get_var($wpdb->prepare($sql,$this->id,$socialMediaUniqueId));
		if (is_null($userId))
		{
			return new MM_Response("Error looking up linked account, no linked account was found",MM_Response::$ERROR);	
		}
		return new MM_Response(new MM_User($userId));	
	}
	
	
	/**
	 *
	 * @return int The Configured default signup membership level
	 */
	public function getSignupMembershipLevel() 
	{
		return $this->signupMembershipLevel;
	}
	
	
	/**
	 *
	 * @param int $signupMembershipLevel The default signup membership level       	
	 */
	public function setSignupMembershipLevel($signupMembershipLevel) 
	{
		$this->signupMembershipLevel = $signupMembershipLevel;
	}
	
	
	public static function getLinkedSocialMediaAccountsForUser($userId,$linkedAccount="")
	{
		global $wpdb;

		$sql = "SELECT slp.name, slp.token, sllp.* FROM ".MM_TABLE_SOCIAL_LOGIN_LINKED_PROFILES." sllp INNER JOIN ".MM_TABLE_SOCIAL_LOGIN_PROVIDERS." slp ON (sllp.provider_id = slp.id) WHERE sllp.user_id=%s ";
		if (!empty($linkedAccount))
		{
			$sql .= $wpdb->prepare("AND sllp.id = %s",$linkedAccount);
		}
		$linkedAccounts = $wpdb->get_results($wpdb->prepare($sql,$userId));
		return $linkedAccounts;
	}
	
	
	public static function removeLinkedSocialMediaAccounts($userId,$linkedAccount="")
	{
		global $wpdb;
		
		$sql = "DELETE FROM ".MM_TABLE_SOCIAL_LOGIN_LINKED_PROFILES." WHERE user_id = %s ";
		if (!empty($linkedAccount))
		{
			$sql .= $wpdb->prepare("AND id = %s",$linkedAccount);
		}
		$res = $wpdb->query($wpdb->prepare($sql,$userId));
		return ($res !== false);		
	}	
	
	
	/**
	 * Returns true if any social login extension is enabled
	 */
	public static function socialLoginEnabled()
	{
		$extensions = MM_ExtensionsFactory::getAvailableExtensions(false);
		foreach ($extensions as $anExtension)
		{
			if ($anExtension instanceof MM_AbstractSocialLoginExtension)
			{
				return true;
			}
		}
		return false;
	}
	
	
	public function getProviderName() 
	{
		return $this->providerName;
	}
	
	
	public function setProviderName($providerName) 
	{
		$this->providerName = $providerName;
	}
	
	
	public function getEndpointUrl() 
	{
		return $this->endpointUrl;
	}
	
	
	public function setEndpointUrl($endpointUrl) 
	{
		$this->endpointUrl = $endpointUrl;
	}


	public function getToken()
	{
		return $this->token;
	}		
}