/**
 *
 * The Email Service Provider Controller provides the main interface that the rest of the application will use to execute methods on the
 * active email service provider
 *
 */
class MM_EmailServiceProviderController 
{	
	private $subscribedListId;
	private $subscribedProviderId;
	private $bundleSubscribedListId;
	private $bundleSubscribedProviderId;
	
	public static function setup()
	{
		$espc = new MM_EmailServiceProviderController();
		add_action(MM_Event::$MEMBER_ADD, array($espc, 'memberAddedHandler'));
		add_action(MM_Event::$MEMBER_MEMBERSHIP_CHANGE, array($espc, 'membershipChangeHandler'));
		add_action(MM_Event::$MEMBER_ACCOUNT_UPDATE, array($espc, 'memberUpdateHandler'));
		add_action(MM_Event::$MEMBER_STATUS_CHANGE, array($espc, 'memberStatusChangeHandler'));
		add_action(MM_Event::$MEMBER_DELETE, array($espc, 'memberDeleteHandler'));
		add_action(MM_Event::$BUNDLE_ADD, array($espc, 'bundleAddedHandler'));
		add_action(MM_Event::$BUNDLE_STATUS_CHANGE, array($espc, 'bundleStatusChangeHandler'));
	}
	
	public function memberAddedHandler($data)
	{
		$provider = MM_EmailServiceProviderFactory::getProviderForMember($data["email"]);
		
		$provider_entity = new MM_EmailServiceProvider();
		$provider_entity->setToken($provider->getToken());
		$provider_entity->getData();
		$provider_entity_id = ($provider_entity->isValid())?$provider_entity->getId():"";
		
		//this is a new registration, so simply add to the right list
		$listId = $provider->getListIdForMembershipLevel($data["membership_level"]);
		
		if(MM_Response::isSuccess($listId))
		{
			$listId = $listId->message;
			$addResponse = $provider->addMemberToList($data["email"], $listId);
			
			if(MM_Response::isSuccess($addResponse))
			{
				// update subscriber ID on member
				global $wpdb;
				$updateValues = array("subscribed_list_id" => $listId, "subscribed_provider_id" => $provider_entity_id);
				$whereClause = array("wp_user_id" => $data["member_id"]);
				$wpdb->update(MM_TABLE_USER_DATA, $updateValues, $whereClause);
			}
		}
		
		//remove from prospect and cancellation lists
		if ($provider_entity->isValid())
		{
			$prospectListId = $provider_entity->getProspectListID();
			if (!empty($prospectListId))
			{
				$provider->removeMemberFromList($data["email"], $prospectListId);
			}
				
			$cancellationListID = $provider_entity->getCancellationListID();
			if (!empty($cancellationListID))
			{
				$provider->removeMemberFromList($data["email"], $cancellationListID);
			}
		}
	}
	
	public function membershipChangeHandler($data)
	{
		global $wpdb;
		
		$newProvider = MM_EmailServiceProviderFactory::getActiveProvider();
		$provider = MM_EmailServiceProviderFactory::getProviderForMember($data["email"]);
	
		$provider_entity = new MM_EmailServiceProvider();
		$provider_entity->setToken($provider->getToken());
		$provider_entity->getData();
		$provider_entity_id = ($provider_entity->isValid())?$provider_entity->getId():"";

		$this->setSubscribedListInfo($data["member_id"]);
		
		if ($provider->getToken() != $newProvider->getToken())
		{
			//different providers, do a remove from the old provider
			$provider->removeMemberFromList($data["email"], $this->subscribedListId);
		}
		
		$changeResponse = $newProvider->changeMembershipLevel($data["email"], $data["membership_level"]);
		
		if (MM_Response::isSuccess($changeResponse))
		{
			$newListId = $newProvider->getListIdForMembershipLevel($data["membership_level"]);
			
			if (MM_Response::isSuccess($newListId))
			{
				$new_provider_entity = new MM_EmailServiceProvider();
				$new_provider_entity->setToken($newProvider->getToken());
				$new_provider_entity->getData();
				
				if ($new_provider_entity->isValid())
				{
					$new_provider_entity_id = $new_provider_entity->getId();
					$newListId = $newListId->message;
					$updateValues = array("subscribed_list_id" => $newListId, "subscribed_provider_id" => $new_provider_entity_id);
					$whereClause = array("wp_user_id" => $data["member_id"]);
					$wpdb->update(MM_TABLE_USER_DATA, $updateValues, $whereClause);
				}
			}
		}
	}
	
	public function memberStatusChangeHandler($data)
	{
		global $wpdb;
		
		switch($data["status"])
		{
			case MM_Status::$ACTIVE:
				$this->memberAddedHandler($data);
				break;
				
			case MM_Status::$CANCELED:
			case MM_Status::$PAUSED:
			case MM_Status::$EXPIRED:
				$provider = MM_EmailServiceProviderFactory::getProviderForMember($data["email"]);
			
				$provider_entity = new MM_EmailServiceProvider();
				$provider_entity->setToken($provider->getToken());
				$provider_entity->getData();
				$provider_entity_id = ($provider_entity->isValid())?$provider_entity->getId():"";
		
				$this->setSubscribedListInfo($data["member_id"]);
				
				//remove from a list if subscribed to one
				if ($this->subscribedListId != "")
				{
					$provider->removeMemberFromList($data["email"], $this->subscribedListId);
				}
				
				//now add to cancellation list if one is set
				if ($provider_entity->isValid())
				{
					$cancellationListID = $provider_entity->getCancellationListID();
					if (!empty($cancellationListID))
					{
						$cancel_op = $provider->addMemberToList($data["email"],$cancellationListID);
						if (MM_Response::isSuccess($cancel_op))
						{
							$updateValues = array("subscribed_list_id" => $cancellationListID, "subscribed_provider_id" => $provider_entity_id);
							$whereClause = array("wp_user_id" => $data["member_id"]);
							$wpdb->update(MM_TABLE_USER_DATA, $updateValues, $whereClause);
						}
					}
				}
				
				break;
		}
	}
	
	public function memberUpdateHandler($data)
	{
		global $wpdb;
		
		$provider = MM_EmailServiceProviderFactory::getProviderForMember($data["email"]);

		$this->setSubscribedListInfo($data["member_id"]);
		
		if (!empty($data["last_email"]))
		{
			$provider->updateMember($data["last_email"], $this->subscribedListId, $data["email"]);
		}
		else if (!empty($data["last_first_name"]) || !empty($data["last_last_name"]))
		{
			$provider->updateMember($data["email"], $this->subscribedListId);
		}
	}
	
	public function memberDeleteHandler($data)
	{
		global $wpdb;
		
		$this->subscribedListId = $data["subscribed_list_id"];
		$this->subscribedProviderId = $data["subscribed_provider_id"];
		
		// remove from any subscribed list by membership level
		if (!empty($this->subscribedListId))
		{
			$provider_entity = new MM_EmailServiceProvider($this->subscribedProviderId);
			if ($provider_entity->isValid())
			{
				$email_provider = MM_EmailServiceProviderFactory::getProvider($provider_entity->getToken());
				
				if (($email_provider != null) && ($email_provider instanceof MM_AbstractEmailServiceProvider))
				{
					$email_provider->removeMemberFromList($data["email"], $this->subscribedListId);
				}
			}
		}
		
		// remove from any subscribed list by bundle
		if(isset($data["applied_bundles"]))
		{
			$appliedBundles = json_decode($data["applied_bundles"]);
			
			if(is_array($appliedBundles))
			{
				foreach($appliedBundles as $appliedBundle)
				{
					$bundleId = $appliedBundle->bundle_id;
					$subscribedListId = $appliedBundle->subscribed_list_id;
					$subscribedProviderId = $appliedBundle->subscribed_provider_id;
					
					$provider_entity = new MM_EmailServiceProvider($subscribedProviderId);
					if ($provider_entity->isValid())
					{
						$email_provider = MM_EmailServiceProviderFactory::getProvider($provider_entity->getToken());
					
						if (($email_provider != null) && ($email_provider instanceof MM_AbstractEmailServiceProvider))
						{
							$email_provider->removeMemberFromList($data["email"], $subscribedListId);
						}
					}
				}
			}
		}
	}
	
	public function bundleAddedHandler($data)
	{
		global $wpdb;
		
		// perform membership level actions
		$this->setSubscribedListInfo($data["member_id"]);
		
		// update info with email provider
 		if(!empty($this->subscribedListId))
 		{
 			$provider = MM_EmailServiceProviderFactory::getProviderForMember($data["email"]);
 			$provider->updateMember($data["email"], $this->subscribedListId);
 		}
 		
 		// perform bundle actions
 		$provider = MM_EmailServiceProviderFactory::getProviderForBundle($data["email"], $data["bundle_id"]);
 		
 		$provider_entity = new MM_EmailServiceProvider();
 		$provider_entity->setToken($provider->getToken());
 		$provider_entity->getData();
 		$provider_entity_id = ($provider_entity->isValid())?$provider_entity->getId():"";
 		
 		// add the email to the right list
 		$listId = $provider->getListIdForBundle($data["bundle_id"], MM_AbstractEmailServiceProvider::$LIST_TYPE_ACTIVE);
 		
 		if(MM_Response::isSuccess($listId))
 		{
 			$listId = $listId->message;
 			$addResponse = $provider->addMemberToList($data["email"], $listId, false);
 				
 			if(MM_Response::isSuccess($addResponse))
 			{
 		
 				// update subscriber ID on applied bundle
 				global $wpdb;
 				$updateValues = array("subscribed_list_id" => $listId, "subscribed_provider_id" => $provider_entity_id);
 				$whereClause = array("access_type" => MM_AppliedBundle::$ACCESS_TYPE_USER, "access_type_id" => $data["member_id"], "bundle_id" => $data["bundle_id"]);
 				$wpdb->update(MM_TABLE_APPLIED_BUNDLES, $updateValues, $whereClause);
 			}
 		}
 		
 		//remove from cancellation list
 		if ($provider_entity->isValid())
 		{		
 			$cancellationListID = $provider->getListIdForBundle($data["bundle_id"], MM_AbstractEmailServiceProvider::$LIST_TYPE_CANCELED);
 					
 			if(MM_Response::isSuccess($cancellationListID) && !empty($cancellationListID->message))
 			{
	 			$provider->removeMemberFromList($data["email"], $cancellationListID->message);
 			}
 		}
	}
	
	public function bundleStatusChangeHandler($data)
	{
		global $wpdb;
		
		switch($data["bundle_status"])
		{
			case MM_Status::$ACTIVE:
				$this->bundleAddedHandler($data);
				break;
				
			case MM_Status::$CANCELED:
			case MM_Status::$PAUSED:
			case MM_Status::$EXPIRED:
				// perform membership level actions
				$this->setSubscribedListInfo($data["member_id"]);
				
				// update info with email provider
		 		if(!empty($this->subscribedListId))
		 		{
		 			$provider = MM_EmailServiceProviderFactory::getProviderForMember($data["email"]);
		 			$provider->updateMember($data["email"], $this->subscribedListId);
		 		}
		 		
		 		// perform bundle actions
		 		$provider = MM_EmailServiceProviderFactory::getProviderForBundle($data["email"], $data["bundle_id"]);
		 			
		 		$provider_entity = new MM_EmailServiceProvider();
		 		$provider_entity->setToken($provider->getToken());
		 		$provider_entity->getData();
		 		$provider_entity_id = ($provider_entity->isValid())?$provider_entity->getId():"";
		 		
		 		$this->setBundleSubscribedListInfo($data["member_id"], $data["bundle_id"]);
		 		
		 		//remove from a list if subscribed to one
		 		if ($this->bundleSubscribedListId != "")
		 		{
		 			$provider->removeMemberFromList($data["email"], $this->bundleSubscribedListId);
		 		}
		 		
		 		//now add to cancellation list if one is set
		 		if ($provider_entity->isValid())
		 		{
		 			$cancellationListID = $provider->getListIdForBundle($data["bundle_id"], MM_AbstractEmailServiceProvider::$LIST_TYPE_CANCELED);
 			
 					if(MM_Response::isSuccess($cancellationListID) && !empty($cancellationListID->message))
 					{
 						$cancellationListID = $cancellationListID->message;
		 				$cancel_op = $provider->addMemberToList($data["email"],$cancellationListID,false);
		 				if (MM_Response::isSuccess($cancel_op))
		 				{	
		 					// update subscriber ID on applied bundle
		 					$updateValues = array("subscribed_list_id" => $cancellationListID, "subscribed_provider_id" => $provider_entity_id);
		 					$whereClause = array("access_type" => MM_AppliedBundle::$ACCESS_TYPE_USER, "access_type_id" => $data["member_id"], "bundle_id" => $data["bundle_id"]);
		 					$wpdb->update(MM_TABLE_APPLIED_BUNDLES, $updateValues, $whereClause);
		 				}
		 			}
		 		}
				break;
		}
	}
	
	private function setSubscribedListInfo($userId)
	{
		global $wpdb;
		
		$this->subscribedListId = "";
		$this->subscribedProviderId = "";
		
		$sql = "SELECT subscribed_list_id, subscribed_provider_id FROM ".MM_TABLE_USER_DATA." WHERE wp_user_id='{$userId}' LIMIT 1;";
		$mmUserData = $wpdb->get_row($sql);
		
		if($mmUserData)
		{
			$this->subscribedListId = (isset($mmUserData->subscribed_list_id)) ? $mmUserData->subscribed_list_id : "";
			$this->subscribedProviderId = (isset($mmUserData->subscribed_provider_id)) ? $mmUserData->subscribed_provider_id : "";
		}
	}
	
	private function setBundleSubscribedListInfo($userId, $bundleId)
	{
		global $wpdb;
		
		$this->bundleSubscribedListId = "";
		$this->bundleSubscribedProviderId = "";
		
		$sql = "SELECT subscribed_list_id, subscribed_provider_id FROM ".MM_TABLE_APPLIED_BUNDLES." WHERE access_type='".MM_AppliedBundle::$ACCESS_TYPE_USER."' ";
		$sql .= " AND access_type_id = '{$userId}' AND bundle_id = '{$bundleId}' LIMIT 1;";
		$appliedBundle = $wpdb->get_row($sql);
		
		if($appliedBundle)
		{
			$this->bundleSubscribedListId = (isset($appliedBundle->subscribed_list_id)) ? $appliedBundle->subscribed_list_id : "";
			$this->bundleSubscribedProviderId = (isset($appliedBundle->subscribed_provider_id)) ? $appliedBundle->subscribed_provider_id : "";
		}
	}
}

