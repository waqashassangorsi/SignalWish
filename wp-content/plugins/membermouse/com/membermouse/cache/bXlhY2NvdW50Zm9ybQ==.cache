class MM_MyAccountForm extends MM_AbstractForm
{
	public $user;
	
	/**
	 * Default constructor. Takes an associative array of configuration parameters
	 * @param Array $params an associative array of form configuration parameters
	 */
	public function __construct($params=null)
	{	
		if(!is_null($params))
		{
			if(is_array($params) && count($params) > 0)
			{
				foreach($params as $k=>$v)
				{
					$key = strtolower($k);
					$$key = $v;
				}
			}
			
			$this->initialize();
		}
	}
	
	public function initialize()
	{
		global $current_user;
		$this->user = MM_User::getCurrentWPUser();
		
		if($this->user->isValid())
		{
			$this->isValid = true;
			
			if ($this->user->isAdmin() && (!isset($_REQUEST['mm_preview_admin']) || ($_REQUEST['mm_preview_admin'] == 0)))
			{
				$this->isValid = false;
				$this->error = "You cannot view this page as an administrator";
			}
		}
		else
		{
			$this->isValid = false;
			$this->error = "Invalid user";
		}
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at 
	 * the top of the form based on the the current configuration.
	 * @return String header HTML for the checkout form
	 */
	public function generateFormHeader()
	{		
		return $this->getJavascriptIncludes();
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at
	 * the bottom of the form based on the the current configuration.
	 * 
	 * @return String footer HTML for the checkout form
	 */
	public function generateFormFooter()
	{
		return $this->getInitJavascript();
	}
	
	/**
	 * This function returns the include statements for required javascript files.
	 * @return String that contains the javascript for including required javascript files.
	 */
	public function getJavascriptIncludes()
	{
		$version = MemberMouse::getPluginVersion();
		$useMMCSS = (MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_MM_CSS_MY_ACCOUNT) == "1") ? true : false;
		
		if($useMMCSS)
		{
			wp_enqueue_style("membermouse-myacount-css", plugins_url(MM_PLUGIN_NAME."/resources/css/user/mm-myaccount.css"), array(), $version);
		}
		
		wp_enqueue_script("membermouse-myaccount-js", plugins_url(MM_PLUGIN_NAME."/resources/js/user/mm-myaccount.js"), array(), $version, true);
	}
	
	/**
	 * This function returns the javascript to initialize the My Account form. 
	 * @param array $defaultData this contains the default data used to prepopulate certain form elements
	 * @return String that contains the javascript to initializes the checkout form.
	 */
	public function getInitJavascript()
	{
		return "";
	}
	
	/**
	 * This function processes the MM_Form_Section tag. It is responsible for checking if the current user 
	 * should see the contents of this section based on the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_section($content, $atts, $code)
	{
		$outputStr = "";
		
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
		
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "gifts":
					$hasGifts = $form->user->hasGifts();
					$outputStr .= "<div ".(($hasGifts == false) ? "style=\"display:none;\"" : "").">\n";
					break;
				
				case "sociallogin":
					$outputStr .= "<div ".((!MM_AbstractSocialLoginExtension::socialLoginEnabled()) ? "style=\"display:none;\"" : "").">\n";
					break;
				default:
					return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}.";
					break;
			}
				
			$outputStr .= do_shortcode($content)."</div>\n";
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for SmartTag {$code}.";
		}
	}
	
	/**
	 * This function processes the MM_Form_Field tag. It is responsible for rendering the 
	 * form field based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_field($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for My Account forms.";
	}
	
	/**
	 * This function processes the MM_Form_Data tag. It is responsible for rendering the 
	 * data element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_data($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($name))
		{
			switch(strtolower($name))
			{
				case "firstname":
					$outputStr .= $form->user->getFirstName();
					break;
					
				case "lastname":
					$outputStr .= $form->user->getLastName();
					break;
					
				case "phone":
					$outputStr .= $form->user->getPhone();
					break;
					
				case "email":
					$outputStr .= $form->user->getEmail();
					break;
					
				case "username":
					$outputStr .= $form->user->getUsername();
					break;
					
				case "password":
					
					if(!is_null($form->user->getPassword()))
					{
						for($i = 0; $i < strlen($form->user->getPassword()); $i++)
						{
							$outputStr .= "*";
						}
					}
					else
					{
						$outputStr .= "********";
					}					
					break;
					
				case "registrationdate":
					$outputStr .= $form->user->getRegistrationDate(true);
					break;
					
				case "membershiplevelname":
					$outputStr .= $form->user->getMembershipName();
					break;
					
				case "billingaddress":
					$outputStr .= $form->user->getBillingAddress();
					break;
					
				case "billingcity":
					$outputStr .= $form->user->getBillingCity();
					break;
					
				case "billingstate":
					global $wpdb;
					$results = $wpdb->get_col("SELECT `name` from " . MM_TABLE_COUNTRY_SUBDIVISIONS . " where `iso` = '" . $form->user->getBillingCountry() . "' AND `code` = '" . $form->user->getBillingState() . "'");
					$outputStr .= isset($results[0]) ? $results[0] : $form->user->getBillingState();
					break;
					
				case "billingzipcode":
					$outputStr .= $form->user->getBillingZipCode();
					break;
					
				case "billingcountry":
					$outputStr .= $form->user->getBillingCountryName();
					break;
					
				case "shippingaddress":
					$outputStr .= $form->user->getShippingAddress();
					break;
					
				case "shippingcity":
					$outputStr .= $form->user->getShippingCity();
					break;
					
				case "shippingstate":
					global $wpdb;
					$results = $wpdb->get_col("SELECT `name` from " . MM_TABLE_COUNTRY_SUBDIVISIONS . " where `iso` = '" . $form->user->getShippingCountry() . "' AND `code` = '" . $form->user->getShippingState() . "'");
					$outputStr .= isset($results[0]) ? $results[0] : $form->user->getShippingState();
					break;
					
				case "shippingzipcode":
					$outputStr .= $form->user->getShippingZipCode();
					break;
					
				case "shippingcountry":
					$outputStr .= $form->user->getShippingCountryName();
					break;
					
				case "customfields":
					$fields = MM_CustomField::getCustomFieldsList(true);
					
					foreach($fields as $id=>$displayName)
					{
						$customField = new MM_CustomField($id);
							
						if($customField->isValid())
						{
							$id = $customField->getId();
							$value = $form->user->getCustomDataByFieldId($id)->getValue();
							
							$outputStr .= "<p id=\"mm-element-custom-field-{$id}\" class=\"mm-myaccount-element\">
";
							$outputStr .= "<span id=\"mm-label-custom-field-{$id}\" class=\"mm-myaccount-label\">";
							$outputStr .= $customField->getDisplayName().": ";
							$outputStr .= "</span>
";
							if($value != "")
							{
								// handle rendering of checkbox values
								if($value == MM_CustomField::$CHECKBOX_ON)
								{
									$value = MM_Utils::getCheckIcon();
								}
								else if($value == MM_CustomField::$CHECKBOX_OFF)
								{
									$value = MM_Utils::getCrossIcon();
								}
								else 
								{
									$value = stripslashes($value);
								
									// abbreviate strings over 300 characters
									if(strlen($value) >= 300)
									{
										$value = MM_Utils::abbrevString($value, 300);
									}
								}
							}
							
							$outputStr .= "<span id=\"mm-data-custom-field-{$id}\" class=\"mm-myaccount-data\">";
							$outputStr .= ($value != "") ? $value : MM_NO_DATA;
							$outputStr .= "</span>
";
							$outputStr .= "</p>
";
						}
					}
					
					break;
				
				case "subscriptions":
					$view = new MM_SubscriptionsView();
					$dataGrid = new MM_DataGrid(null, "date_added", "desc", 5);
					$data = $view->getViewData($form->user->getId(), $dataGrid);
					$rows = $view->generateRows($data, false);
					$dataGrid->setRows($rows);
					$dataGrid->setHeaders(array("force-set-headers"));
						
					if(count($rows) > 0)
					{
						$outputStr .= $dataGrid->generateHtml("myaccount_subscriptions.datagrid.php");
					}
					else
					{
						$outputStr .= "<em>No subscriptions</em>";
					}
					
					break;
				
				case "orderhistory":
					$view = new MM_TransactionHistoryView();
					$dataGrid = new MM_DataGrid(null, "date", "desc", 5);
					$data = $view->getViewData($form->user->getId(), $dataGrid);
					$rows = $view->generateRows($data, false);
					$dataGrid->setRows($rows);
					$dataGrid->setHeaders(array("force-set-headers"));
					
					if(count($rows) > 0)
					{
						$outputStr .= $dataGrid->generateHtml("myaccount_orderhistory.datagrid.php");
					}
					else
					{
						$outputStr .= "<em>No orders placed</em>";
					}
					
					break;
					
				case "gifts":
					$view = new MM_GiftHistoryView();
					$dataGrid = new MM_DataGrid(null, "date_gifted", "desc", 5);
					$data = $view->getViewData($form->user->getId(), $dataGrid);
					$rows = $view->generateRows($data, false);
					$dataGrid->setRows($rows);
					$dataGrid->setHeaders(array("force-set-headers"));
						
					if(count($rows) > 0)
					{
						$outputStr .= $dataGrid->generateHtml("myaccount_gifthistory.datagrid.php");
					}
					else
					{
						$outputStr .= "<em>No gifts purchased</em>";
					}
						
					break;
					
				case "sociallogin":
					$view = new MM_SocialLoginView();
					$dataGrid = new MM_DataGrid(null, "name", "desc", 5);
					$data = $view->getViewData($form->user->getId(), $dataGrid);
					$rows = $view->generateRows($data, false);
					$dataGrid->setRows($rows);
					$dataGrid->setHeaders(array("force-set-headers"));
					
					if(count($rows) > 0)
					{
						$outputStr .= $dataGrid->generateHtml("myaccount_sociallogin.datagrid.php");
					}
					else
					{
						$outputStr .= "<em>No Social Networks Linked</em>";
					}
					break;
										
				default:
					return "Invalid name of '{$name}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code}.";
		}
	}
	
	/**
	 * This function processes the MM_Form_Message tag. It is responsible for rendering the 
	 * message element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_message($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "error":
					if($form->error != "")
					{
						$outputStr .= "<p class=\"mm-error\">".$form->error."</p>";
					}
					break;
				
				default:
					return "Invalid type of '{$type}' passed to {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
	
	/**
	 * This function processes the MM_Form_Button tag. It is responsible for 
	 * returning the appropriate javascript to submit the form based on the type passed.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_button($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "updateaccountdetails":
					$outputStr .= "javascript:myaccount_js.updateAccountDetails({$form->user->getId()});";
					break;
					
				case "updatebillinginfo":
					$outputStr .= "javascript:myaccount_js.updateBillingInfo({$form->user->getId()});";
					break;
					
				case "updateshippinginfo":
					$outputStr .= "javascript:myaccount_js.updateShippingInfo({$form->user->getId()});";
					break;
					
				case "vieworderhistory":
					$outputStr .= "javascript:myaccount_js.viewOrderHistory({$form->user->getId()});";
					break;
					
				case "viewgifthistory":
					$outputStr .= "javascript:myaccount_js.viewGiftHistory({$form->user->getId()});";
					break;
					
				case "cancelmembership":
					$outputStr .= MM_CorePageEngine::getUrl(MM_CorePageType::$SAVETHESALE);
					break;
					
				default:
					return "Invalid type of '{$type}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
}

