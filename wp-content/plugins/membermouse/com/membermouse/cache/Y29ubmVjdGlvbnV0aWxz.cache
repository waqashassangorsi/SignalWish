/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_ConnectionUtils
{ 	
	
	/**
	 * Closes a connection immediately without terminating a script's operation. This is useful if you need to
	 * respond immediately to a request.
	 * 
	 * @param String $content Content that should (in theory) be outputted before the connection is closed 
	 * 
	 */
 	public static function closeConnectionAndContinueProcessing($content="")
	{
		@ob_end_clean();
		header("Connection: close");
		ignore_user_abort(); // optional
		
		if (!empty($content))
		{
			ob_start();
			echo $content;
			$size = ob_get_length();
			header("Content-Length: {$size}");
		}
		else 
		{
			header("Content-Length: 0");
		}
		@ob_end_flush(); // Strange behaviour, will not work
		@flush();        // Unless both are called!
	}
}
