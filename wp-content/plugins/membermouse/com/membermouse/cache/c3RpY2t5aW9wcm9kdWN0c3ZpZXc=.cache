/**
 * 
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_StickyioProductsView extends MM_RBACProductManagerView
{	
	public static $MM_JSACTION_GET_MEMBERMOUSE_PRODUCT_DESC = "getMMProductDescription";
	public static $MM_JSACTION_GET_STICKYIO_PRODUCTS = "getStickyioProducts";
	public static $MM_JSACTION_GET_STICKYIO_PRODUCT_DESC = "getLLProductDescription";
	public static $MM_JSACTION_GET_STICKYIO_OFFERS = "getStickyioOffers";
	public static $MM_JSACTION_GET_STICKYIO_BILLING_MODELS = "getStickyioBillingModels";
	

	public function __construct()
	{
		parent::__construct();
	}
	 
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post); 
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE:
					return $this->saveStickyioProduct($post);
					
				case self::$MM_JSACTION_REMOVE:
					return $this->removeStickyioProduct($post);
					
				case self::$MM_JSACTION_GET_MEMBERMOUSE_PRODUCT_DESC:
				    return $this->getMMProductDescription($post);
				    
				case self::$MM_JSACTION_GET_STICKYIO_PRODUCTS:
				    return $this->getStickyioProducts($post);
				    
				case self::$MM_JSACTION_GET_STICKYIO_OFFERS:
				    return $this->getStickyioOffers($post);
				    
				case self::$MM_JSACTION_GET_STICKYIO_BILLING_MODELS:
				    return $this->getStickyioBillingModels($post);
				    
				case self::$MM_JSACTION_GET_STICKYIO_PRODUCT_DESC:
					return $this->getStickyioProductDescription($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function getViewData($post)
	{ 
		return parent::getData(MM_TABLE_STICKYIO_PRODUCTS, null, $post);
	}
	
	private function getStickyioProductRef($post)
	{
		$stickyioProduct = new MM_StickyioProduct();
		
		if(isset($post["id"]) && intval($post["id"]) > 0) 
		{
			$stickyioProduct = new MM_StickyioProduct($post["id"]);
			
			if(!$stickyioProduct->isValid())
			{
				return new MM_Response("Cannot update Sticky.io product mapping. Invalid ID '{$post['id']}' passed.", MM_Response::$ERROR);
			}
		}
		return $stickyioProduct;
	} 
	
	private function saveStickyioProduct($post)
	{
	    $isLLV2=false;
	    if(isset($post["stickyio_billing_model_id"]))
	    {
	        $isLLV2=true;
	    }
	    
	    $force = false;
	    if(isset($post["force"]))
	    {
	        $force=true;
	    } 
		$stickyioService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$STICKYIO_SERVICE_TOKEN);
		 
		
		$result = $stickyioService->getProduct($post["stickyio_product_id"]);
		
		if(MM_Response::isError($result))
		{
			return new MM_Response("Cannot save Sticky.io product mapping. Invalid Sticky.io product ID '{$post['stickyio_product_id']}' passed.", MM_Response::$ERROR);
		}
		
		$message = $result->message;
		
		$llProductInfo = $message; 
		$llProductInfo = $llProductInfo["products"];
		foreach($llProductInfo as $id=>$val)
		{
		    $obj = get_object_vars($val); 
		    $llProductInfo = $obj;
		    break;
		} 
		
		// get MemberMouse product
		$mmProduct = new MM_Product($post["mm_product_id"]);
		
		if(!$mmProduct->isValid())
		{
			return new MM_Response("Cannot save Sticky.io product mapping. Invalid MemberMouse product ID '{$post['mm_product_id']}' passed.", MM_Response::$ERROR);
		}
		
		// validate mapping
	 	$priceMismatch = "";
	 	$subscriptionMismatch = "";
		$shippingMismatch = "";
		
		$mmAmount = ($mmProduct->hasTrial()) ? $mmProduct->getTrialAmount(false) : $mmProduct->getPrice(false);
		if($isLLV2)
		{ 
		    $isTrial = false;
    		if($mmProduct->hasTrial())
    		{
    		    $result = $stickyioService->getoffer($post["stickyio_offer_id"]);
    		    
    		    if(!MM_Response::isError($result))
    		    {
    		        if(isset($result->message["data"]) && isset($result->message["data"][0]))
    		        {
    		            $isTrial = (intval($result->message["data"][0]->trial_flag) === 1);
    		            // $trialObj = $result->message["data"][0]->trial;
    		        }
    		    }
    		}
     
    		if(!$force && $isTrial !== $mmProduct->hasTrial())
    		{
    		    $priceMismatch = "Warning: Sticky.io Product has a trial while your MemberMouse product does not.";
    		}  
    		else
    		{ 
    		    if(!$force && $isTrial)
    		    {
    		        if(floatval($llProductInfo["product_price"]) != $mmProduct->getPrice(false))
    		        {
    		            $priceMismatch = "Warning: PRICE MISMATCH\n";
    		            $priceMismatch .= "Sticky.io Price: "._mmf($llProductInfo["product_price"], "USD")."\n";
    		            $priceMismatch .= "MemberMouse Price: ".$mmProduct->getPrice(false)."\n\n";
    		        }
    		    }
    		    else if(!$force && floatval($llProductInfo["product_price"]) != $mmAmount)
    		    {
    		        $priceMismatch = "Warning: PRICE MISMATCH\n";
    		        $priceMismatch .= "Sticky.io Price: "._mmf($llProductInfo["product_price"], "USD")."\n";
    		        $priceMismatch .= "MemberMouse Price: ".$mmAmount."\n\n";
    		    } 
    		}
    		
		} 
		else if(!$force && floatval($llProductInfo["product_price"]) != $mmAmount)
		{ 
	    	$priceMismatch = "Warning: PRICE MISMATCH\n";
			$priceMismatch .= "Sticky.io Price: "._mmf($llProductInfo["product_price"], "USD")."\n";
			$priceMismatch .= "MemberMouse Price: ".$mmAmount."\n\n"; 
		} 
		
		$llRequiresShipping = ($llProductInfo["product_is_shippable"] == "0") ? false : true;
		if(!$force && $llRequiresShipping != $mmProduct->isShippable())
		{
			$shippingMismatch = "Warning: SHIPPING REQUIREMENT MISMATCH\n";
			$shippingMismatch .= "Sticky.io Product is Shippable: ";
			$shippingMismatch .= ($llRequiresShipping) ? "Yes" : "No";
			$shippingMismatch .= "\n";
			$shippingMismatch .= "MemberMouse Product is Shippable: ";
			$shippingMismatch .= ($mmProduct->isShippable()) ? "Yes" : "No";
			$shippingMismatch .= "\n\n";
		}
		
		if(!$force && (!empty($priceMismatch) || !empty($subscriptionMismatch) || !empty($shippingMismatch)))
		{
			$errorMsg = "Warning: Invalid product mapping:\nSticky.io product settings must match the MemberMouse product settings.\n\n";
			
			$errorMsg .= $priceMismatch;
			$errorMsg .= $subscriptionMismatch;
			$errorMsg .= $shippingMismatch;
			
			return new MM_Response($errorMsg, MM_Response::$ERROR);
		} 

		$mapAll = ($post["stickyio_campaign_map_all"] == "1");
	 	if(!$mapAll && is_array($post["stickyio_campaign_id"]))
	 	{
	 		$llCampaignNames = explode("|",$post["stickyio_campaign_name"]);
	 		if(count($llCampaignNames)==count($post["stickyio_campaign_id"]))
	 		{ 
		 		for($i=0; $i<count($post["stickyio_campaign_id"]); $i++)
		 		{ 
		 			$stickyioProduct = $this->getStickyioProductRef($post);
		 			if($stickyioProduct instanceof MM_Response)
		 			{ 
		 				return $stickyioProduct;
		 			}

		 			if(MM_StickyioProduct::hasExistingProductMappings($post["stickyio_product_id"],$post["mm_product_id"], $post["stickyio_campaign_id"][$i]))
		 			{ 
		 				return new MM_Response("There already exists mappings to this Sticky.io product.", MM_Response::$ERROR);
		 			}
		 			
		 			$stickyioProduct->setMMProductId($post["mm_product_id"]);
		 			
		 			if($isLLV2)
		 			{
    		 			$stickyioProduct->setStickyioOfferId($post["stickyio_offer_id"]);
    		 			$stickyioProduct->setStickyioOfferName($post["stickyio_offer_name"]);
    		 			$stickyioProduct->setStickyioBillingModelId($post["stickyio_billing_model_id"]);
    		 			$stickyioProduct->setStickyioBillingModelName($post["stickyio_billing_model_name"]);
		 			}
		 			
		 			$stickyioProduct->setStickyioProductId($post["stickyio_product_id"]);
		 			$stickyioProduct->setStickyioProductName($post["stickyio_product_name"]);
				 	$stickyioProduct->setStickyioCampaignId($post["stickyio_campaign_id"][$i]);
				 	$stickyioProduct->setStickyioCampaignName($llCampaignNames[$i]);
					$response = $stickyioProduct->commitData();
					if($response->type == MM_Response::$ERROR)
					{ 
						return $response;
					}
		 		}
	 		}
	 		else 
	 		{
	 			return new MM_Response("Invalid number of campaign selections.", MM_Response::$ERROR);
	 		}
	 		return new MM_Response();
	 	}
	 	else
	 	{ 
		 	$stickyioProduct = $this->getStickyioProductRef($post);
 			if($stickyioProduct instanceof MM_Response)
 			{
 				return $stickyioProduct;
 			}

 			if(intval($post["id"])>0)
 			{
 				if(MM_StickyioProduct::hasExistingProductMappings($post["stickyio_product_id"],$post["mm_product_id"], null, intval($post["id"])))
 				{
 					return new MM_Response("There already exists mappings to this Sticky.io product.", MM_Response::$ERROR);
 				}
 			}
 			else
 			{
 				if(MM_StickyioProduct::hasExistingProductMappings($post["stickyio_product_id"],$post["mm_product_id"]))
 				{
 					return new MM_Response("There already exists mappings to this Sticky.io product.", MM_Response::$ERROR);
 				}
 			}
 			
 			
 			if($isLLV2)
 			{
     			$stickyioProduct->setStickyioOfferId($post["stickyio_offer_id"]);
     			$stickyioProduct->setStickyioOfferName($post["stickyio_offer_name"]);
     			$stickyioProduct->setStickyioBillingModelId($post["stickyio_billing_model_id"]);
     			$stickyioProduct->setStickyioBillingModelName($post["stickyio_billing_model_name"]);
 			}
 			
 			$stickyioProduct->setMMProductId($post["mm_product_id"]);
 			$stickyioProduct->setStickyioProductId($post["stickyio_product_id"]);
 			$stickyioProduct->setStickyioProductName($post["stickyio_product_name"]);
 			if($mapAll)
 			{
 				if(intval($post["id"])>0)
 					MM_StickyioProduct::removeExistingProductMappings($post["stickyio_product_id"], $post["id"]);
 				
			 	$stickyioProduct->setStickyioCampaignId(0);
			 	$stickyioProduct->setStickyioCampaignName("ALL");
 			}
 			else 
 			{
			 	$stickyioProduct->setStickyioCampaignId($post["stickyio_campaign_id"]);
			 	$stickyioProduct->setStickyioCampaignName($post["stickyio_campaign_name"]);
 			}
			return $stickyioProduct->commitData();
	 	} 
	}
	
	private function removeStickyioProduct($post)
	{
		global $wpdb;
		
		if(isset($post["id"]) && intval($post["id"]) > 0)
		{
			$stickyioProduct = new MM_StickyioProduct($post["id"], false);
			$result = $stickyioProduct->delete();
			
			if($result) 
			{
				return new MM_Response();
			} 
			else 
			{
				return new MM_Response("Error removing Sticky.io product mapping", MM_Response::$ERROR);
			}
		}
		
		return new MM_Response("Unable to delete Sticky.io product mapping. No ID specified.", MM_Response::$ERROR);
	}
	
	private function getStickyioBillingModels($post)
	{
	    if(isset($post["offer_id"]))
	    {
	        $stickyioService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$STICKYIO_SERVICE_TOKEN);
	        return MM_HtmlUtils::generateSelectionsList($stickyioService->getBillingModels($post["offer_id"]));
	    }
	    else
	    {
	        return new MM_Response("Error retrieving products. No Campaign ID specified.", MM_Response::$ERROR);
	    }
	}
	
	private function getStickyioOffers($post)
	{ 
	    if(isset($post["campaign_id"]))
	    {
	        $stickyioService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$STICKYIO_SERVICE_TOKEN);
	        return MM_HtmlUtils::generateSelectionsList($stickyioService->getOffers($post["campaign_id"]));
	    }
	    else
	    {
	        return new MM_Response("Error retrieving products. No Campaign ID specified.", MM_Response::$ERROR);
	    }
	}
	
	private function getStickyioProducts($post)
	{
	    if(isset($post["campaign_id"]) && isset($post["offer_id"]))
		{
			$stickyioService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$STICKYIO_SERVICE_TOKEN);
			return MM_HtmlUtils::generateSelectionsList($stickyioService->getProductsByOffer($post["campaign_id"], $post["offer_id"]));
		}
		else
		{
			return new MM_Response("Error retrieving products. No Campaign ID specified.", MM_Response::$ERROR);
		}
	}
	
	private function getStickyioProductDescription($post)
	{
		if(isset($post["product_id"]))
		{
			$stickyioService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$STICKYIO_SERVICE_TOKEN);
			return $stickyioService->getProductDescription($post["product_id"], $post["offer_id"]); 
		}
		else
		{
			return new MM_Response("Error retrieving product information. No product ID specified.", MM_Response::$ERROR);
		}
	}
	
	private function getMMProductDescription($post)
	{
		if(isset($post["mm_product_id"]))
		{
			$product = new MM_Product($post["mm_product_id"]);
			
			if($product->isValid())
			{
				$mmProductDescription = $product->getBillingDescription()." ";
				 
				if($product->hasTrial())
				{
					$mmProductDescription .= MM_Utils::getIcon('clock-o', 'beige', '1.3em', '2px', 'Has Trial', 'margin-right:5px;');
				}
				 
				if($product->isRecurring())
				{
					if($product->doLimitPayments())
					{
						$mmProductDescription .= MM_Utils::getIcon('calendar-o', 'beige', '1.3em', '2px', 'Payment Plan', 'margin-right:5px;');
					}
					else
					{
						$mmProductDescription .= MM_Utils::getIcon('refresh', 'beige', '1.3em', '2px', 'Subscription', 'margin-right:5px;');
					}
				}
				 
				if($product->isShippable())
				{
					$mmProductDescription .= MM_Utils::getIcon('truck', 'beige', '1.3em', '2px', 'Requires Shipping', 'margin-right:5px;');
				}
				 
				if($product->getSku() != "")
				{
					$mmProductDescription .= MM_Utils::getIcon('barcode', 'beige', '1.3em', '2px', "SKU [".$product->getSku()."]", 'margin-right:5px;');
				}
				
				return new MM_Response($mmProductDescription);
			}
			else 
			{
				return new MM_Response("Error retrieving MemberMouse product description. Invalid product ID '{$post["mm_product_id"]}'.", MM_Response::$ERROR);
			}
		}
		else
		{
			return new MM_Response("Error retrieving MemberMouse product description. No product ID specified.", MM_Response::$ERROR);
		}
	}
}
