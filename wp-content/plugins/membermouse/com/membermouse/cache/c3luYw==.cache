abstract class MM_Sync{
	public $tableNamePrefix = "Tables_in_";
	protected $db = null;
	protected $dbName = "";
	protected $DEBUG = false;
	
	public function __construct($dbRef, $dbName){
		$this->db = $dbRef;
		$this->dbName = $dbName;
	}
	
	protected function isValidColumnObject($column){
		if(!isset($column->Field)){
			$this->showDebug("Columns array must contain an index of Field");
			return false;
		}
		if(!isset($column->Type)){
			$this->showDebug("Columns array must contain an index of Type");
			return false;
		}
		if(!isset($column->Null)){
			$this->showDebug("Columns array must contain an index of Null");
			return false;
		}
		if(!isset($column->Key)){
			$this->showDebug("Columns array must contain an index of Key");
			return false;
		}
		if(!isset($column->Default) && !is_null($column->Default)){
			$this->showDebug("Columns array must contain an index of Default");
			return false;
		}
		if(!isset($column->Extra)){
			$this->showDebug("Columns array must contain an index of Extra");
			return false;
		}
		return true;
	}
	
	protected function alterTableSql($tableName, $column, $afterSql=""){
		if(!is_object($column)){
			$this->showDebug("Columns must be an object of column");
			return false;
		}
		
		if(!$this->isValidColumnObject($column)){
			return false;
		}
		
		$field = $column->Field;
		$type = $column->Type;
		$isNull = ($column->Null == "NO")?"NOT NULL":"NULL";
		$key = $column->Key;
		$defaultStr = (is_null($column->Default) || preg_match("/(TIMESTAMP)/", $column->Default))?$column->Default:"'{$column->Default}'";
		$defaultValue = (!empty($column->Default))?" DEFAULT ".$defaultStr."":"";
		$extra = ($column->Extra=="auto_increment")?$column->Extra:"";
	
		$primaryKey = "";
		$indexes = "";
		
		if($key == "PRI"){
			$primaryKey = ", add primary key(".$field.")";
		}
		else if($key == "MUL"){
			$indexes = ", add index(".$field.")";
		}
		
		$sql = "alter table `{$tableName}` add `".$field."` ".$type." ".$isNull." ".$defaultValue." ".$extra." ".$afterSql.$indexes.$primaryKey;
		
		return $sql;
	}
	
	protected function createTableSql($tableName, $columns){
		if(!is_array($columns)){
			$this->showDebug("Columns must be an array of columns");
			return false;
		}
		
		$primaryKey = "";
		$indexes = "";
		$sql = "create table if not exists `{$tableName}` (";
		foreach($columns as $fieldName=>$attr){
			if(!$this->isValidColumnObject($attr)){
				return false;
			}
			
			$field = $attr->Field;
			$type = $attr->Type;
			$isNull = ($attr->Null == "NO")?"NOT NULL":"NULL";
			$key = $attr->Key;
			$defaultStr = (is_null($attr->Default) || preg_match("/(TIMESTAMP)/", $attr->Default))?$attr->Default:"'{$attr->Default}'";
			$defaultValue = (!empty($attr->Default))?" DEFAULT ".$defaultStr."":"";
			$extra = ($attr->Extra=="auto_increment")?$attr->Extra:"";
			
			if($key == "PRI"){
				$primaryKey = "PRIMARY KEY(".$fieldName.")";
			}
			
			if($key == "MUL"){
				$indexes.= "INDEX(".$fieldName."),";
			}
			
			$sql.= "`{$fieldName}` ".$type." ".$isNull." ".$defaultValue." ".$extra.",";
		}
		$sql.= $indexes;
		$sql.=$primaryKey;
		$sql.= ");";
		
		return $sql;
	}

	protected function tableExists($tableName)
	{
		$sql = "show tables like '{$tableName}'";
		$rows = $this->db->get_results($sql);
		if(is_array($rows) && count($rows)>=1){
			return true;
		}
		return false;
	}
	
	protected function fieldExists($column, $table)
	{
		$sql = "describe {$table}";
		$rows = $this->db->get_results($sql);
	
		for($i=0; $i<count($rows); $i++)
		{
			if($column == $rows[$i]->Field)
			{
				return true;
			}
		}
		return false;
	}
	
	protected function showDebug($str){
		if($this->DEBUG){
			echo get_class($this)." : ".$str."<br />";
		}
	}
	
	protected function validateDbRef(){
		if(!method_exists($this->db, "get_results")){
			$this->showDebug("DB Adapter does not have a get_results function");
			return false;
		}
		return true;
	}
	
	private function getColumns($tableName){
		$sql = "describe ".$tableName.";";
		$rows = $this->db->get_results($sql);
		if(!is_array($rows)){
			$this->showDebug("get_results did not return an array : ".json_encode($rows));
			return false;
		}
		
		$columns = array();
		foreach($rows as $row){
			/*
			 * object(stdClass)#5 (6) { ["Field"]=> string(2) "id" ["Type"]=> string(7) "int(11)" ["Null"]=> string(2) "NO" 
			 * ["Key"]=> string(3) "PRI" ["Default"]=> NULL ["Extra"]=> string(14) "auto_increment" }
			 */
			$columns[$row->Field] = $row;
		}
		
		return $columns;
	}
	
	protected function getTables(){
		$sql = "show tables;";
		$rows = $this->db->get_results($sql);
		if(!is_array($rows)){
			$this->showDebug("get_results did not return an array : ".json_encode($rows));
			return false;
		}
		
		foreach($rows as $row){
			$key = $this->tableNamePrefix.$this->dbName;
			if($row->$key == "mm_coupon_view"){
				continue;
			}
			$tables[$row->$key] = $this->getColumns($row->$key);
		}
		return $tables;
	}
	
	protected function isSafe($dirName){
		if(!is_dir($dirName)){
			$this->showDebug("Directory is not found : {$dirName}");
			return false;
		}
		
		if(!is_writeable($dirName)){
			$this->showDebug("Directory is not writeable : {$dirName}");
			return false;
		}
		
		if(!$this->validateDbRef()){
			$this->showDebug("DB Adapter does not have the proper functions");
			return false;	
		}
		
		return true;
	}
	
	abstract function exportFile($dir);
	abstract function exportScreen();
}