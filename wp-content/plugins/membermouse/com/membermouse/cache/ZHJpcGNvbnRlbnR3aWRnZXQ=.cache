/**
 * Drip Content Widget Class
 */
class MM_DripContentWidget extends WP_Widget 
{
	private static $DATE_KEYWORD = "##date##";
	private static $DFLT_DATE_FORMAT = "M j, Y";
	
	private $user;
	private $accessiblePosts;
	
    /** constructor */
    function __construct() 
    {
    	$widget_ops = array('classname' => 'mm-drip-content-widget', 'description' => 'Use this widget to display a list of currently available or upcoming content to the current member based on their access rights');
        parent::__construct(false, $name = 'MM Protected Content', $widget_ops);	
    }

    /** @see WP_Widget::form */
    function form($instance) 
    {	
    	// set default values
    	$title = "";
    	$contenttype = "current";
    	$displayaslinks = "1";
    	$numitems = "5";
    	$postcheckbox = "0";
    	$postcategories = "";
    	$pagecheckbox = "0";
    	$custompostcheckbox = "0";
    	$customposttypes = "";
    	$categoryradio = "all";
    	$datecheckbox = "0";
    	$dateprefix = "(Available ".self::$DATE_KEYWORD.")";
    	$dateformat = "short";
    	$customdateformat = self::$DFLT_DATE_FORMAT;
    	
    	// set current values
    	if(isset($instance['title']))
    	{
    		$title = esc_attr($instance['title']);
    	}
    	
    	if(isset($instance['contenttype']))
    	{
    		$contenttype = esc_attr($instance['contenttype']);
    	}
    	
    	if(isset($instance['numitems']))
    	{
    		$numitems = esc_attr($instance['numitems']);
    	}
    	
    	if(isset($instance['displayaslinks']))
    	{
    		$displayaslinks = esc_attr($instance['displayaslinks']);
    	}
    	
    	if(isset($instance['postcheckbox']))
    	{
			$postcheckbox = esc_attr($instance['postcheckbox']);
    	}
    	
    	if(isset($instance['pagecheckbox']))
    	{
			$pagecheckbox = esc_attr($instance['pagecheckbox']);
    	}
    	
    	if(isset($instance['custompostcheckbox']))
    	{
			$custompostcheckbox = esc_attr($instance['custompostcheckbox']);
    	}
    	
    	if(isset($instance['categoryradio']))
    	{
			$categoryradio = esc_attr($instance['categoryradio']);
    	}
    	
    	if(isset($instance['postcategories']))
    	{
			$postcategories = $instance['postcategories'];
    	}
    	
    	if(isset($instance['customposttypes']))
    	{
			$customposttypes = $instance['customposttypes'];
    	}
    	
    	if(isset($instance['datecheckbox']))
    	{
			$datecheckbox = esc_attr($instance['datecheckbox']);
    	}
    	
    	if(isset($instance['dateprefix']))
    	{
			$dateprefix = esc_attr($instance['dateprefix']);
    	}
    	
    	if(isset($instance['dateformat']))
    	{
			$dateformat = esc_attr($instance['dateformat']);
    	}
    	
    	if(isset($instance['customdateformat']))
    	{
			$customdateformat = esc_attr($instance['customdateformat']);
    	}
    ?>
    <script>
    function mmDripContent_ToggleDiv(checkbox, divId)
    {
        if(checkbox.checked == true) 
        {
    		document.getElementById(divId).style.display = "";
        }
        else
        {
    		document.getElementById(divId).style.display = "none";
        }
    }
    </script>
    
    <div style="text-align: right; font-size:10px;"><a href="http://support.membermouse.com/support/solutions/articles/9000020220-protected-content-widget" target="_blank">need help?</a></div>
    
    <p>
      	<label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Widget Title'); ?></label>
      	<input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
    </p>
    
    <p>
		<select name="<?php echo $this->get_field_name('contenttype'); ?>" id="<?php echo $this->get_field_id('contenttype'); ?>" class="widefat">
			<option value="current" <?php echo ($contenttype == "current") ? "selected=\"selected\"" : ""; ?>>Show Available Content</option>
			<option value="upcoming" <?php echo ($contenttype == "upcoming") ? "selected=\"selected\"" : ""; ?>>Show Upcoming Content</option>
		</select>
	</p>
	
	<p>
      	<label for="<?php echo $this->get_field_id('numitems'); ?>"><?php _e('Number of items to show:'); ?></label>
      	<input id="<?php echo $this->get_field_id('numitems'); ?>" name="<?php echo $this->get_field_name('numitems'); ?>" type="text" size="3" value="<?php echo $numitems; ?>" />
    </p>

    <p>
      	<input id="<?php echo $this->get_field_id('displayaslinks'); ?>" name="<?php echo $this->get_field_name('displayaslinks'); ?>" type="checkbox" value="1" <?php checked( '1', $displayaslinks ); ?>/>
    	<label for="<?php echo $this->get_field_id('displayaslinks'); ?>"><?php _e('Display items as links'); ?></label>
    </p> 

    <p>
      	<input id="<?php echo $this->get_field_id('postcheckbox'); ?>" name="<?php echo $this->get_field_name('postcheckbox'); ?>" type="checkbox" value="1" onClick="mmDripContent_ToggleDiv(this, '<?php echo $this->get_field_id('postoptions'); ?>')" <?php checked( '1', $postcheckbox ); ?>/>
    	<label for="<?php echo $this->get_field_id('postcheckbox'); ?>"><?php _e('Include Posts'); ?></label>
    </p> 
    
    <div id="<?php echo $this->get_field_id('postoptions'); ?>" style="margin-left: 20px; margin-bottom: 10px; line-height: 20px; display: <?php echo ($postcheckbox == "1") ? "" : "none"; ?>">
    	<input type="radio" name="<?php echo $this->get_field_name('categoryradio'); ?>" value="all" <?php echo ($categoryradio == "all") ? "checked" : ""; ?>> All categories<br/>
		<input type="radio" name="<?php echo $this->get_field_name('categoryradio'); ?>" value="selected" <?php echo ($categoryradio == "selected") ? "checked" : ""; ?>> Selected categories
   		<select name="<?php echo $this->get_field_name('postcategories'); ?>[]" id="<?php echo $this->get_field_id('postcategories'); ?>" class="widefat" multiple="multiple" size="5">
			<?php 
			$categoryArgs = array('orderby' => 'name', 'order' => 'ASC');
			
			$categories = get_categories($categoryArgs);
			
			foreach($categories as $category) 
			{
				$selected = in_array($category->term_id, $postcategories) ? ' selected="selected"' : '';
				echo "<option value=\"{$category->term_id}\" {$selected}>{$category->name}</option>";
			}
			?>
		</select>
    </div>
    	
    <p>
    	<input id="<?php echo $this->get_field_id('pagecheckbox'); ?>" name="<?php echo $this->get_field_name('pagecheckbox'); ?>" type="checkbox" value="1" <?php checked( '1', $pagecheckbox ); ?>/>
    	<label for="<?php echo $this->get_field_id('pagecheckbox'); ?>"><?php _e('Include Pages'); ?></label>
    </p>
    
    <p>
      	<input id="<?php echo $this->get_field_id('custompostcheckbox'); ?>" name="<?php echo $this->get_field_name('custompostcheckbox'); ?>" type="checkbox" value="1" onClick="mmDripContent_ToggleDiv(this, '<?php echo $this->get_field_id('custompostoptions'); ?>')" <?php checked( '1', $custompostcheckbox ); ?>/>
    	<label for="<?php echo $this->get_field_id('custompostcheckbox'); ?>"><?php _e('Include Custom Post Types'); ?></label>
    </p> 
    
    <div id="<?php echo $this->get_field_id('custompostoptions'); ?>" style="margin-left: 20px; margin-bottom: 10px; line-height: 20px; display: <?php echo ($custompostcheckbox == "1") ? "" : "none"; ?>">
    	<select name="<?php echo $this->get_field_name('customposttypes'); ?>[]" id="<?php echo $this->get_field_id('customposttypes'); ?>" class="widefat" multiple="multiple" size="5">
			<?php 
			$postTypes = MM_Utils::getCustomPostTypes();
			
			foreach($postTypes as $postTypeSlug) 
			{
				$selected = in_array($postTypeSlug, $customposttypes) ? ' selected="selected"' : '';
				$postTypeObj = get_post_type_object($postTypeSlug);
				echo "<option value=\"{$postTypeSlug}\" {$selected}>{$postTypeObj->labels->singular_name}</option>";
			}
			?>
		</select>
    </div>
	
	<p>
    	<input id="<?php echo $this->get_field_id('datecheckbox'); ?>" name="<?php echo $this->get_field_name('datecheckbox'); ?>" type="checkbox" value="1" onClick="mmDripContent_ToggleDiv(this, '<?php echo $this->get_field_id('dateoptions'); ?>')" <?php checked( '1', $datecheckbox ); ?>/>
    	<label for="<?php echo $this->get_field_id('datecheckbox'); ?>"><?php _e('Show date next to content title'); ?></label>
    </p>
    
    <div id="<?php echo $this->get_field_id('dateoptions'); ?>" style="margin-left: 20px; margin-bottom: 10px; display: <?php echo ($datecheckbox == "1") ? "" : "none"; ?>">
    	<label for="<?php echo $this->get_field_id('dateprefix'); ?>"><?php _e('Text to display (use <code>'.self::$DATE_KEYWORD.'</code> to indicate where the date goes)'); ?></label>
      	<input class="widefat" id="<?php echo $this->get_field_id('dateprefix'); ?>" name="<?php echo $this->get_field_name('dateprefix'); ?>" type="text" value="<?php echo $dateprefix; ?>" />
    	
    	<div style="margin-top:10px; line-height:20px;">
			<input type="radio" name="<?php echo $this->get_field_name('dateformat'); ?>" value="short" <?php echo ($dateformat == "short") ? "checked" : ""; ?>> <?php echo date("M jS"); ?><br/>
	    	<input type="radio" name="<?php echo $this->get_field_name('dateformat'); ?>" value="long" <?php echo ($dateformat == "long") ? "checked" : ""; ?>> <?php echo date("M j, Y"); ?><br/>
			<input type="radio" name="<?php echo $this->get_field_name('dateformat'); ?>" value="common" <?php echo ($dateformat == "common") ? "checked" : ""; ?>> <?php echo date("n/j/y"); ?><br/>
			<input type="radio" name="<?php echo $this->get_field_name('dateformat'); ?>" value="custom" <?php echo ($dateformat == "custom") ? "checked" : ""; ?>> Custom format
			
			<div style="margin-left:15px;">
	      		<input id="<?php echo $this->get_field_id('customdateformat'); ?>" name="<?php echo $this->get_field_name('customdateformat'); ?>" type="text" size="25" value="<?php echo $customdateformat; ?>" />
	    		<label for="<?php echo $this->get_field_id('customdateformat'); ?>"><?php _e('<a href="http://php.net/manual/en/function.date.php" target="_blank"><em>click here for format options</em></a>'); ?></label>
	    	</div>
    	</div>
    </div>
    <?php
    }
	
    /** @see WP_Widget::update */
    function update($new_instance, $old_instance) 
    {		
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		$instance['contenttype'] = strip_tags($new_instance['contenttype']);
		$instance['numitems'] = strip_tags($new_instance['numitems']);
		$instance['displayaslinks'] = strip_tags($new_instance['displayaslinks']);
		$instance['postcheckbox'] = strip_tags($new_instance['postcheckbox']);
		$instance['categoryradio'] = strip_tags($new_instance['categoryradio']);
		
		if($instance['categoryradio'] == "all")
		{
			$instance['postcategories'] = "";
		}
		else 
		{
			$instance['postcategories'] = $new_instance['postcategories'];
		}
		
		$instance['pagecheckbox'] = strip_tags($new_instance['pagecheckbox']);
		$instance['custompostcheckbox'] = strip_tags($new_instance['custompostcheckbox']);
		$instance['customposttypes'] = $new_instance['customposttypes'];
		$instance['datecheckbox'] = strip_tags($new_instance['datecheckbox']);
		$instance['dateprefix'] = strip_tags($new_instance['dateprefix']);
		$instance['dateformat'] = strip_tags($new_instance['dateformat']);
		$instance['customdateformat'] = strip_tags($new_instance['customdateformat']);
		
	    return $instance;
    }
    
    /**
     * This is a helper function to the widget() method that retrieves accessible posts for 
     * the current user based on the parameters passed and widget arguments and updates the 
     * $accessiblePost Array.
     * @param String $accessType equals 'member_type' or 'access_tag' an indicates the type of access right
     * @param Integer $accessId the ID of the access right
     * @param Integer $numDaysWithAccess the number of days the member has had the access right 
     * @param Object $instance a reference to the widget instance arguments 
     */
    private function getAccessiblePosts($accessType, $accessId, $numDaysWithAccess, $instance)
    {
    	global $wpdb;
    	
    	if(!empty($accessId))
    	{
	    	$sql = "SELECT post_id, days FROM ".MM_TABLE_POSTS_ACCESS." WHERE is_smart_content = 0";
	    	
	    	if(isset($instance['contenttype']) && $instance['contenttype'] == "current")
	    	{
	    		$sql .= " AND days <= ".$numDaysWithAccess;
	    	}
	    	else
	    	{
	    		$sql .= " AND days > ".$numDaysWithAccess;
	    	}

	    	$sqlAccessId = ($accessId=="none")?0:intval($accessId);
	    	$sql .= " AND access_type = '".$accessType."' AND access_id = ".$sqlAccessId;
	    	
	    	$sql .= " ORDER BY days ASC;";
	    	
	    	$results = $wpdb->get_results($sql);
	    	
	    	if($results)
	    	{
	    		foreach($results as $post)
	    		{
	    			$item = new stdClass();
	    			$item->id = $post->post_id;
	    	
	    			// calculate date content will become available
	    			if(isset($instance['contenttype']) && $instance['contenttype'] == "current")
	    			{
	    				$dateOffset = $numDaysWithAccess - $post->days;
	    				$postDate = mktime(0, 0, 0, date("m"), date("d")-$dateOffset, date("y"));
	    			}
	    			else
	    			{
	    				$dateOffset = $post->days - $numDaysWithAccess;
	    				$postDate = mktime(0, 0, 0, date("m"), date("d")+$dateOffset, date("y"));
	    			}
	    	
	    			$item->date = $postDate;
	    			
	    			$wpPost = get_post($post->post_id);
	    		
	    			if(isset($wpPost->post_date))
	    			{
	    				$item->post_date = $wpPost->post_date;
	    			}
	    			
	    			array_push($this->accessiblePosts, $item);
	    		}
	    	}
    	}
    }
    
    /**
     * This is a compare function used in conjunction with the usort() method to sort 
     * the $accessiblePosts array by the date property of the objects contained in this
     * array.
     * @param Object $post1 the first post in the comparison
     * @param Object $post2 the second post in the comparison
     */
    public static function sortPosts($post1, $post2)
    {
    	if($post1->date == $post2->date)
    	{
    		if(isset($post1->post_date) && isset($post2->post_date))
    		{
    			if($post1->post_date == $post2->post_date)
    			{
    				return 0;
    			}
    			else if($post1->post_date > $post2->post_date)
    			{
    				return 1;
    			}
    			else
    			{
    				return -1;
    			}
    		}
    		
    		return 0;
    	}
    	else if($post1->date > $post2->date)
    	{
    		return 1;
    	}
    	else
    	{
    		return -1;
    	}
    }
    
    /** @see WP_Widget::widget */
    function widget($args, $instance) 
    {	
 		$this->user = MM_Utils::getCurrentUser();
 		
 		if(isset($this->user) && $this->user->isValid()) 
 		{
	    	extract($args);
	
		    $title = apply_filters('widget_title', $instance['title']);
			
		    echo $before_widget;
		
			if($title) 
			{
				echo $before_title . $title . $after_title;
			}
			
			$this->accessiblePosts = array();
			$postsToDisplay = array();
			
			if(isset($instance['numitems']) && intval($instance['numitems']) > 0)
			{
				// if admin is logged in, use data from the Preview Settings Bar to represent the current user
				$isPreview = false;
				
				if(MM_Employee::isEmployee())
				{
					$previewSettings = MM_Preview::getData();
						
					if($previewSettings !== false)
					{
						$isPreview = true;
					}
				}
				
				// get accessible posts for the user's membership level
				$daysAsMember = 0;
				
				if($isPreview)
				{
					$daysAsMember = $previewSettings->getDays();
				}
				else
				{
					$daysAsMember = $this->user->getDaysAsMember();
				}
				
				$this->getAccessiblePosts('member_type', $this->user->getMembershipId(), $daysAsMember, $instance);
				
				// get accessible posts for the user's bundles
				if($isPreview)
				{
					$bundleIds = $previewSettings->getBundles();
					
					foreach($bundleIds as $bundleId)
					{
						if(intval($bundleId) > 0)
						{
							$this->getAccessiblePosts('access_tag', $bundleId, $previewSettings->getDays(), $instance);
						}
					}
				}
				else
				{
					$appliedBundles = $this->user->getAppliedBundles();
				
					foreach($appliedBundles as $appliedBundle)
					{
						$this->getAccessiblePosts('access_tag', $appliedBundle->getBundleId(), $this->user->getDaysWithBundle($appliedBundle->getBundleId()), $instance);
					}
				}
				
				// sort accessible posts by post date
				usort($this->accessiblePosts, "MM_DripContentWidget::sortPosts");
				
				// the previous sort mechanism will order the content based on the date it becomes available
				// to the current user. If we're meant to display currently available content as opposed to 
				// upcoming content, the order should be reversed
				if(isset($instance['contenttype']) && $instance['contenttype'] == "current")
				{
					$this->accessiblePosts = array_reverse($this->accessiblePosts);	
				}
				
				// iterate over accessible posts and for each post and check if it should be displayed according 
				// to the widget configuration of categories and post type (i.e. post or page). 
				$ctr = 1;
				
				if(isset($instance['postcheckbox']) && $instance['postcheckbox'] == '1')
				{
					$includePosts = true;
					
					if(isset($instance['categoryradio']) &&  $instance['categoryradio'] == "selected")
					{
						$allowedCategories = $instance['postcategories'];
					}
					else
					{
						$allowedCategories = array();
					}
				}
				else
				{
					$includePosts = false;
				}
				
				if(isset($instance['pagecheckbox']) && $instance['pagecheckbox'] == '1') 
				{
					$includePages = true;	
				}
				else
				{
					$includePages = false;
				}
				
				if(isset($instance['custompostcheckbox']) && $instance['custompostcheckbox'] == '1')
				{
					$includeCustomPostTypes = true;
					$allowedCustomPostTypes = $instance['customposttypes'];
				}
				else
				{
					$includeCustomPostTypes = false;
					$allowedCustomPostTypes = array();
				}
				
				foreach($this->accessiblePosts as $post)
				{
					// Exit the loop once the number of items processed equals the number of items 
					// set in the widget configuration.
					if($ctr > intval($instance['numitems']))
					{
						continue;
					}
					
					$wpPost = get_post($post->id);
					
					// check if post is published
					if($wpPost->post_status == "publish" || $wpPost->post_status == "inherit")
					{
						// check if the post type of the current post is allowed
						if(($includePosts && $wpPost->post_type == "post") || ($includePages && $wpPost->post_type == "page")
							|| ($includeCustomPostTypes && in_array($wpPost->post_type, $allowedCustomPostTypes)))
						{
							// check if the category of the current post is allowed
							$categoryCheck = true;
							
							if($wpPost->post_type == "post" && $includePosts && $instance['categoryradio'] == "selected")
							{
								$categoryCheck = false;
								
								$post_categories = wp_get_post_categories($post->id);
								
								foreach($post_categories as $c) 
								{
									if(in_array($c, $allowedCategories))
									{
										$categoryCheck = true;
									}			
								}
							}
							
							if($categoryCheck)
							{
								$post->title = $wpPost->post_title;
								$post->permalink = get_permalink($post->id);
								
								$ctr++;
								
								array_push($postsToDisplay, $post);
							}		
						}
					}
				}
				
				// render post items
				if(count($postsToDisplay) > 0)
				{
					echo "<ul>
					";
					
					foreach($postsToDisplay as $item)
					{
						$html = "<li>";
						
						// render content title (make a link if the displayaslinks property is set to 1)
						if(isset($instance['displayaslinks']) && $instance['displayaslinks'] == "1")
						{
							$html .= "<a href=\"{$item->permalink}\" title=\"{$item->title}\">{$item->title}</a>";
						}
						else
						{
							$html .= "<span class=\"mm-drip-content-item\">{$item->title}</span>";
						}	
						
						// add date string if necessary
						if(isset($instance['datecheckbox']) && $instance['datecheckbox'] == '1')
						{
							$formatStr = self::$DFLT_DATE_FORMAT;
							
							if(isset($instance['dateformat']))
							{
								switch($instance['dateformat'])
								{
									case "long":
										$formatStr = "M j, Y";
										break;
										
									case "common":
										$formatStr = "n/j/y";
										break;
										
									case "short":
										$formatStr = "M jS";
										break;
										
									case "custom":
										if(isset($instance['customdateformat']))
										{
											$formatStr = $instance['customdateformat'];
										}
										break;
								}
							}
							
							$formattedDate = date($formatStr, $item->date);
							
							if(isset($instance['dateprefix']) && strpos($instance['dateprefix'], self::$DATE_KEYWORD))
							{
								$dateStr = str_replace(self::$DATE_KEYWORD, $formattedDate, $instance['dateprefix']);
							}
							else
							{
								$dateStr = $formattedDate;
							}
							
							$html .= " <time datetime\"".date("Y-m-d", $item->date)."\">".$dateStr."</time>";
						}
					
						$html .= "</li>
						";
						
						echo $html;
					}
					
					echo "</ul>";
				}
				else
				{
					if(isset($instance['contenttype']) && $instance['contenttype'] == "current")
					{
						echo "<span class=\"mm-drip-content-no-content\">No content available</span>";
					}
					else
					{
						echo "<span class=\"mm-drip-content-no-content\">No upcoming content</span>";
					}
				}
			}
			
			echo $after_widget;
 		}
    }
}