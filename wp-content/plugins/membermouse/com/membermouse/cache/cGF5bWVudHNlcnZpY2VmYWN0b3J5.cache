/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 * 
 * The PaymentService Factory retrieves a requested payment service based on a token, or all available payment services
 */
 
class MM_PaymentServiceFactory 
{
	//used to hold instances of payment services that can be reused
	protected static $instances = array();
	
	public static $AVAILABLE_SERVICES_CACHE_KEY = "mm-available-payment-services";
	
	private static function isPaymentServiceInKeyOverride()
	{
		return (
					MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE) == MM_TestPaymentService::$MODE_OVERRIDE_WITH_KEY ||
					MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE) == MM_TestPaymentService::$MODE_PRODUCTION_OVERRIDE_WITH_KEY
				);
	}
	
	public static function syncPaymentServiceKeyOveride()
	{ 
		// detect if payment service override should be activated
		if (isset($_GET['pso']))
		{
			$testPaymentService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$TEST_SERVICE_TOKEN);
			if ($testPaymentService->isActive() && ($testPaymentService->getMode() !== MM_TestPaymentService::$MODE_ALWAYS_OVERRIDE))
			{
				if (($pso = trim($_GET['pso'])) !== "")
				{ 
					if (strtolower($pso) == "off")
					{ 
						MM_Session::clear(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE); 
					}
					else if (($testPaymentService->getMode() == MM_TestPaymentService::$MODE_OVERRIDE_WITH_KEY) && ($pso == $testPaymentService->getTestProcessorOverrideKey()))
					{ 
						//set session value to indicate test processor is overriding payment service
						MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE,MM_TestPaymentService::$MODE_OVERRIDE_WITH_KEY);
					}
					else if (($testPaymentService->getMode() == MM_TestPaymentService::$MODE_PRODUCTION_OVERRIDE_WITH_KEY) && ($pso == $testPaymentService->getProductionProcessorOverrideKey()))
					{ 
						//set session value to indicate production processor should be switched to test mode
						MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE,MM_TestPaymentService::$MODE_PRODUCTION_OVERRIDE_WITH_KEY);
					}
				}
			}
		}	  
	}
	
	/**
	 * Retrieve all of the active payment services
	 * 
	 * @param $tokensOnly boolean If true, return only the string tokens representing the active services. Defaults to false
	 * @return array containing all the active payment service objects, keyed by the token
	 */
	public static function getAvailablePaymentServices()
	{
		global $wpdb; 
		 
		$cached = false;
		$paymentServicesArray = MM_ObjectCache::get(self::$AVAILABLE_SERVICES_CACHE_KEY,$cached);
		if (!$cached || !is_array($paymentServicesArray))
		{
			$paymentServicesArray = array();
			$sql = "SELECT * FROM ".MM_TABLE_PAYMENT_SERVICES." where active='1'";
			$results = $wpdb->get_results($sql);
			
			foreach ($results as $row)
			{
				$paymentService = MM_PaymentServiceFactory::getPaymentService($row->token,true,$row);
				if ($paymentService instanceof MM_PaymentService)
				{
					$paymentServicesArray[$row->token] = $paymentService;
				}
			}
			MM_ObjectCache::set(self::$AVAILABLE_SERVICES_CACHE_KEY,$paymentServicesArray);
			return $paymentServicesArray;
			
		}
		else 
		{
	        //user requested the full services, return the cache as-is
	        return $paymentServicesArray;
		}
	}
	
	
	/**
	 * Retrieve the active onsite payment service if there is one.
	 *
	 * @return MM_PaymentService An instance of the active onsite payment service, null if one can't be found
	 */
	public static function getOnsitePaymentService()
	{  
		//get all active payment services
		$services = MM_PaymentServiceFactory::getAvailablePaymentServices();
		
		foreach ($services as $service)
		{
			if ($service instanceof MM_TestPaymentService)
			{
				if ($service->getMode() == MM_TestPaymentService::$MODE_ALWAYS_OVERRIDE || self::isPaymentServiceInKeyOverride())
				{ 
					return $service;
				}   				
			}
		}
 
		foreach ($services as $service)
		{
			if ($service instanceof MM_PaymentService)
			{
				if($service->supportsFeature(MM_PaymentServiceFeatures::ONSITE_SERVICE) && ($service->getToken() !== MM_PaymentService::$TEST_SERVICE_TOKEN))
				{
					return $service;
				}
			}
		}
		
		return null;
	}
	
	/**
	 * Retrieve the active offsite payment service if there is one.
	 *
	 * @return MM_PaymentService An instance of the active offsite payment service, null if one can't be found
	 */
	public static function getOffsitePaymentService()
	{
		//get all active payment services
		$services = MM_PaymentServiceFactory::getAvailablePaymentServices();
	
		foreach ($services as $service)
		{
			if ($service instanceof MM_TestPaymentService)
			{
				if ($service->getMode() == MM_TestPaymentService::$MODE_ALWAYS_OVERRIDE)
				{
					return $service;
				}
			}
		}
	
		foreach ($services as $service)
		{
			if ($service instanceof MM_PaymentService)
			{
				if($service->supportsFeature(MM_PaymentServiceFeatures::OFFSITE_SERVICE) && ($service->getToken() !== MM_PaymentService::$TEST_SERVICE_TOKEN))
				{
					return $service;
				}
			}
		}
	
		return null;
	}	
	
	/**
	 * Indicates whether coupons are supported based on the currently active payment services. If one or more
	 * active payment services don't support coupons then coupons won't be available
	 *
	 * @return MM_Response a response object with a message indicating which payment service doesn't support coupons
	 */
	public static function couponsSupported()
	{
		$services = MM_PaymentServiceFactory::getAvailablePaymentServices();
		
		foreach ($services as $service)
		{
			if ($service instanceof MM_PaymentService)
			{
				if(!$service->supportsFeature(MM_PaymentServiceFeatures::COUPONS))
				{
					$msg = "<strong>WARNING:</strong> {$service->getName()} doesn't support coupons";
					return new MM_Response($msg, MM_Response::$ERROR);
				}
			}
		}
		
		return new MM_Response(); // coupons supported
	}
	
	/**
	 * Returns a specific payment service. Enforces the singleton nature of payment services and returns an already instantiated instance if the 
	 * requested payment service has already been created
	 * 
	 * @param String $paymentServiceToken
	 * @param Boolean $autoloadDependencies (optional) this parameter indicates if the dependencies should be loaded when the payment service is instantiated
	 * @param array|string $configData (optional) when set, this parameter causes the requested payment service to be instantiated using the supplied config data, which can save a roundtrip to the db
	 * 
	 * @return MM_PaymentService An instance of the payment service matching the supplied token, null if one can't be found
	 */
	public static function getPaymentService($paymentServiceToken, $autoloadDependencies=true, $configData="")
	{
		if (isset(MM_PaymentServiceFactory::$instances[$paymentServiceToken]) && (MM_PaymentServiceFactory::$instances[$paymentServiceToken] instanceof MM_PaymentService))
		{
			$pymtService = MM_PaymentServiceFactory::$instances[$paymentServiceToken];
			
			if($autoloadDependencies)
			{
				$pymtService->loadDependencies();
			}
			
			return $pymtService;
		}
		
		switch ($paymentServiceToken) 
		{
			case MM_PaymentService::$PAYPAL_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_PayPalService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$CLICKBANK_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_ClickBankService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$AUTHORIZENET_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_AuthorizeNetService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$AUTHORIZENET_CIM_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_AuthorizeNetCIMService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$CHARGIFY_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_ChargifyService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$STRIPE_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_StripeService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$BRAINTREE_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_BraintreeService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN:
			    MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_LimeLightService($autoloadDependencies,$configData);
			    break;
			case MM_PaymentService::$STICKYIO_SERVICE_TOKEN:
			    MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_StickyioService($autoloadDependencies,$configData);
			    break;
			case MM_PaymentService::$LITLE_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_LitleService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$COINBASE_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_CoinbaseService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_CoinbaseMinimalService($autoloadDependencies,$configData);
				break;
      		case MM_PaymentService::$TWOCHECKOUT_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_TwoCheckoutService($autoloadDependencies,$configData);
				break;
			case MM_PaymentService::$TEST_SERVICE_TOKEN:
				MM_PaymentServiceFactory::$instances[$paymentServiceToken] = new MM_TestPaymentService($autoloadDependencies,$configData);
				break;
			default:
				return null;
				break;
		}
		
		return MM_PaymentServiceFactory::$instances[$paymentServiceToken];
	}
	
	
	/**
	 * Returns a payment service having the request id (pk)
	 * 
	 * @param integer $paymentServiceId The id of the payment service to retrieve
	 * 
	 * @return MM_PaymentService instance on success, null on failure
	 */
	public static function getPaymentServiceById($paymentServiceId)
	{
		global $wpdb;
		
		if (is_null($paymentServiceId))
		{
			return null;
		}
		
		$sql = "select token from ".MM_TABLE_PAYMENT_SERVICES." where id = %s";
		$tokenObject = $wpdb->get_row($wpdb->prepare($sql,$paymentServiceId));
		if (is_null($tokenObject))
		{
			return null;
		}
		return self::getPaymentService($tokenObject->token);
	}
	
	
	/**
	 * getPaymentServicesArray returns an array of all the potential payment services, keyed by token and filtered by the install type and whether they can be shown on registration
	 *
	 * @param Boolean $autoloadDependencies this parameter is passed through to the getPaymentService() method and indicates if the dependencies should be loaded when the payment service is instantiated. Defaults to true 	 
	 * 
	 * @return array containing objects for each payment service, filtered by the product version, active status, and whether they can be shown on registration. If $tokensOnly is true, the array contains only the string payment service tokens
	 */
	public static function getPaymentServicesArray($autoloadDependencies=true)
	{
		global $wpdb;
		$paymentServicesArray = array();
		$valid_tokens = array();
		
		// add valid tokens based on the plugin's permissions
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_PAYPAL) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$PAYPAL_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_CLICKBANK) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$CLICKBANK_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_AUTHORIZENET) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$AUTHORIZENET_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_AUTHORIZENET_CIM) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$AUTHORIZENET_CIM_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_CHARGIFY) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$CHARGIFY_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_STRIPE) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$STRIPE_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_BRAINTREE) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$BRAINTREE_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_LIMELIGHT) == MM_MemberMouseService::$ACTIVE)
		{
		    array_push($valid_tokens, MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_STICKYIO) == MM_MemberMouseService::$ACTIVE)
		{
		    array_push($valid_tokens, MM_PaymentService::$STICKYIO_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_LITLE) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$LITLE_SERVICE_TOKEN);
		}
		
		if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_COINBASE) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$COINBASE_SERVICE_TOKEN);
			array_push($valid_tokens, MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN);
		}
	
		// temporarily disable 2Checkout
    	/*if(MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_TWOCHECKOUT) == MM_MemberMouseService::$ACTIVE)
		{
			array_push($valid_tokens, MM_PaymentService::$TWOCHECKOUT_SERVICE_TOKEN);
		}*/
	
		//the test service is available with any permissions-set
		array_push($valid_tokens,MM_PaymentService::$TEST_SERVICE_TOKEN);
		
		
	    $validTokenInstring = "'".implode("','",$valid_tokens)."'";
	    $sql = "SELECT * from ".MM_TABLE_PAYMENT_SERVICES." WHERE token IN ({$validTokenInstring})";
		$results = $wpdb->get_results($sql);
		
		//add each payment service if the token is in the list of valid tokens, and a valid payment service object can be retrieved from the factory using the token
		foreach ($results as $row)
		{
			$paymentServiceToken = strtoupper($row->token);
			try 
			{
				$paymentService = MM_PaymentServiceFactory::getPaymentService($paymentServiceToken, $autoloadDependencies,$row);
				if (($paymentService != null) && ($paymentService instanceOf MM_PaymentService))
				{
					$paymentServicesArray[$paymentServiceToken] = $paymentService;
				}
			}
			catch (Exception $e)
			{
				//there was an error instantiating the service so log and skip it
				$errorMsg = "Error instantiating {$paymentServiceToken} :".$e->getMessage();
				MM_DiagnosticLog::log(MM_DiagnosticLog::$MM_ERROR, $errorMsg);
			}
		}
		//add the Test payment service to the list
		$paymentServicesArray[MM_PaymentService::$TEST_SERVICE_TOKEN] = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$TEST_SERVICE_TOKEN, $autoloadDependencies);
		ksort($paymentServicesArray);
		return $paymentServicesArray;
	}
	
}