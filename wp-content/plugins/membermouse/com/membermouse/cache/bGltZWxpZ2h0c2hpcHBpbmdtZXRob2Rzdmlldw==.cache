/**
 * 
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_LimeLightShippingMethodsView extends MM_RBACProductManagerView
{	
	public static $MM_JSACTION_GET_LIMELIGHT_SHIPPING_METHODS = "getLimeLightShippingMethods";
	public static $MM_JSACTION_GET_LIMELIGHT_SHIPPING_DESCRIPTION = "getLLShippingDescription";
	

	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE:
					return $this->saveLimeLightShippingMethod($post);
					
				case self::$MM_JSACTION_REMOVE:
					return $this->removeLimeLightShippingMethod($post);
					
				case self::$MM_JSACTION_GET_LIMELIGHT_SHIPPING_METHODS:
					return $this->getLimeLightShippingMethods($post);
					
				case self::$MM_JSACTION_GET_LIMELIGHT_SHIPPING_DESCRIPTION:
					return $this->getLimeLightShippingDescription($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function getViewData($post)
	{
		return parent::getData(MM_TABLE_LIMELIGHT_SHIPPING_METHODS, null, $post);
	}
	
	private function saveLimeLightShippingMethod($post)
	{
		$limeLightShippingMethod = new MM_LimeLightShippingMethod();
		
		if(isset($post["id"]) && intval($post["id"]) > 0) 
		{
			$limeLightShippingMethod = new MM_LimeLightShippingMethod($post["id"]);
			
			if(!$limeLightShippingMethod->isValid())
			{
				return new MM_Response("Cannot update Lime Light shipping method mapping. Invalid ID '{$post['id']}' passed.", MM_Response::$ERROR);
			}
		}
		
		// get Lime Light shipping method
		$limeLightService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
		$result = $limeLightService->getShippingMethod($post["limelight_shipping_method_id"]);
		
		if(MM_Response::isError($result))
		{
			return new MM_Response("Cannot save Lime Light shipping method mapping. Invalid Lime Light shipping method ID '{$post['limelight_shipping_method_id']}' passed.", MM_Response::$ERROR);
		}
		
		$llShippingInfo = $result->message;
		
		// get MemberMouse shipping method
		$split = explode("-", $post["mm_option_key"]);
		$token = $split[0];
		
		//get the shipping method
		$shippingMethod = MM_ShippingMethod::getShippingMethodByToken($token);
		$shippingOption = null;
		
		if($shippingMethod)
		{
			$optionRetrievalResponse = $shippingMethod->getShippingOptionByKey(new MM_Order(), $post["mm_option_key"]);
			$shippingOption = $optionRetrievalResponse->message;
			
			if($shippingOption)
			{
				$mmShippingMethodName = "{$shippingOption->getName()} ({$shippingOption->getRate(true)})";
			}
		}
		
		if(is_null($shippingOption))
		{
			return new MM_Response("Cannot save Lime Light shipping method mapping. Invalid MemberMouse shipping method '{$post["mm_option_key"]}' passed.", MM_Response::$ERROR);
		}
		
		// validate mapping
		$rateMismatch = "";
		
		if(floatval($llShippingInfo["initial_amount"]) != $shippingOption->getRate())
		{
			$rateMismatch = "RATE MISMATCH\n";
			$rateMismatch .= "Lime Light Rate: "._mmf($llShippingInfo["initial_amount"], "USD")."\n";
			$rateMismatch .= "MemberMouse Rate: ".$shippingOption->getRate(true)."\n\n";
		}
		
		if(!empty($rateMismatch))
		{
			$errorMsg = "Invalid shipping method mapping:\nLime Light shipping method settings must match the MemberMouse shipping method settings.\n\n";
				
			$errorMsg .= $rateMismatch;
				
			return new MM_Response($errorMsg, MM_Response::$ERROR);
		}
	 	
	 	$limeLightShippingMethod->setMMOptionKey($post["mm_option_key"]);
	 	$limeLightShippingMethod->setLimeLightShippingMethodId($post["limelight_shipping_method_id"]);
	 	$limeLightShippingMethod->setLimeLightShippingMethodName($post["limelight_shipping_method_name"]);
		
		return $limeLightShippingMethod->commitData();
	}
	
	private function removeLimeLightShippingMethod($post)
	{
		global $wpdb;
		
		if(isset($post["id"]) && intval($post["id"]) > 0)
		{
			$limeLightShippingMethod = new MM_LimeLightShippingMethod($post["id"], false);
			$result = $limeLightShippingMethod->delete();
			
			if($result) 
			{
				return new MM_Response();
			} 
			else 
			{
				return new MM_Response("Error removing Lime Light shipping method mapping", MM_Response::$ERROR);
			}
		}
		
		return new MM_Response("Unable to delete Lime Light shipping method mapping. No ID specified.", MM_Response::$ERROR);
	}
	
	private function getLimeLightShippingMethods($post)
	{
		if(isset($post["campaign_id"]))
		{
			$limeLightService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
			return MM_HtmlUtils::generateSelectionsList($limeLightService->getShippingMethodsByCampaign($post["campaign_id"]));
		}
		else
		{
			return new MM_Response("Error retrieving shipping methods. No campaign ID specified.", MM_Response::$ERROR);
		}
	}
	
	private function getLimeLightShippingDescription($post)
	{
		if(isset($post["shipping_id"]))
		{
			$limeLightService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$LIMELIGHT_SERVICE_TOKEN);
			return $limeLightService->getShippingDescription($post["shipping_id"]);
		}
		else
		{
			return new MM_Response("Error retrieving shipping information. No shipping method ID specified.", MM_Response::$ERROR);
		}
	}
}
