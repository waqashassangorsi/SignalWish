class MM_CheckoutForm extends MM_AbstractForm
{
	public $user;
	public $memberData;
	public $membershipLevelId = 0;
	public $debugMode = false;
	public $crntPageURL = "";
	public $affiliateId = "";
	public $subAffiliateId = "";
	public $couponsAvailable = false;
	public $productId = 0;
	public $productName = "";
	public $accessName = "";
	public $productPrice = "";
	public $productPriceDescription = "";
	public $productDescription = "";
	public $isFree = false;
	public $isMember = false;
	public $isShippable = false;
	public $isCustomerSupportOrder = false;
	public $processOrderUrl = "";
	public $ignoreFields = array();
	public $optionalFields = array();
	public $discountBlocks = array();
	public $shippingSameAsBilling = false;
	public $isGift = false;
	public $shippingMethods = "";
	public $billingCountryList = "";
	public $shippingCountryList = "";
	public $onSubmitCode = "";
	 
	private $firstBtnPaymentSerivceSet = false;
	private $firstBtnServiceToken = "";
	private $dfltBtnPaymentServiceSet = false;
	private $dfltBtnPaymentServiceToken = "";
	
	
	/**
	 * Default constructor. Takes an associative array of configuration parameters
	 * @param Array $params an associative array of form configuration parameters
	 */
	public function __construct($params=null)
	{	
		if(!is_null($params))
		{
			if(is_array($params) && count($params) > 0)
			{
				foreach($params as $k=>$v)
				{
					$key = strtolower($k);
					$$key = $v;
				}
			} 
			
			$disableExplicitLinks = (MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DISABLE_EXPLICIT_LINKS) == "1") ? true : false;
			
			// get product ID
			if(!$disableExplicitLinks && isset($_GET["product_id"]))
			{
				$this->productId = intval($_GET["product_id"]);
			}
			else if(!$disableExplicitLinks && isset($_GET["pid"]))
			{
				$this->productId = intval($_GET["pid"]);
			}
			else if(isset($_GET["rid"]))
			{
				$product = MM_Product::findByReferenceKey($_GET["rid"]);
				
				if($product->isValid())
				{
					$this->productId = $product->getId();
				}
			}
			else if(isset($productid) && $productid != "")
			{
				$this->productId = intval($productid);
			}
			else
			{
				$this->productId = 0;
			}
				
			// validate product ID
			if($this->productId != 0)
			{
				$product = new MM_Product($this->productId);
				
				if(!$product->isValid())
				{
					$this->productId = 0;
				}
			}
			
			// get membership level ID
			if(!$disableExplicitLinks && (isset($_GET["membership_level_id"]) || isset($_GET["mid"])))
			{
				if(isset($_GET["membership_level_id"]))
				{
					$this->membershipLevelId = intval($_GET["membership_level_id"]);
				}
				else
				{
					$this->membershipLevelId = intval($_GET["mid"]);
				}
					
				// override default form product if it's set
				if($this->productId != 0 && !isset($_GET["product_id"]) && !isset($_GET["pid"]))
				{
					$this->productId = 0;
				}
				
				// validate membership level ID
				if($this->membershipLevelId != 0)
				{
					$membership = new MM_MembershipLevel($this->membershipLevelId);
					
					if(!$membership->isValid())
					{
						$this->membershipLevelId = 0;
					}
				}
			}
			else if(isset($_GET["rid"]))
			{
				$membership = MM_MembershipLevel::findByReferenceKey($_GET["rid"]);
				
				if($membership->isValid())
				{
					$this->membershipLevelId = $membership->getId();
				}
				else 
				{
					$this->membershipLevelId = 0;
				}
			}
			else if(isset($membershiplevelid) && $membershiplevelid != "")
			{
				$this->membershipLevelId = intval($membershiplevelid);
			}
			else
			{
				$this->membershipLevelId = 0;
			}
			
			// set default checkout item if no product or membership level was specified
			if($this->membershipLevelId == 0 && $this->productId == 0)
			{
				$dfltCheckoutItemId = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DEFAULT_CHECKOUT_ITEM_ID);
		
				if(empty($dfltCheckoutItemId) || intval($dfltCheckoutItemId) == -1)
				{
					$this->membershipLevelId = MM_MembershipLevel::getDefaultMembership()->getId();
				}
				else
				{
					$dfltCheckoutItemType = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DEFAULT_CHECKOUT_ITEM_TYPE);
						
					if($dfltCheckoutItemType == "membership_level")
					{
						$this->membershipLevelId = $dfltCheckoutItemId;
					}
					else
					{
						$this->productId = $dfltCheckoutItemId;
					}
				}
				
				// double check that something was set
				if($this->membershipLevelId == 0 && $this->productId == 0)
				{
					$this->membershipLevelId = MM_MembershipLevel::getDefaultMembership()->getId();
				}
			}
			
			$this->initialize();
		}
	}
	
	public function initialize()
	{
		global $current_user; 
		$executionStatus = new MM_Response(); 
		// determine if this is an administrator purchasing a product for a user 
		// or a user purchasing a product for themselves
		if(isset($_GET[MM_Session::$PARAM_USER_ID]))
		{
			// check to ensure that current user has permission
			// to order products for other users
			$employee = MM_Employee::findByUserId($current_user->ID);
			if(MM_Utils::isLoggedIn() && $employee->canPlaceSupportOrder())
			{
				$this->user = new MM_User($_GET[MM_Session::$PARAM_USER_ID]);
				
				if($this->user->isValid())
				{
					$this->isCustomerSupportOrder = true;
					$this->isMember = true;
				}
				else 
				{
					$executionStatus = new MM_Response("User ID '{$_GET[MM_Session::$PARAM_USER_ID]}' is invalid", MM_Response::$ERROR);
				}
			}
			else 
			{
				$executionStatus = new MM_Response("You don't have sufficient permissions to place an order for another user.", MM_Response::$ERROR);
			}
		}
		else 
		{
			// is user logged in?
			$this->isMember = MM_Utils::isLoggedIn();
			
			// get current user
			if($this->isMember)
			{
				$this->user = MM_User::getCurrentWPUser();
			}
		}
		
		// get process order URL
		$this->processOrderUrl = MM_PROCESS_ORDER_URL;
		
		if(MM_Utils::isSSL())
		{
			$this->processOrderUrl = preg_replace("/(http\:)/", "https:", $this->processOrderUrl);
		}
  	
		// check if product ID is associated with a membership level
		if($this->membershipLevelId == 0 && $this->productId != 0)
		{
			$product = new MM_Product();
			$product->setId($this->productId);
			$product->getData();
		
			if($product->isValid())
			{
				$membership = $product->getAssociatedMembership();
		
				if($membership->isValid())
				{
					$this->membershipLevelId = $membership->getId();
				}
			}
		}
		
		// check for debug mode
		if(isset($_GET["checkout-debug"]) && $_GET["checkout-debug"] == "1")
		{
			$this->debugMode = "1";
		}
		else
		{
			$this->debugMode = "0";
		}
		
		// get affiliate info directly from the URL if this order is being placed by
		// a customer support rep, otherwise get it from cookies or URL
		if($this->isCustomerSupportOrder)
		{
			$affiliateKey = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_AFFILIATE);
			$subAffiliateKey = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_SUB_AFFILIATE);
			
			if(isset($_GET[$affiliateKey]))
			{
				$this->affiliateId = $_GET[$affiliateKey];
			}
			
			if(isset($_GET[$subAffiliateKey]))
			{
				$this->subAffiliateId = $_GET[$subAffiliateKey];
			}
		}
		else
		{
			$this->affiliateId = MM_Cookies::getAffiliateValue();
			$this->subAffiliateId = MM_Cookies::getSubAffiliateValue();
		}
		
		// get checkout page URL
		$this->crntPageURL = MM_Utils::constructPageUrl();
		
		// remove error message from URL if it's there
		$index = strpos($this->crntPageURL, "&".MM_Session::$PARAM_MESSAGE_KEY."=");
		
		if($index)
		{
			$this->crntPageURL = substr($this->crntPageURL, 0, $index);
		}
		
		// check for error messages and get saved form data
		$savedFormData = null;
		
		if(isset($_GET[MM_Session::$PARAM_MESSAGE_KEY]))
		{
			$this->error = htmlspecialchars(stripslashes($_GET[MM_Session::$PARAM_MESSAGE_KEY]), ENT_QUOTES, 'UTF-8');
		
			$savedFormData = MM_Session::value(MM_Session::$KEY_CHECKOUT_FORM);
		
			if(is_serialized($savedFormData))
			{
				$savedFormData = unserialize($savedFormData);
			}
		
			// clear session
			MM_Session::clear(MM_Session::$KEY_CHECKOUT_FORM);
			MM_Session::clear(MM_Session::$PARAM_MESSAGE_KEY);
		}
		
		// get product information, validate order and determine
		// if billing information is required
		if($this->membershipLevelId != 0)
		{
			$membership = new MM_MembershipLevel();
			$membership->setId($this->membershipLevelId);
			$membership->getData();
		
			if($membership->isValid())
			{
				$this->accessName = $membership->getName();
		
				if($membership->isFree() == "1")
				{
					$this->isFree = true;
					$this->productPrice = "Free";
					$this->productPriceDescription = "Free";
					$this->productDescription = $membership->getDescription();
				}
				else
				{
					$product = new MM_Product();
						
					if($this->productId == 0)
					{
						$product->setId($membership->getDefaultProduct());
					}
					else
					{
						$product->setId($this->productId);
					}
						
					$product->getData();
						
					if($product->isValid())
					{
						$this->productName = $product->getName();
						
						if($product->hasTrial())
						{
							$this->productPrice = $product->getTrialAmount(true);
						}
						else
						{
							$this->productPrice = $product->getPrice(true);
						}
						
						$this->productCurrency = $product->getCurrency();
						$this->productDescription = $product->getDescription();
						$this->productPriceDescription = $product->getBillingDescription(true, false);
						$this->isShippable = (bool) $product->isShippable();
						$this->productId = $product->getId();
					}
					else
					{
						// invalidate order
						$this->membershipLevelId = $this->productId = 0;
					}
				}
			}
			else
			{
				// invalidate order
				$this->membershipLevelId = $this->productId = 0;
			}
		}
		else if($this->productId != 0)
		{
			$product = new MM_Product();
			$product->setId($this->productId);
			$product->getData();
		
			if($product->isValid())
			{
				$this->productName = $product->getName();
				$bundle = $product->getAssociatedBundle();
		
				if($product->hasTrial())
				{
					$this->productPrice = $product->getTrialAmount(true);
				}
				else
				{
					$this->productPrice = $product->getPrice(true);
				}
				$this->productCurrency = $product->getCurrency();
				$this->productDescription = $product->getDescription();
				$this->productPriceDescription = $product->getBillingDescription(true, false);
				$this->isShippable = (bool) $product->isShippable();
		
				// if the product is associated with a bundle
				if($bundle->isValid())
				{
					$this->accessName = $bundle->getName();
				}
			}
			else
			{
				// invalidate order
				$this->membershipLevelId = $this->productId = 0;
			}
		}
		
		if(MM_Response::isSuccess($executionStatus))
		{
			$this->isValid = true;
		
			// set default member data values
			$this->memberData = array();
			
			$this->memberData["mm_field_user_id"] = "";
			$this->memberData["mm_field_first_name"] = "";
			$this->memberData["mm_field_last_name"] = "";
			$this->memberData["mm_field_email"] = "";
			$this->memberData["mm_field_email_confirm"] = "";
			$this->memberData["mm_field_username"] = "";
			$this->memberData["mm_field_phone"] = "";
			$this->memberData["mm_field_password"] = "";
			$this->memberData["mm_field_billing_address"] = "";
			$this->memberData["mm_field_billing_city"] = "";
			$this->memberData["mm_field_billing_state"] = "";
			$this->memberData["mm_field_billing_zip"] = "";
			$this->memberData["mm_field_billing_country"] = "";
			$this->memberData["mm_field_shipping_method"] = "";
			$this->memberData["mm_field_shipping_address"] = "";
			$this->memberData["mm_field_shipping_city"] = "";
			$this->memberData["mm_field_shipping_state"] = "";
			$this->memberData["mm_field_shipping_zip"] = "";
			$this->memberData["mm_field_shipping_country"] = "";
			$this->memberData["mm_field_cc_number"] = "";
			$this->memberData["mm_field_cc_exp_month"] = "";
			$this->memberData["mm_field_cc_exp_year"] = "";
			$this->memberData["mm_field_cc_cvv"] = "";
			$this->memberData["mm_field_coupon_code"] = "";
			
			if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
			{
				$testData = MM_TestDataUtils::getCheckoutFormTestData();
				$this->memberData["mm_field_first_name"] = MM_TestDataUtils::getTestValue($testData, "mm_field_first_name");
				$this->memberData["mm_field_last_name"] = MM_TestDataUtils::getTestValue($testData, "mm_field_last_name");
				$this->memberData["mm_field_email"] = MM_TestDataUtils::getTestValue($testData, "mm_field_email", true);
				$this->memberData["mm_field_email_confirm"] = MM_TestDataUtils::getTestValue($testData, "mm_field_email", true);
				$this->memberData["mm_field_username"] = MM_TestDataUtils::getTestValue($testData, "mm_field_username", true);
				$this->memberData["mm_field_password"] = MM_TestDataUtils::getTestValue($testData, "mm_field_password");
				$this->memberData["mm_field_phone"] = MM_TestDataUtils::getTestValue($testData, "mm_field_phone");
				$this->memberData["mm_field_billing_address"] = MM_TestDataUtils::getTestValue($testData, "mm_field_billing_address");
				$this->memberData["mm_field_billing_city"] = MM_TestDataUtils::getTestValue($testData, "mm_field_billing_city");
				$this->memberData["mm_field_billing_state"] = MM_TestDataUtils::getTestValue($testData, "mm_field_billing_state");
				$this->memberData["mm_field_billing_zip"] = MM_TestDataUtils::getTestValue($testData, "mm_field_billing_zip");
				$this->memberData["mm_field_billing_country"] = MM_TestDataUtils::getTestValue($testData, "mm_field_billing_country");
				$this->memberData["mm_field_shipping_address"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_address");
				$this->memberData["mm_field_shipping_city"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_city");
				$this->memberData["mm_field_shipping_state"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_state");
				$this->memberData["mm_field_shipping_zip"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_zip");
				$this->memberData["mm_field_shipping_country"] = MM_TestDataUtils::getTestValue($testData, "mm_field_shipping_country");
				$this->memberData["mm_field_cc_number"] = MM_TestDataUtils::getTestValue($testData, "mm_field_cc_number");
				$this->memberData["mm_field_cc_exp_month"] = MM_TestDataUtils::getTestValue($testData, "mm_field_cc_exp_month");
				$this->memberData["mm_field_cc_exp_year"] = MM_TestDataUtils::getTestValue($testData, "mm_field_cc_exp_year");
				$this->memberData["mm_field_cc_cvv"] = MM_TestDataUtils::getTestValue($testData, "mm_field_cc_cvv");
				$this->memberData["mm_field_shipping_method"] = "";
			}
			
			if($savedFormData && is_array($savedFormData))
			{
				foreach($savedFormData as $key=>$value)
				{
					$this->memberData[$key] = stripslashes($savedFormData[$key]);
				}
				
				// get custom field labels
				$customFields = MM_CustomField::getCustomFieldsList();
					
				foreach($customFields as $id=>$displayName)
				{
					$this->memberData["mm_custom_field_".$id."_label"] = strtolower($displayName);
				}
			}
			else if($this->isMember)
			{
				if($this->user->isValid())
				{
					$this->memberData["mm_field_user_id"] = $this->user->getId();
					$this->memberData["mm_field_email"] = $this->user->getEmail();
					$this->memberData["mm_field_email_confirm"] = $this->user->getEmail();
					$this->memberData["mm_field_username"] = $this->user->getUsername();
					$this->memberData["mm_field_first_name"] = $this->user->getFirstName();
					$this->memberData["mm_field_last_name"] = $this->user->getLastName();
					$this->memberData["mm_field_phone"] = $this->user->getPhone();
					$this->memberData["mm_field_billing_address"] = $this->user->getBillingAddress();
					$this->memberData["mm_field_billing_city"] = $this->user->getBillingCity();
					$this->memberData["mm_field_billing_state"] = $this->user->getBillingState();
					$this->memberData["mm_field_billing_zip"] = $this->user->getBillingZipCode();
					$this->memberData["mm_field_billing_country"] = $this->user->getBillingCountry();
					$this->memberData["mm_field_shipping_method"] = "";
					$this->memberData["mm_field_shipping_address"] = $this->user->getShippingAddress();
					$this->memberData["mm_field_shipping_city"] = $this->user->getShippingCity();
					$this->memberData["mm_field_shipping_state"] = $this->user->getShippingState();
					$this->memberData["mm_field_shipping_zip"] = $this->user->getShippingZipCode();
					$this->memberData["mm_field_shipping_country"] = $this->user->getShippingCountry();
						
					// get custom field data
					$customFields = MM_CustomField::getCustomFieldDataByUser($this->user->getId());
						
					foreach($customFields as $field)
					{
						$this->memberData["mm_custom_field_".$field->id] = $field->value;
						$this->memberData["mm_custom_field_".$field->id."_label"] = strtolower($field->display_name);
					}
				}
			}
			else
			{
				// get custom field labels
				$customFields = MM_CustomField::getCustomFieldsList();
					
				foreach($customFields as $id=>$displayName)
				{
					$this->memberData["mm_custom_field_".$id."_label"] = strtolower($displayName);
				}
			}
			
			// grab member data from $_REQUEST object
			if($_REQUEST)
			{
				$validFieldNames = "user_id,first_name,last_name,email,phone,billing_address,billing_city,billing_state,billing_zip,billing_country,";
				$validFieldNames .= "shipping_address,shipping_city,shipping_state,shipping_zip,shipping_country,gift";
			
				foreach($_REQUEST as $key=>$value)
				{
					$key = strtolower($key);
					
					// see if custom field data is contained in the $_REQUEST object
					if(strpos($key, "cf_") !== false)
					{
						$arr = explode("_", $key);
						
						if(count($arr) == 2)
						{
							$this->memberData["mm_custom_field_".$arr[1]] = $value;
						}
					}
					else if(strpos($validFieldNames, $key) !== false)
					{
						if($key == "gift")
						{
							if($value == "yes")
							{
								$this->isGift = true;
							}
							else 
							{
								$this->isGift = false;
							}
						}
						else 
						{
							$this->memberData["mm_field_".$key] = $value;
						}
					}
				}
			}
		
			// get coupon code
			if(!$this->isFree)
			{
				$this->couponsAvailable = MM_Coupon::hasAvailableCoupon();
				
				if(isset($_GET["coupon"]))
				{
					$this->memberData["mm_field_coupon_code"] = $_GET["coupon"];
				}
				else
				{
					$this->memberData["mm_field_coupon_code"] = MM_Session::value(MM_Session::$KEY_LAST_COUPON_VALUE);
				}
			}
			else
			{
				$this->couponsAvailable = false;
			}
		
			// shipping configuration, test to see if shipping and billing addresses equal
			$billingShippingFieldMap = array(
				"mm_field_billing_address" => "mm_field_shipping_address",
				"mm_field_billing_city" => "mm_field_shipping_city",
				"mm_field_billing_state" => "mm_field_shipping_state",
				"mm_field_billing_zip" => "mm_field_shipping_zip",
				"mm_field_billing_country" => "mm_field_shipping_country"
			);
			
			$billingShippingEqualTest = true;
			
			if(!empty($this->memberData["mm_field_shipping_address"]) 
					&& !empty($this->memberData["mm_field_shipping_city"]) 
					&& !empty($this->memberData["mm_field_shipping_zip"]))
			{
				foreach($billingShippingFieldMap as $billingField=>$shippingField)
				{
					$billingShippingEqualTest = ($this->memberData[$billingField] == $this->memberData[$shippingField]);
					
					if($billingShippingEqualTest == false)
					{
						break;
					}
				}
			}
			
			if($this->isShippable == false || $billingShippingEqualTest == true)
			{
				$this->shippingSameAsBilling = true;
			}
			else
			{
				$this->shippingSameAsBilling = false;
			}
			
			// countries
			if(is_null($this->memberData["mm_field_billing_country"]) || $this->memberData["mm_field_billing_country"] == "")
			{
				$dfltCountry = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_COUNTRY_SELECTION);
				
				if(!empty($dfltCountry))
				{
					$this->memberData["mm_field_billing_country"] = $dfltCountry;
				}
				else 
				{
					$this->memberData["mm_field_billing_country"] = MM_CountryUtils::$DFLT_COUNTRY_ISO;
				}
			}
			
			$this->billingCountryList = MM_HtmlUtils::getCountryList($this->memberData["mm_field_billing_country"]);
      		$this->billingCountrySubdivisionList = MM_CountrySubdivisionUtils::getCountrySubdivsionList(array_keys(MM_CountryUtils::getCountryList()));
	
			if(is_null($this->memberData["mm_field_shipping_country"]) || $this->memberData["mm_field_shipping_country"] == "")
			{
				$dfltCountry = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_COUNTRY_SELECTION);
				
				if(!empty($dfltCountry))
				{
					$this->memberData["mm_field_shipping_country"] = $dfltCountry;
				}
				else
				{
					$this->memberData["mm_field_shipping_country"] = MM_CountryUtils::$DFLT_COUNTRY_ISO;
				}
			}
	
			$this->shippingCountryList = MM_HtmlUtils::getCountryList($this->memberData["mm_field_shipping_country"]);
      		$this->shippingCountrySubdivisionList = $this->billingCountrySubdivisionList;
		}
		else
		{
			$this->isValid = false;
			$this->error = $executionStatus->message;
		}
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at 
	 * the top of the form based on the the current configuration.
	 * @return String header HTML for the checkout form
	 */
	public function generateFormHeader()
	{
		$str = "";
		
		$str .= $this->getJavascriptIncludes();
		
		$str .= "<form id='mm_checkout_form' name='mm_checkout_form' action='{$this->processOrderUrl}' ";
		
		if($this->onSubmitCode != "")
		{
			$str .= $this->onSubmitCode;
		}
		else
		{
			$str .= "onsubmit=\"return false;\"";
		} 
		
		$str .= " method='post'>"; 
		$str .= "<input type='hidden' id='mm_membership_level_id' name='mm_membership_level_id' value='{$this->membershipLevelId}' />";
		$str .= "<input type='hidden' id='mm_product_id' name='mm_product_id' value='{$this->productId}' />";
		$str .= "<input type='hidden' id='mm_is_member' name='mm_is_member' value='".(($this->isMember == true) ? "1" : "0")."' />";
		$str .= "<input type='hidden' id='mm_field_user_id' name='mm_field_user_id' value='".(($this->isMember == true) ? $this->memberData["mm_field_user_id"] : "0")."' />";
		$str .= "<input type='hidden' id='mm_is_free' name='mm_is_free' value='".(($this->isFree == true) ? "1" : "0")."' />";
	   	$str .= "<input type='hidden' id='mm_is_gift' name='mm_is_gift' value='".(($this->isGift == true) ? "1" : "0")."' />";
		$str .= "<input type='hidden' id='mm_is_shippable' name='mm_is_shippable' value='".(($this->isShippable == true) ? "1" : "0")."' />";
		$str .= "<input type='hidden' id='mm_checkout_url' name='mm_checkout_url' value='{$this->crntPageURL}' />";
		$str .= "<input type='hidden' id='mm_checkout_debug_mode' name='mm_checkout_debug_mode' value='{$this->debugMode}' />";
	   	$str .= "<input type='hidden' id='mm_field_payment_service' name='mm_field_payment_service' />"; 
	   	$str .= "<input type='hidden' id='mm_field_billing_equals_shipping' name='mm_field_billing_equals_shipping' value='".(($this->shippingSameAsBilling == true) ? "1" : "0")."' />";
		$str .= "<input type='hidden' id='mm_is_admin' value='".((MM_Employee::isEmployee() == true || current_user_can('manage_options')) ? "1" : "0")."' />";
		$str .= "<input type='hidden' id='mm_is_customer_support_order' name='mm_is_customer_support_order' value='".(($this->isCustomerSupportOrder == true) ? "1" : "0")."' />";
		$str .= "<input type='hidden' id='mm_data_product_price' value='".(($this->productPrice == "" || strtolower($this->productPrice) == "free") ? _mmf(0.00) : $this->productPrice)."' />";
		$str .= "<input type='hidden' id='mm_data_shipping_price' value='0' />";
		$str .= "<input type='hidden' id='mm_data_discount' value='0' />";
		$str .= "<input type='hidden' id='mm_do_comp' value='0' />";
		$str .= "<input type='hidden' id='hasFormSubmitted' value='' />";
		
		if(isset($this->affiliateId) && $this->affiliateId != "") 
		{
			$str .= "<input type='hidden' name='mm_field_affiliate_id' value='{$this->affiliateId}'/>";
		}
		
		if(isset($this->subAffiliateId) && $this->subAffiliateId != "") 
		{
			$str .= "<input type='hidden' name='mm_field_sub_affiliate_id' value='{$this->subAffiliateId}'/>";
		}
		
		if(!$this->firstBtnPaymentSerivceSet)
		{
			$str .= "<p class=\"mm-formError\">Missing Payment Method: No payment methods have been configured for this site.</p>";
		}
		
		return $str;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at
	 * the bottom of the form based on the the current configuration.
	 * 
	 * @return String footer HTML for the checkout form
	 */
	public function generateFormFooter()
	{
		$str = "";
		
		// add fields to ignore
		foreach ($this->ignoreFields as $field)
		{
			// credit card info and email address can't be ignored
			if(isset($field->name) && $field->name != "email" && $field->name != "cc_number"
					&& $field->name != "cc_exp_month" && $field->name != "cc_exp_year" && $field->name != "cc_cvv")
			{
				$value = "";
					
				if(isset($field->value))
				{
					$value = $field->value;
				}
					
				$str .= "<input type='hidden' id='mm_field_{$field->name}_override' name='mm_field_{$field->name}_override' value='{$value}' />
";
			}
		}
		
		// add optional fields
		foreach ($this->optionalFields as $field)
		{
			// credit card info and email address can't be optional
			if(isset($field->name) && $field->name != "email" && $field->name != "cc_number"
					&& $field->name != "cc_exp_month" && $field->name != "cc_exp_year" && $field->name != "cc_cvv")
			{		
				$str .= "<input type='hidden' id='mm_field_{$field->name}_optional' name='mm_field_{$field->name}_optional' />
";
			}
		}
		   
		$str .= "<div style=\"border: 0 none; height: 0; width: 0; padding: 0; margin: 0; overflow: hidden;\"><input type=\"submit\" tabindex=\"-1\"/></div>
";
		
		$formId = MM_Utils::createRandomString(10);
		$str .= "<input type='hidden' id='mm_submission_mutex' name='mm_submission_mutex' value='{$formId}' />";
		$str .= "</form>
";
		$str .= $this->getInitJavascript($this->memberData);
	
		
		$str.= $this->getTestModeBanner();
		return $str;
	}
	
	/**
	 * This function returns the include statements for required javascript files.
	 * @param enqueueScripts indicates which method to use for including the javascript files
	 * @return String that contains the javascript for including required javascript files.
	 */
	public function getJavascriptIncludes($enqueueScripts=true)
	{
		$userCSSDir = MM_PLUGIN_NAME."/resources/css/user/";
		$userJSDir = MM_PLUGIN_NAME."/resources/js/user/";
		$commonJSDir = MM_PLUGIN_NAME."/resources/js/common/";

		$testModeCSS = plugins_url("{$userCSSDir}mm-testmode.css");
		$checkoutCSS = plugins_url("{$userCSSDir}mm-checkout.css");
		$checkoutJS = plugins_url("{$userJSDir}mm-checkout-form.js");
		$jQueryBlockUI = plugins_url("{$commonJSDir}jquery.blockUI.js");

		$version = MemberMouse::getPluginVersion();
		
		$useMMCSS = (MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_MM_CSS_CHECKOUT) == "1") ? true : false;
		
		if($enqueueScripts)
		{	
			if($useMMCSS)
			{
				wp_enqueue_style("membermouse-checkout-css", $checkoutCSS, array(), $version);
			}
			
			// No need to add this style sheet if test mode is not enabled.
			if($this->isTestModeAlwaysOverriden() || $this->isTestModeKeyOverriden())
			{
				wp_enqueue_style("membermouse-checkout-testmode-css", $testModeCSS, array(), $version);
			}
			
			wp_enqueue_script("membermouse-checkout-form", $checkoutJS, array(), $version, true);
			wp_enqueue_script("membermouse-blockUI", $jQueryBlockUI, array(), $version, true);
		}
		else
		{
			$str = "";
			
			if($useMMCSS)
			{
				$str .= "<link rel='stylesheet' type='text/css' href='".$checkoutCSS.'?ver='.$version."' />
";
			}
			
			$str .= '<script type="text/javascript" src="'.$jQueryBlockUI.'?ver='.$version.'"></script>
';
			$str .= '<script type="text/javascript" src="'.$checkoutJS.'?ver='.$version.'"></script>
';
			return $str;
		}
	} 
	
	private function isTestModeKeyOverriden(){
		if( MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE) == MM_TestPaymentService::$MODE_OVERRIDE_WITH_KEY ||
				MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE) == MM_TestPaymentService::$MODE_PRODUCTION_OVERRIDE_WITH_KEY
				)
		{
			return true;
		}
		return false;
	}
	
	private function isTestModeAlwaysOverriden(){
		$testPaymentService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$TEST_SERVICE_TOKEN);
		if($testPaymentService->getMode() == MM_TestPaymentService::$MODE_ALWAYS_OVERRIDE &&
				$testPaymentService->isActive()
				)
		{
			return true;
		}
		return false;
	}
	
	/*
	 * Puts banner on site indicating test mode is activated.
	 * @return String of the html div containing the banner if activated, otherwise empty string.
	 */ 
	private function getTestModeBanner(){
		$banner = "";
		if($this->isTestModeAlwaysOverriden())
		{
			$banner = '
			<div id="mm-testmode-container">
				<a id="mm-testmode">Test Service is Activated.</a> 
			</div>';
		}
		else if($this->isTestModeKeyOverriden())
		{
			$rid = "";
			if(isset($_GET["rid"])){
				if(preg_match("/^[a-zA-Z0-9]+$/",$_GET["rid"]))
				{
					$rid = "rid=".$_GET["rid"]."&";
				}
			}
			
			$banner = '
			<div id="mm-testmode-container">
				<a href="?'.$rid.'pso=off" id="mm-testmode">Test Service is Activated. <u>Click Here</u> to turn it off.</a> 
			</div>';
		}
		return $banner;
	}
	
	/**
	 * This function returns the javascript to initialize the checkout form. 
	 * @param array $defaultData this contains the default data used to prepopulate certain form elements
	 * @return String that contains the javascript to initializes the checkout form.
	 */
	public function getInitJavascript($defaultData)
	{
		$str = "<script>\n";
		$str .= "jQuery(function() {\n";
		$str .= "mmjs.toggleShippingInfo();\n";
		$str .= "mmjs.toggleGiftSection();\n";
/*
		$str .= "mmjs.countryChangeHandler(\"billing\");\n";
		$str .= "mmjs.countryChangeHandler(\"shipping\");\n";
*/
		$str .= "mmjs.shippingMethodChangeHandler();\n";
		$str .= "mmjs.discountChangeHandler(mmjs.formatMoney(\"0.00\"));\n";
		
		if(!$this->isFree) 
		{
			$str .= "mmjs.applyCoupon();\n";
		}
		$str .= "jQuery('#mm_field_payment_service').val('');\n";
		$str .= "});\n";
		$str .= "var mm_nonce_name_checkout_form = '" . MM_View::$MM_NONCE_NAME_CHECKOUT_FORM . "';\n";
		$str .= "</script>\n";
		
		return $str;
	}
	
	/**
	 * This function processes the MM_Form_Section tag. It is responsible for checking if the current user 
	 * should see the contents of this section based on the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_section($content, $atts, $code)
	{
		$outputStr = "";
		
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
		
		if(isset($type))
		{
			$this->onsiteService = MM_PaymentServiceFactory::getOnsitePaymentService();
			
			if($this->onsiteService && $this->onsiteService->isActive())
			{
				$onsiteServiceActive = true;
			}
			else
			{
				$onsiteServiceActive = false;
			}
			
			switch(strtolower($type))
			{
				case "accountinfo":
					$outputStr .= "<div ".(($form->isMember == true && !$form->isCustomerSupportOrder) ? "style=\"display:none;\"" : "").">
";
					break;
					
				case "billinginfo":
					$outputStr .= "<div ".(($form->isFree == true || $onsiteServiceActive == false) ? "style=\"display:none;\"" : "").">
";
					break;
					
				case "shippinginfo":
					$outputStr .= "<div ".(($form->isShippable == false) ? "style=\"display:none;\"" : "").">
";
					break;
					
				case "giftinfo":
					$outputStr .= "<div id=\"mm-gift-info-block\" ".(($form->isGift == false) ? "style=\"display:none;\"" : "").">
";
					break;
					
				case "shippingaddress":
					$outputStr .= "<div id=\"mm-shipping-info-block\" style=\"display:none;\">
";
					break;
					
				case "coupon":
					$outputStr .= "<div ".(($form->isFree || !$form->couponsAvailable) ? "style=\"display:none;\"" : "").">
";
					break;
					
				default:
					return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}.";
					break;
			}
				
			$outputStr .= do_shortcode($content)."</div>
";
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for SmartTag {$code}.";
		}
	}
	
	/**
	 * This function processes the MM_Form_Field tag. It is responsible for rendering the 
	 * form field based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_field($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
		 
		if(!isset($type))
		{
			$type = "input";
		}
		
		if(!isset($class) || empty($class))
		{
			$class = "mm-textField";
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
			$customattributes = "";
		}
		
		switch(strtolower($type))
		{
			case "input":
				if(isset($name))
				{
					$name = strtolower($name);
					if($name == "captcha")
					{
						$siteKey 	= MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_CAPTCHA_KEY);
						$privateKey = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_CAPTCHA_PRIVATE_KEY);
					
						if(!empty($siteKey) && !empty($privateKey))
						{	
							$outputStr .= "
								<div class=\"g-recaptcha\" data-sitekey=\"{$siteKey}\"></div>
								<script type=\"text/javascript\" src=\"https://www.google.com/recaptcha/api.js\"></script>
							";	
						}
						else
						{
							$outputStr .= "Invalid Captcha Configuration";
						}
					}
					else 
					{
						// add optional fields to ignoreFields array when $isrequired is set to false
						$optionalFields = array("firstname","lastname","phone","password","billingaddress","billingcity",
								"billingstate","billingzipcode","billingcountry","shippingaddress","shippingcity","shippingstate",
								"shippingzipcode","shippingcountry","shippingmethod");
						
						if(in_array($name, $optionalFields) && isset($isrequired) && $isrequired == "false")
						{
							$field = new stdClass();
							
							switch(strtolower($name))
							{
								case "firstname":
									$field->name = "first_name";
									break;
							
								case "lastname":
									$field->name = "last_name";
									break;
							
								case "password":
									$field->name = "password";
									break;
							
								case "phone":
									$field->name = "phone";
									break;
							
								case "billingaddress":
									$field->name = "billing_address";
									break;
							
								case "billingcity":
									$field->name = "billing_city";
									break;
							
								case "billingstate":
									$field->name = "billing_state";
									break;
							
								case "billingzipcode":
									$field->name = "billing_zip";
									break;
							
								case "billingcountry":
									$field->name = "billing_country";
									break;
							
								case "shippingaddress":
									$field->name = "shipping_address";
									break;
							
								case "shippingcity":
									$field->name = "shipping_city";
									break;
							
								case "shippingstate":
									$field->name = "shipping_state";
									break;
							
								case "shippingzipcode":
									$field->name = "shipping_zip";
									break;
							
								case "shippingcountry":
									$field->name = "shipping_country";
									break;
							}
								
							array_push($form->optionalFields, $field);
						}
						
						$outputStr = self::generateInputFormField($name, $form->memberData, $form, $class, $customattributes, $atts);
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code} with type {$type}.";
				}
				
				break;
				
			case "custom":
			case "custom-hidden":
				if(isset($id))
				{
					$customField = MM_CustomField::getDataByFieldId($id);
						
					if($customField->isValid())
					{
						$crntValue = "";
						if(isset($form->memberData["mm_custom_field_{$id}"]) && $form->memberData["mm_custom_field_{$id}"] != "")
						{
							$crntValue = $form->memberData["mm_custom_field_{$id}"];
						}
						
						if($type == "custom-hidden")
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}' name='mm_custom_field_{$id}' ";
							$outputStr .= "value='".htmlentities(stripslashes($crntValue), ENT_QUOTES, "UTF-8")."' ";								
							$outputStr .= "/>
";
						}
						else
						{
							$outputStr .= $customField->draw($crntValue, $class);
							
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_type' ";
							$outputStr .= "value='".$customField->getType()."' ";
							$outputStr .= "/>
";
						}
						
						$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_label' ";

						if(isset($form->memberData["mm_custom_field_{$id}_label"]))
						{
							$outputStr .= "value='".htmlentities(stripslashes($form->memberData["mm_custom_field_{$id}_label"]), ENT_QUOTES, "UTF-8")."' ";
						}
					
						$outputStr .= "/>
";
						if(isset($isrequired) && strtolower($isrequired) == "true")
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_required' value='1' />
";
						}
						else
						{
							$outputStr .= "<input type='hidden' id='mm_custom_field_{$id}_required' value='0' />
";
						}
					}
					else
					{
						$outputStr .= "Invalid custom field ID of '{$id}' passed to SmartTag {$code}";
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'id' attribute is required for SmartTag {$code} with type {$type}.";
				}
					
				break;
					
			case "hidden":
				$validFieldNames = "firstname,lastname,phone,password,billingaddress,billingcity,billingstate,billingzipcode,billingcountry,
					shippingaddress,shippingcity,shippingstate,shippingzipcode,shippingcountry,shippingmethod";
					
				if(isset($name))
				{
					$name = strtolower($name);
					
					if(strpos($validFieldNames, $name) !== false)
					{
						$field = new stdClass();
						
						switch(strtolower($name))
						{
							case "firstname":
								$field->name = "first_name";
								break;
								
							case "lastname":
								$field->name = "last_name";
								break;
								
							case "password":
								$field->name = "password";
								break;
								
							case "phone":
								$field->name = "phone";
								break;
								
							case "billingaddress":
								$field->name = "billing_address";
								break;
								
							case "billingcity":
								$field->name = "billing_city";
								break;
								
							case "billingstate":
								$field->name = "billing_state";
								break;
								
							case "billingzipcode":
								$field->name = "billing_zip";
								break;
								
							case "billingcountry":
								$field->name = "billing_country";
								break;
								
							case "shippingaddress":
								$field->name = "shipping_address";
								break;
								
							case "shippingcity":
								$field->name = "shipping_city";
								break;
								
							case "shippingstate":
								$field->name = "shipping_state";
								break;
								
							case "shippingzipcode":
								$field->name = "shipping_zip";
								break;
								
							case "shippingcountry":
								$field->name = "shipping_country";
								break;
								
							case "shippingmethod":
								$field->name = "shipping_method";
								break;
						}
				
						if(isset($value))
						{
							$field->value = $value;
						}
					
						array_push($form->ignoreFields, $field);
					}
					else
					{
						return "Invalid SmartTag Configuration: Invalid name of '{$name}' passed to SmartTag {$code} with type '{$type}'.";
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code} with type '{$type}'.";
				}
				
				break;
				
			default:
				return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}";
				break;
		}
			 
		return $outputStr;
	}
	
	public static function generateInputFormField($name, $defaultData, $form=null, $customCssClass="mm-textField", $customAttributes="", $atts=null)
	{
		$outputStr = "";
		$lowerName = strtolower($name);
		
		switch($lowerName)
		{
			case "firstname":
				$outputStr .= "<input type='text' id='mm_field_first_name' name='mm_field_first_name' value='".htmlentities(stripslashes($defaultData["mm_field_first_name"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "lastname":
				$outputStr .= "<input type='text' id='mm_field_last_name' name='mm_field_last_name' value='".htmlentities(stripslashes($defaultData["mm_field_last_name"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "email":
				$outputStr .= "<input type='text' id='mm_field_email' name='mm_field_email' value='".htmlentities(stripslashes($defaultData["mm_field_email"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "email-confirm":
				$outputStr .= "<input type='text' id='mm_field_email_confirm' name='mm_field_email_confirm' value='".htmlentities(stripslashes($defaultData["mm_field_email_confirm"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "username":
				$outputStr .= "<input type='text' id='mm_field_username' name='mm_field_username' value='".htmlentities(stripslashes($defaultData["mm_field_username"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "password":
				$outputStr .= "<input type='password' autocomplete='off' id='mm_field_password' name='mm_field_password' class='{$customCssClass}' ";
				
				if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
				{
					$outputStr .= "value='".$defaultData["mm_field_password"]."' ";
				}
				
				$outputStr .= " {$customAttributes} />\n";
				break;
					
			case "phone":
				$outputStr .= "<input type='text' onkeydown=\"return mmjs.onlyNumbers(event,'phone')\" id='mm_field_phone' name='mm_field_phone' value='{$defaultData["mm_field_phone"]}' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "billingaddress":
				$outputStr .= "<input type='text' id='mm_field_billing_address' name='mm_field_billing_address' value='".htmlentities(stripslashes($defaultData["mm_field_billing_address"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "billingcity":
				$outputStr .= "<input type='text' id='mm_field_billing_city' name='mm_field_billing_city' value='".htmlentities(stripslashes($defaultData["mm_field_billing_city"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "billingstate":
			
				$defaultCountry = null;
				
				if(isset($defaultData["mm_field_billing_country"]) && in_array($defaultData["mm_field_billing_country"], MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_COUNTRY_SELECTIONS)))
				{
					$defaultCountry = $defaultData["mm_field_billing_country"];
				}
				elseif(in_array(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_COUNTRY_SELECTION), MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_COUNTRY_SELECTIONS)))
				{
					$defaultCountry = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_COUNTRY_SELECTION);
				}
				else
				{
					$defaultCountry = array_values(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_COUNTRY_SELECTIONS));
					$defaultCountry = $defaultCountry[0];
				}
			
				$defaultData["mm_field_billing_country"] = $defaultCountry;
				
				$billingCountrySubdivisionList = MM_CountrySubdivisionUtils::getCountrySubdivsionList($defaultData["mm_field_billing_country"]);
				if(isset($billingCountrySubdivisionList[$defaultData["mm_field_billing_country"]]) && is_array($billingCountrySubdivisionList[$defaultData["mm_field_billing_country"]]))
				{
					if($code = array_search(strtolower($defaultData["mm_field_billing_state"]), array_map('strtolower',$billingCountrySubdivisionList[$defaultData["mm_field_billing_country"]])))
					{
						$defaultData["mm_field_billing_state"] = $code;
					}
				}

				foreach($billingCountrySubdivisionList as $iso => $country_subdivisions)
				{
					$outputStr .= "<select id='mm_field_billing_state_dd' size='1' onchange=\"mmjs.stateChangeHandler('billing');\" class=\"mm-selectList billing_country_subdivisions\" {$customAttributes}>\n";
					$outputStr .= "<option value=''>"._mmt("Please select your state")."</option>";

					foreach($country_subdivisions as $country_subdivision_code => $country_subdivision_name)
					{
					$outputStr .= "<option value='{$country_subdivision_code}'".((htmlentities(stripslashes($defaultData["mm_field_billing_state"]), ENT_QUOTES, "UTF-8") == $country_subdivision_code) ? " selected='selected'" : "").">{$country_subdivision_name}</option>\n";

						// If we don't have default billing state already chosen by the user, let's set
						// the default billing state to the first option in the state drop down menu
						// 2016-02-26 - removed as default selection is now empty string.
//						if(!trim($defaultData["mm_field_billing_state"]))
//						{
//							$defaultData["mm_field_billing_state"] = $country_subdivision_code;
//						}
					}

					$selectOther = ($iso == $defaultData["mm_field_billing_country"] && htmlentities(stripslashes($defaultData["mm_field_billing_state"]), ENT_QUOTES, "UTF-8") && !isset($billingCountrySubdivisionList[$defaultData["mm_field_billing_country"]][$defaultData["mm_field_billing_state"]])) ? true : false;

					$outputStr .= "<option value='-1'".(($selectOther == true) ? " selected='selected'" : "").">Other...</option>\n";
					$outputStr .= "</select>\n";
				}

				if (empty($billingCountrySubdivisionList))
				{
					$selectOther = true;
					$outputStr .= "<select id='mm_field_billing_state_dd' size='1' onchange=\"mmjs.stateChangeHandler('billing');\" class=\"mm-selectList billing_country_subdivisions\" {$customAttributes}>\n";
					$outputStr .= "<option value=''>"._mmt("Please select your state")."</option>";
					$outputStr .= "<option value='-1'".(($selectOther == true) ? " selected='selected'" : "").">Other...</option>\n";
					$outputStr .= "</select>\n";
				}
				$outputStr .= "<input type='text' id='mm_field_billing_state' name='mm_field_billing_state' value='".htmlentities(stripslashes($defaultData["mm_field_billing_state"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} ".(($selectOther == true) ? "" : "style='display:none;' ")."/>\n";
				break;
					
			case "billingzipcode":
				$outputStr .= "<input type='text' id='mm_field_billing_zip' name='mm_field_billing_zip' value='".htmlentities(stripslashes($defaultData["mm_field_billing_zip"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "billingcountry":
				$outputStr .= "<select id='mm_field_billing_country' name='mm_field_billing_country' onchange=\"mmjs.countryChangeHandler('billing');\" class=\"mm-selectList\" {$customAttributes}>\n";
				$outputStr .= $form->billingCountryList;
				$outputStr .= "</select>\n";
				break;
					
			case "shippingaddress":
				$outputStr .= "<input type='text' id='mm_field_shipping_address' name='mm_field_shipping_address' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_address"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "shippingcity":
				$outputStr .= "<input type='text' id='mm_field_shipping_city' name='mm_field_shipping_city' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_city"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "shippingstate":
				
				$defaultCountry = null;
			
				if(isset($defaultData["mm_field_shipping_country"]) && in_array($defaultData["mm_field_shipping_country"], MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_COUNTRY_SELECTIONS)))
				{
					$defaultCountry = $defaultData["mm_field_shipping_country"];
				}
				elseif(in_array(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_COUNTRY_SELECTION), MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_COUNTRY_SELECTIONS)))
				{
					$defaultCountry = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_DFLT_COUNTRY_SELECTION);
				}
				else
				{
					$defaultCountry = array_values(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_COUNTRY_SELECTIONS));
					$defaultCountry = $defaultCountry[0];
				}
		
				$defaultData["mm_field_shipping_country"] = $defaultCountry;
			
				$shippingCountrySubdivisionList = MM_CountrySubdivisionUtils::getCountrySubdivsionList($defaultData["mm_field_shipping_country"]);
				if (is_array ( $shippingCountrySubdivisionList [$defaultData ["mm_field_shipping_country"]] ))
				{
		      		if($code = array_search(strtolower($defaultData["mm_field_shipping_state"]), array_map('strtolower',$shippingCountrySubdivisionList[$defaultData["mm_field_shipping_country"]])))
		      		{
		        			$defaultData["mm_field_shipping_state"] = $code;
		      		}
				}
				foreach($shippingCountrySubdivisionList as $iso => $country_subdivisions)
      		{
        			$outputStr .= "<select id='mm_field_shipping_state_dd' size='1' onchange=\"mmjs.stateChangeHandler('shipping');\" class=\"mm-selectList shipping_country_subdivisions\" {$customAttributes}>\n";
        			$outputStr .= "<option value=''>"._mmt("Please select your state")."</option>";
        		 	foreach($country_subdivisions as $country_subdivision_code => $country_subdivision_name)
        		 	{
          		  	$outputStr .= "<option value='{$country_subdivision_code}'".((htmlentities(stripslashes($defaultData["mm_field_shipping_state"]), ENT_QUOTES, "UTF-8") == $country_subdivision_code) ? " selected='selected'" : "").">{$country_subdivision_name}</option>\n";
					  
						// If we don't have default shipping state already chosen by the user, let's set 
						// the default shipping state to the first option in the state drop down menu
						// default should be empty
// 						if(!trim($defaultData["mm_field_shipping_state"]))
// 						{
// 							$defaultData["mm_field_shipping_state"] = $country_subdivision_code;
// 						}
        			}
					
					$selectOther = ($iso == $defaultData["mm_field_shipping_country"] && htmlentities(stripslashes($defaultData["mm_field_shipping_state"]), ENT_QUOTES, "UTF-8") && !isset($shippingCountrySubdivisionList[$defaultData["mm_field_shipping_country"]][$defaultData["mm_field_shipping_state"]])) ? true : false;
					
        		 	$outputStr .= "<option value='-1'".(($selectOther == true) ? " selected='selected'" : "").">Other...</option>\n";
       		  	$outputStr .= "</select>\n";
      		}
				$outputStr .= "<input type='text' id='mm_field_shipping_state' name='mm_field_shipping_state' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_state"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} ".(($selectOther == true) ? "" : "style='display:none;' ")."/>\n";
				break;
					
			case "shippingzipcode":
				$outputStr .= "<input type='text' id='mm_field_shipping_zip' name='mm_field_shipping_zip' value='".htmlentities(stripslashes($defaultData["mm_field_shipping_zip"]), ENT_QUOTES, "UTF-8")."' class='{$customCssClass}' {$customAttributes} />\n";
				break;
					
			case "shippingcountry":
				$outputStr .= "<select id='mm_field_shipping_country' name='mm_field_shipping_country' onchange=\"mmjs.countryChangeHandler('shipping');\" class=\"mm-selectList\" {$customAttributes}>\n";
				$outputStr .= $form->shippingCountryList;
				$outputStr .= "</select>\n";
				break;
					
			case "ccnumber": 
					$eventHandlerName = (MM_Utils::isAndroid())?"onkeyup":"onkeydown";
					$outputStr .= "<input type='text' maxlength='16' {$eventHandlerName}=\"return mmjs.onlyNumbers(event,'cc')\" id='mm_field_cc_number' autocomplete='off' name='mm_field_cc_number' class='{$customCssClass}' {$customAttributes} ";
					
					if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
					{
						$outputStr .= "value='".$defaultData["mm_field_cc_number"]."'";
					}
					
					$outputStr .= "/>\n";
				break;
					
			case "ccexpirationdate":
				if(isset($defaultData["mm_field_cc_exp_month"]) && $defaultData["mm_field_cc_exp_month"] != "")
				{
					$ccExpMonth = $defaultData["mm_field_cc_exp_month"];
				}
				else
				{
					$ccExpMonth = 0;
				}
					
				$outputStr .= "<select name='mm_field_cc_exp_month' id='mm_field_cc_exp_month'  class=\"mm-selectList mm-expMonthList\">\n";
				$outputStr .= MM_HtmlUtils::getCCExpMonthList($ccExpMonth);
				$outputStr .= "</select>";
				$outputStr .= "<select name='mm_field_cc_exp_year' id='mm_field_cc_exp_year' class=\"mm-selectList mm-expYearList\">\n";
				if(isset($defaultData["mm_field_cc_exp_year"]) && $defaultData["mm_field_cc_exp_year"] != "")
				{
					$ccExpYear = $defaultData["mm_field_cc_exp_year"];
				}
				else
				{
					$ccExpYear = 0;
				}
					
				$outputStr .= MM_HtmlUtils::getCCExpYearList($ccExpYear);
					
				$outputStr .= "</select>\n";
				break;
					
			case "ccsecuritycode":
				$eventHandlerName = (MM_Utils::isAndroid())?"onkeyup":"onkeydown";
				$outputStr .= "<input autocomplete='off' type='password' maxlength='4' {$eventHandlerName}=\"return mmjs.onlyNumbers(event,'cc')\" id='mm_field_cc_cvv' name='mm_field_cc_cvv' class='{$customCssClass}' ";
				
				if(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_CHECKOUT_FORM_TEST_DATA) == "1")
				{
					$outputStr .= "value='".$defaultData["mm_field_cc_cvv"]."'";
				}
				
				$outputStr .= " {$customAttributes} />\n";
				break;
					
			case "shippingmethod":
				if(!is_null($atts) && is_array($atts) && count($atts) > 0)
				{
					foreach($atts as $k=>$v)
					{
						$key = strtolower($k);
						$$key = $v;
					}
				}
				
				$selectedShippingMethod = $defaultData["mm_field_shipping_method"];
				
				if(empty($selectedShippingMethod) && isset($default))
				{
					$selectedShippingMethod = $default;	
				}
				
				$form->shippingMethods = MM_HtmlUtils::getShippingMethodList($selectedShippingMethod);
				
				$outputStr .= "<select id='mm_field_shipping_method' name='mm_field_shipping_method' onchange='mmjs.shippingMethodChangeHandler();' class=\"mm-selectList\" {$customAttributes}>\n";
				$outputStr .= $form->shippingMethods;
				$outputStr .= "</select>\n";
				break;
					
			case "shippingsameasbilling":
				$outputStr .= "<input type='checkbox' id='mm_checkbox_billing_equals_shipping' ".(($form->shippingSameAsBilling) ? "checked" : "")." onclick='mmjs.toggleShippingInfo();' class=\"mm-radioButton\" {$customAttributes} />\n";
				break;
					
			case "couponcode":
				$outputStr .= "<input type='text' id='mm_field_coupon_code' name='mm_field_coupon_code' value='".htmlentities(stripslashes($defaultData["mm_field_coupon_code"]), ENT_QUOTES, "UTF-8")."' onkeydown='return mmjs.couponCheck(event);' class='{$customCssClass}' {$customAttributes} />\n";
				break;
				
			case "gift":
				$outputStr .= "<input type='checkbox' id='mm_checkbox_is_gift'".(($form->isGift) ? "checked" : "")." onclick='mmjs.toggleGiftSection();' class=\"mm-radioButton\" {$customAttributes} />\n";
				break;
		}
		
		if (in_array($lowerName,array('ccnumber','ccexpirationdate','ccsecuritycode')))
		{
		    $onsiteService = MM_PaymentServiceFactory::getOnsitePaymentService();
		    if (($onsiteService != null) && ($onsiteService instanceof MM_PaymentService) && $onsiteService->hasHostedPaymentFields())
		    {
		        $newOutputStr = $onsiteService->formFieldOverride('checkout',$lowerName);
		        if ($newOutputStr !== false)
		        {
		            $outputStr = $newOutputStr;
		        }
		    }
		}
		
		return $outputStr;
	}
	
	/**
	 * This function processes the MM_Form_Data tag. It is responsible for rendering the 
	 * data element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_data($content, $atts, $code)
	{
		$outputStr = "<span class=\"mm-data\">";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($name))
		{
			switch(strtolower($name))
			{
				case "productname":
					$useAccessName = true;
					if(isset($useaccessname))
					{
						if($useAccessName == "false")
						{
							$useAccessName = false;
						}
					}
					
					if($useAccessName == true || empty($form->productName))
					{
						$outputStr .= $form->accessName;
					}
					else
					{
						$outputStr .= $form->productName;
					}
					break;
					
				case "productdescription":
					$outputStr .= $form->productDescription;
					break;
					
				case "productprice":
					$outputStr .= $form->productPrice;
					break;
					
				case "productpricedescription":
					$outputStr .= $form->productPriceDescription;
					break;
					
				case "shippingprice":
					$outputStr .= "<span id=\"mm_label_shipping_price\"></span>";
					break;
					
				case "discount":
					$outputStr .= "<span id=\"mm_label_discount\"></span>";
					break;
					
				case "totalprice":
					$outputStr .= "<span id=\"mm_label_total_price\"></span>";
					break;
				
				default:
					return "Invalid name of '{$name}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr."</span>
";
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code}.";
		}
	}
	
	/**
	 * This function processes the MM_Form_Message tag. It is responsible for rendering the 
	 * message element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_message($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "error":
					if($form->error != "")
					{
						$outputStr .= "<p class=\"mm-formError\">"._mmt($form->error)."</p>";
					}
					break;
					
				case "couponsuccess":
					$outputStr .= "<span id=\"mm_label_coupon_success\" class=\"mm-couponSuccessMessage\" style=\"display:none\"></span>";
					break;
					
				case "couponerror":
					$outputStr .= "<span id=\"mm_label_coupon_error\" class=\"mm-couponErrorMessage\" style=\"display:none\"></span>";
					break;
				
				default:
					return "Invalid type of '{$type}' passed to {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
	
	/**
	 * This function processes the MM_Form_Button tag. It is responsible for 
	 * returning the appropriate javascript to submit the form based on the type passed.
	 * 
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_button($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "all":
					if(!isset($label))
					{
						$label = "Submit Order";
					}
					if(!isset($color))
					{
						$color = "white";
					}
					
					// get all active payment service buttons
					// get onsite payment service (if available)
					$overrideMode = MM_Session::value(MM_TestPaymentService::$KEY_PAYMENT_SERVICE_OVERRIDE);
					if ($overrideMode === MM_TestPaymentService::$MODE_OVERRIDE_WITH_KEY)
					{
						$this->onsiteService = MM_PaymentServiceFactory::getPaymentService(MM_PaymentService::$TEST_SERVICE_TOKEN);
					}
					else
					{
						$this->onsiteService = MM_PaymentServiceFactory::getOnsitePaymentService();
						if ($overrideMode === MM_TestPaymentService::$MODE_PRODUCTION_OVERRIDE_WITH_KEY)
						{
							$this->onsiteService->switchToTestMode();
						}
					}
					
					if($this->onsiteService && $this->onsiteService->isActive())
					{
          				$outputStr .= "<p><a href=\"";
						$atts = array("type"=>"submit","isDefault"=>"true");
						$outputStr .= $this->mm_form_button("", $atts, "MM_Form_Button");
						$outputStr .= "\" class=\"mm-button large {$color}\" style=\"width:160px; text-align:center;\">{$label}</a></p>";
						
						//allow onsite payment service to interact with the front end
						//TODO: replace userhooks with init here if possible
						//$this->onsiteService->checkoutInit();
					}
					
					// get offsite payment services
					$services = MM_PaymentServiceFactory::getAvailablePaymentServices();
					
					foreach ($services as $service)
					{
						if ($service instanceof MM_PaymentService)
						{
							if(!$service->supportsFeature(MM_PaymentServiceFeatures::ONSITE_SERVICE))
							{
								switch($service->getToken())
								{
									case MM_PaymentService::$PAYPAL_SERVICE_TOKEN:
										$outputStr .= "<p><a href=\"";
										$atts = array("type"=>"submit","paymentMethod"=>strtolower($service->getToken()));
										$outputStr .= $this->mm_form_button("", $atts, "MM_Form_Button");
										$outputStr .= "\" class=\"mm-paypalCheckoutBtn\"></a></p>";
										break;
										
									case MM_PaymentService::$COINBASE_SERVICE_TOKEN:
										$outputStr .= "<p><a href=\"";
										$atts = array("type"=>"submit","paymentMethod"=>strtolower($service->getToken()));
										$outputStr .= $this->mm_form_button("", $atts, "MM_Form_Button");
										$outputStr .= "\" class=\"mm-coinbaseCheckoutBtn\"></a></p>";
										break;
										
									case MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN:
										$outputStr .= "<p><a href=\"";
										$atts = array("type"=>"submit","paymentMethod"=>strtolower($service->getToken()));
										$outputStr .= $this->mm_form_button("", $atts, "MM_Form_Button");
										$outputStr .= "\" class=\"mm-coinbaseMinimalCheckoutBtn\"></a></p>";
										break;
										
									case MM_PaymentService::$CLICKBANK_SERVICE_TOKEN:
										$outputStr .= "<p><a href=\"";
										$atts = array("type"=>"submit","paymentMethod"=>strtolower($service->getToken()));
										$outputStr .= $this->mm_form_button("", $atts, "MM_Form_Button");
										$outputStr .= "\" class=\"mm-clickbankCheckoutBtn\"></a></p>";
										break;
								}
								//allow offsite payment services to interact with the front end
								$service->checkoutInit();
							}
						}
					}
					break;
					
				case "submit":
					if(isset($isdefault) && $isdefault == "true")
					{
						$crntBtnIsDefault = true;
					}
					else
					{
						$crntBtnIsDefault = false;
					}
					
					if(isset($paymentmethod) && $paymentmethod != "default")
					{
						if(strtolower($paymentmethod) == strtolower(MM_PaymentService::$PAYPAL_SERVICE_TOKEN))
						{ 
							if($crntBtnIsDefault)
							{
								$this->dfltBtnPaymentServiceSet = true;
								$this->dfltBtnPaymentServiceToken = MM_PaymentService::$PAYPAL_SERVICE_TOKEN;
							}
							 
							if($crntBtnIsDefault || !$this->firstBtnPaymentSerivceSet)
							{ 
								$this->onSubmitCode = "onsubmit=\"return mmjs.checkoutx('".MM_PaymentService::$PAYPAL_SERVICE_TOKEN."', true);\"";
							}
							
							if(!$this->firstBtnPaymentSerivceSet)
							{
								$this->firstBtnPaymentSerivceSet = true;
								$this->firstBtnServiceToken = MM_PaymentService::$PAYPAL_SERVICE_TOKEN;
							}
							$outputStr .= "javascript:mmjs.checkoutx('".MM_PaymentService::$PAYPAL_SERVICE_TOKEN."', true);"; 
						}
						else if(strtolower($paymentmethod) == strtolower(MM_PaymentService::$CLICKBANK_SERVICE_TOKEN))
						{
							if($crntBtnIsDefault)
							{
								$this->dfltBtnPaymentServiceSet = true;
								$this->dfltBtnPaymentServiceToken = MM_PaymentService::$CLICKBANK_SERVICE_TOKEN;
							}
							
							if($crntBtnIsDefault || !$this->firstBtnPaymentSerivceSet)
							{
								$this->onSubmitCode = "onsubmit=\"return mmjs.checkoutx('".MM_PaymentService::$CLICKBANK_SERVICE_TOKEN."', true);\"";
							}
							
							if(!$this->firstBtnPaymentSerivceSet)
							{
								$this->firstBtnPaymentSerivceSet = true;
								$this->firstBtnServiceToken = MM_PaymentService::$CLICKBANK_SERVICE_TOKEN;
							}
							$outputStr .= "javascript:mmjs.checkoutx('".MM_PaymentService::$CLICKBANK_SERVICE_TOKEN."', true);"; 
						}
						else if(strtolower($paymentmethod) == strtolower(MM_PaymentService::$COINBASE_SERVICE_TOKEN))
						{
							if($crntBtnIsDefault)
							{
								$this->dfltBtnPaymentServiceSet = true;
								$this->dfltBtnPaymentServiceToken = MM_PaymentService::$COINBASE_SERVICE_TOKEN;
							}
							
							if($crntBtnIsDefault || !$this->firstBtnPaymentSerivceSet)
							{
								$this->onSubmitCode = "onsubmit=\"return mmjs.checkoutx('".MM_PaymentService::$COINBASE_SERVICE_TOKEN."', true);\"";
							}
							
							if(!$this->firstBtnPaymentSerivceSet)
							{
								$this->firstBtnPaymentSerivceSet = true;
								$this->firstBtnServiceToken = MM_PaymentService::$COINBASE_SERVICE_TOKEN;
							}
							$outputStr .= "javascript:mmjs.checkoutx('".MM_PaymentService::$COINBASE_SERVICE_TOKEN."', true);";
						}
						else if(strtolower($paymentmethod) == strtolower(MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN))
						{
							if($crntBtnIsDefault)
							{
								$this->dfltBtnPaymentServiceSet = true;
								$this->dfltBtnPaymentServiceToken = MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN;
							}
							
							if($crntBtnIsDefault || !$this->firstBtnPaymentSerivceSet)
							{
								$this->onSubmitCode = "onsubmit=\"return mmjs.checkoutx('".MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN."', true);\"";
							}
							
							if(!$this->firstBtnPaymentSerivceSet)
							{
								$this->firstBtnPaymentSerivceSet = true;
								$this->firstBtnServiceToken = MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN;
							}
							$outputStr .= "javascript:mmjs.checkoutx('".MM_PaymentService::$COINBASE_MINIMAL_SERVICE_TOKEN."', true);";
						}
						else
						{
							return "Invalid SmartTag Configuration: Invalid method of '{$paymentmethod}' passed to SmartTag {$code} with type '{$type}'.";
						}
					}
					else
					{
						if($crntBtnIsDefault)
						{
							$this->dfltBtnPaymentServiceSet = true;
							$this->dfltBtnPaymentServiceToken = "";
						}

						if($crntBtnIsDefault || !$this->firstBtnPaymentSerivceSet)
						{
							$this->onSubmitCode = "onsubmit=\"return mmjs.checkout(true);\"";
						}
						
						if(!$this->firstBtnPaymentSerivceSet)
						{
							$this->firstBtnPaymentSerivceSet = true;
							$this->firstBtnServiceToken = ""; 
						}
						$outputStr .= "javascript: mmjs.checkout(true);";
					}
					break;
				
				case "applycoupon":
					$outputStr .= "javascript:mmjs.applyCoupon();";
					break;
					
				default:
					return "Invalid type of '{$type}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
		
	}
}

