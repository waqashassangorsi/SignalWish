/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_TestDataUtils
{
	public static $UNIQUE_TEST_EMAIL_DELIMITER = "__";
	
	
	/**
	 * This function retrieves checkout form test data from the database
	 * @return array an associative array of checkout form test data
	 */
	public static function getCheckoutFormTestData()
	{
		$data = array();
	
		$rawData = MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_CHECKOUT_FORM_TEST_DATA);
	
		if(!empty($rawData))
		{
			$data = $rawData;
		}
	
		return $data;
	}
	
	/**
	 * This function saves checkout form test data in the database
	 * @param array $data an associative array of checkout form test data
	 */
	public static function saveCheckoutFormTestData($data)
	{
		if(!is_null($data) && is_array($data))
		{
			MM_OptionUtils::setOption(MM_OptionUtils::$OPTION_KEY_CHECKOUT_FORM_TEST_DATA, $data);
		}
	}
	
	/**
	 * This function retrieves a single checkout form test data value from the data passed
	 * @param array $data an associative array of checkout form test data
	 * @param array $key the key of the test data to lookup
	 * @return array an associative array of checkout form test data
	 */
	public static function getTestValue($data, $key, $doFormat=false)
	{
		if(!is_null($data) && !empty($key) && isset($data[$key]) && !empty($data[$key]))
		{
			// make email address unique
			if($doFormat)
			{
				global $wpdb;
				$sql = "SELECT MAX(ID) as maxid FROM {$wpdb->users}";
				$result = $wpdb->get_row($sql);
	
				if($result)
				{
					$uniqueId = (intval($result->maxid) + 1);
				}
	
				if(strpos($key, "email") !== false)
				{
					$uniqueEmail = substr_replace($data[$key], self::$UNIQUE_TEST_EMAIL_DELIMITER.$uniqueId, strpos($data[$key], "@"), 0);
					return $uniqueEmail;
				}
				else if(strpos($key, "username") !== false)
				{
					$uniqueUsername = $data[$key].$uniqueId;
					return $uniqueUsername;
				}
				else 
				{
					return $data[$key];
				}
			}
			else
			{
				return $data[$key];
			}
		}
		return "";
	}
	
	/**
	 * This method takes an email address and if the system is currently configured to use test mode,
	 * will replace the delimiter (defined in $UNIQUE_TEST_EMAIL_DELIMITER) in the email address with
	 * a '+' so that the email address is valid but unique and can receive emails. We can't just make the
	 * delimiter '+' because WordPress considers this an illegal character when creating usernames.
	 *
	 * @param String $subjectEmail the email to convert
	 * @return String the original email if not in test mode or if the email is not a variant of the test email or a converted email that replaced the delimiter with a '+'
	 */
	public static function convertTestEmail($subjectEmail)
	{
		$testData = self::getCheckoutFormTestData();
		$testEmail = self::getTestValue($testData, "mm_field_email");
	
		if(!empty($testEmail))
		{
			$delimIndex = strpos($subjectEmail, self::$UNIQUE_TEST_EMAIL_DELIMITER);
			$atIndex = strpos($subjectEmail, "@");
				
			if($delimIndex !== false && $atIndex !== false)
			{
				$pieces = explode(self::$UNIQUE_TEST_EMAIL_DELIMITER, $subjectEmail);
	
				if(count($pieces) == 2)
				{
					$atIndex = strpos($pieces[1], "@");
						
					if($atIndex !== false)
					{
						$modifiedEmail = $pieces[0].substr($pieces[1], $atIndex);
	
						if($modifiedEmail == $testEmail)
						{
							return str_replace(self::$UNIQUE_TEST_EMAIL_DELIMITER, "+", $subjectEmail);
						}
					}
				}
			}
		}
	
		return $subjectEmail;
	}
}
