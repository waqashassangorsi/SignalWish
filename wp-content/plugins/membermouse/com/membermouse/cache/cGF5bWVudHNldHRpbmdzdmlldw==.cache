/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_PaymentSettingsView extends MM_RBACAdminView
{
	public static $MM_JSACTION_SAVE_PAYMENT_OPTIONS = "savePaymentOptions";
	
	public static $MM_JSACTION_PROCESS_INTERMEDIATE_ACTION = "processIntermediateAction";

	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post)
	{
		$response = parent::performAction($post);
	
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION])
			{
				case self::$MM_JSACTION_SAVE_PAYMENT_OPTIONS:
					return $this->savePaymentOptions($post);
				case self::$MM_JSACTION_PROCESS_INTERMEDIATE_ACTION:
					$check = $this->processIntermediateAction($post);
					return $check;
				default:
					return new MM_Response($response);
			}
		}
		else
		{
			return $response;
		}
	}
	
	
	/**
	 * savePaymentOptions receives the configuration settings from the integrations page (payment services settings) and iterates through the payments services, 
	 * calling processConfigOptions on each one, allowing them to save their configuration settings
	 * 
	 * @param Array $post An array containing the data from the payment services settings page
	 * @return MM_Response object indicating success or failure
	 */
	public function savePaymentOptions($post)
	{
		//clear the object cache, since this action invalidates it
		MM_ObjectCache::delete(MM_PaymentServiceFactory::$AVAILABLE_SERVICES_CACHE_KEY);

		if (isset($post['onsite_payment_service']))
		{
			$availablePaymentServices = MM_PaymentServiceFactory::getPaymentServicesArray();
			foreach ($availablePaymentServices as $aService)
			{
				$response = $aService->processConfigOptions($post);
				if (!($response instanceof MM_Response))
				{
					return new MM_Response($aService->getName().":".$response->message,MM_Response::$ERROR);
				}
				if ($response->type == MM_Response::$ERROR)
				{
					return $response;
				}
			}
			//if we reach this point, all the config options were processed successfully
			$total_response = "";
			foreach ($availablePaymentServices as $aService)
			{
				$response = $aService->commitData();
				if (MM_Response::isError($response))
				{
					$total_response .= ($aService->getName().":".$response->message."\n");
				}
			}
			
			if ($total_response != "")
			{
				//this means at least one service had problems during commit, pass back the error messages
				return new MM_Response($total_response, MM_Response::$ERROR);
			}
			//reaching here means all services committed successfully
			return new MM_Response("Payment method settings saved successfully");
		}
		
		return new MM_Response("There was an error saving payment method settings",MM_Response::$ERROR);
	}
	
	
	/**
	 * processIntermediateAction is meant to allow a channel of communication to the payment service classes prior to configuration being completed
	 * An example use case of this might be a service that requires a username and password, and then requires the user to select from multiple accounts associated
	 * with that username and password. This method would send the un/pw to the payment service, which would then connect to the remote server and retrieve a list of accounts,
	 * which would then be returned to the UI where they are presented in a dropdown
	 * 
	 * @param Array $post An array of posted data representing the current state of the configuration form of the payment service requesting the action
	 * @return MM_Response object containing any requested data on success, or a descriptive error message on failure
	 */
	public function processIntermediateAction($post)
	{
		if (!is_array($post) || !isset($post['token']))
		{
			return new MM_Response("Error: improper request sent to processIntermediateAction",MM_Response::$ERROR); //improper configuration
		}
		
		$service = MM_PaymentServiceFactory::getPaymentService(strtoupper($post['token']));
		if (($service ==null) || !($service instanceof MM_PaymentService))
		{
			return new MM_Response("processIntermediateAction error: service not found - {$post['token']}",MM_Response::$ERROR); //improper configuration
		}
		
		return ($service->processIntermediateAction($post));		
	}
	
}
